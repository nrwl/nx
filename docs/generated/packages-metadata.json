[
  {
    "description": "The Nx Plugin for Angular contains executors, generators, and utilities for managing Angular applications and libraries within an Nx workspace. It provides: \n\n- Integration with libraries such as Storybook, Jest, ESLint, Tailwind CSS, Playwright and Cypress. \n\n- Generators to help scaffold code quickly (like: Micro Frontends, Libraries, both internal to your codebase and publishable to npm) \n\n- Single Component Application Modules (SCAMs) \n\n- NgRx helpers. \n\n- Utilities for automatic workspace refactoring.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Angular contains executors, generators, and utilities for managing Angular applications and libraries within an Nx workspace. It provides: \n\n- Integration with libraries such as Storybook, Jest, ESLint, Tailwind CSS, Playwright and Cypress. \n\n- Generators to help scaffold code quickly (like: Micro Frontends, Libraries, both internal to your codebase and publishable to npm) \n\n- Single Component Application Modules (SCAMs) \n\n- NgRx helpers. \n\n- Utilities for automatic workspace refactoring.",
        "file": "generated/packages/angular/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "angular/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/angular/angular-plugin"
      },
      {
        "id": "nx-and-angular",
        "name": "Nx and the Angular CLI",
        "description": "The Nx Plugin for Angular contains executors, generators, and utilities for managing Angular applications and libraries within an Nx workspace. It provides: \n\n- Integration with libraries such as Storybook, Jest, ESLint, Tailwind CSS, Playwright and Cypress. \n\n- Generators to help scaffold code quickly (like: Micro Frontends, Libraries, both internal to your codebase and publishable to npm) \n\n- Single Component Application Modules (SCAMs) \n\n- NgRx helpers. \n\n- Utilities for automatic workspace refactoring.",
        "file": "generated/packages/angular/documents/nx-and-angular",
        "itemList": [],
        "isExternal": false,
        "path": "angular/documents/nx-and-angular",
        "tags": [],
        "originalFilePath": "shared/guides/nx-and-angular-cli"
      },
      {
        "id": "nx-devkit-angular-devkit",
        "name": "Nx Devkit and Angular Devkit",
        "description": "The Nx Plugin for Angular contains executors, generators, and utilities for managing Angular applications and libraries within an Nx workspace. It provides: \n\n- Integration with libraries such as Storybook, Jest, ESLint, Tailwind CSS, Playwright and Cypress. \n\n- Generators to help scaffold code quickly (like: Micro Frontends, Libraries, both internal to your codebase and publishable to npm) \n\n- Single Component Application Modules (SCAMs) \n\n- NgRx helpers. \n\n- Utilities for automatic workspace refactoring.",
        "file": "generated/packages/angular/documents/nx-devkit-angular-devkit",
        "itemList": [],
        "isExternal": false,
        "path": "angular/documents/nx-devkit-angular-devkit",
        "tags": ["create-your-own-plugin"],
        "originalFilePath": "shared/guides/nx-devkit-angular-devkit"
      },
      {
        "id": "angular-nx-version-matrix",
        "name": "Angular and Nx Version Matrix",
        "description": "The Nx Plugin for Angular contains executors, generators, and utilities for managing Angular applications and libraries within an Nx workspace. It provides: \n\n- Integration with libraries such as Storybook, Jest, ESLint, Tailwind CSS, Playwright and Cypress. \n\n- Generators to help scaffold code quickly (like: Micro Frontends, Libraries, both internal to your codebase and publishable to npm) \n\n- Single Component Application Modules (SCAMs) \n\n- NgRx helpers. \n\n- Utilities for automatic workspace refactoring.",
        "file": "generated/packages/angular/documents/angular-nx-version-matrix",
        "itemList": [],
        "isExternal": false,
        "path": "angular/documents/angular-nx-version-matrix",
        "tags": [],
        "originalFilePath": "shared/packages/angular/angular-nx-version-matrix"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "angular",
    "packageName": "@nx/angular",
    "root": "C:/coding-stuff/new-nx/nx/packages/angular",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\angular\\src"
  },
  {
    "description": "This package is used to scaffold a brand-new workspace used to develop an Nx plugin, and sets up a pre-configured plugin with the specified name. The new plugin is created with a default generator, executor, and e2e app.",
    "documents": [],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "create-nx-plugin",
    "packageName": "create-nx-plugin",
    "root": "C:/coding-stuff/new-nx/nx/packages/create-nx-plugin",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\create-nx-plugin\\src"
  },
  {
    "description": "Smart Repos Â· Fast Builds",
    "documents": [],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "create-nx-workspace",
    "packageName": "create-nx-workspace",
    "root": "C:/coding-stuff/new-nx/nx/packages/create-nx-workspace",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\create-nx-workspace\\src"
  },
  {
    "description": "The Nx Plugin for Cypress contains executors and generators allowing your workspace to use the powerful Cypress integration testing capabilities.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Cypress contains executors and generators allowing your workspace to use the powerful Cypress integration testing capabilities.",
        "file": "generated/packages/cypress/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "cypress/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/cypress/cypress-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "cypress",
    "packageName": "@nx/cypress",
    "root": "C:/coding-stuff/new-nx/nx/packages/cypress",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\cypress\\src"
  },
  {
    "description": "The Nx Plugin for Detox contains executors and generators for allowing your workspace to use the powerful Detox integration testing capabilities.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Detox contains executors and generators for allowing your workspace to use the powerful Detox integration testing capabilities.",
        "file": "generated/packages/detox/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "detox/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/detox/detox-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "detox",
    "packageName": "@nx/detox",
    "root": "C:/coding-stuff/new-nx/nx/packages/detox",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\detox\\src"
  },
  {
    "description": "The Nx Devkit is used to customize Nx for different technologies and use cases. It contains many utility functions for reading and writing files, updating configuration, working with Abstract Syntax Trees(ASTs), and more. Learn more about [extending Nx by leveraging the Nx Devkit](https://nx.dev/extending-nx/intro/getting-started) on our docs.",
    "documents": [
      {
        "id": "nx_devkit",
        "name": "Overview",
        "description": "The Nx Devkit is used to customize Nx for different technologies and use cases. It contains many utility functions for reading and writing files, updating configuration, working with Abstract Syntax Trees(ASTs), and more. Learn more about [extending Nx by leveraging the Nx Devkit](https://nx.dev/extending-nx/intro/getting-started) on our docs.",
        "file": "generated/packages/devkit/documents/nx_devkit",
        "itemList": [],
        "isExternal": false,
        "path": "devkit/documents/nx_devkit",
        "tags": [],
        "originalFilePath": "generated/devkit/README"
      },
      {
        "id": "ngcli_adapter",
        "name": "Ng CLI Adapter",
        "description": "The Nx Devkit is used to customize Nx for different technologies and use cases. It contains many utility functions for reading and writing files, updating configuration, working with Abstract Syntax Trees(ASTs), and more. Learn more about [extending Nx by leveraging the Nx Devkit](https://nx.dev/extending-nx/intro/getting-started) on our docs.",
        "file": "generated/packages/devkit/documents/ngcli_adapter",
        "itemList": [],
        "isExternal": false,
        "path": "devkit/documents/ngcli_adapter",
        "tags": [],
        "originalFilePath": "generated/devkit/ngcli_adapter/README"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "devkit",
    "packageName": "@nx/devkit",
    "root": "C:/coding-stuff/new-nx/nx/packages/devkit",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\devkit\\src"
  },
  {
    "description": "The Nx Plugin for esbuild contains executors and generators that support building applications using esbuild",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for esbuild contains executors and generators that support building applications using esbuild",
        "file": "generated/packages/esbuild/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "esbuild/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/esbuild/esbuild-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "esbuild",
    "packageName": "@nx/esbuild",
    "root": "C:/coding-stuff/new-nx/nx/packages/esbuild",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\esbuild\\src"
  },
  {
    "description": "The ESLint plugin for Nx contains executors, generators and utilities used for linting JavaScript/TypeScript projects within an Nx workspace.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The ESLint plugin for Nx contains executors, generators and utilities used for linting JavaScript/TypeScript projects within an Nx workspace.",
        "file": "generated/packages/eslint/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "eslint/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/eslint/eslint"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "eslint",
    "packageName": "@nx/eslint",
    "root": "C:/coding-stuff/new-nx/nx/packages/eslint",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\eslint\\src"
  },
  {
    "description": "The eslint-plugin package is an ESLint plugin that contains a collection of recommended ESLint rule configurations which you can extend from in your own ESLint configs, as well as an Nx-specific lint rule called enforce-module-boundaries.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The eslint-plugin package is an ESLint plugin that contains a collection of recommended ESLint rule configurations which you can extend from in your own ESLint configs, as well as an Nx-specific lint rule called enforce-module-boundaries.",
        "file": "generated/packages/eslint-plugin/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "eslint-plugin/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/eslint/eslint-plugin"
      },
      {
        "id": "enforce-module-boundaries",
        "name": "The `enforce-module-boundaries` rule",
        "description": "The eslint-plugin package is an ESLint plugin that contains a collection of recommended ESLint rule configurations which you can extend from in your own ESLint configs, as well as an Nx-specific lint rule called enforce-module-boundaries.",
        "file": "generated/packages/eslint-plugin/documents/enforce-module-boundaries",
        "itemList": [],
        "isExternal": false,
        "path": "eslint-plugin/documents/enforce-module-boundaries",
        "tags": [],
        "originalFilePath": "shared/packages/eslint/enforce-module-boundaries"
      },
      {
        "id": "dependency-checks",
        "name": "The `dependency-checks` rule",
        "description": "The eslint-plugin package is an ESLint plugin that contains a collection of recommended ESLint rule configurations which you can extend from in your own ESLint configs, as well as an Nx-specific lint rule called enforce-module-boundaries.",
        "file": "generated/packages/eslint-plugin/documents/dependency-checks",
        "itemList": [],
        "isExternal": false,
        "path": "eslint-plugin/documents/dependency-checks",
        "tags": [],
        "originalFilePath": "shared/packages/eslint/dependency-checks"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "eslint-plugin",
    "packageName": "@nx/eslint-plugin",
    "root": "C:/coding-stuff/new-nx/nx/packages/eslint-plugin",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\eslint-plugin\\src"
  },
  {
    "description": "The Expo Plugin for Nx contains executors and generators for managing and developing an expo application within your workspace. For example, you can directly build for different target platforms as well as generate projects and publish your code.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Expo Plugin for Nx contains executors and generators for managing and developing an expo application within your workspace. For example, you can directly build for different target platforms as well as generate projects and publish your code.",
        "file": "generated/packages/expo/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "expo/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/expo/expo-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "expo",
    "packageName": "@nx/expo",
    "root": "C:/coding-stuff/new-nx/nx/packages/expo",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\expo\\src"
  },
  {
    "description": "The Nx Plugin for Express contains executors and generators for allowing your workspace to create powerful Express Node applications and APIs.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Express contains executors and generators for allowing your workspace to create powerful Express Node applications and APIs.",
        "file": "generated/packages/express/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "express/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/express/express-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "express",
    "packageName": "@nx/express",
    "root": "C:/coding-stuff/new-nx/nx/packages/express",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\express\\src"
  },
  {
    "description": "The Nx Plugin for Gradle allows Gradle tasks to be run through Nx",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Gradle allows Gradle tasks to be run through Nx",
        "file": "generated/packages/gradle/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "gradle/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/gradle/gradle-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "gradle",
    "packageName": "@nx/gradle",
    "root": "C:/coding-stuff/new-nx/nx/packages/gradle",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\gradle\\src"
  },
  {
    "description": "The Nx Plugin for Jest contains executors and generators allowing your workspace to use the powerful Jest testing capabilities.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Jest contains executors and generators allowing your workspace to use the powerful Jest testing capabilities.",
        "file": "generated/packages/jest/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "jest/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/jest/jest-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "jest",
    "packageName": "@nx/jest",
    "root": "C:/coding-stuff/new-nx/nx/packages/jest",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\jest\\src"
  },
  {
    "description": "The JS plugin for Nx contains executors and generators that provide the best experience for developing JavaScript and TypeScript projects. ",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The JS plugin for Nx contains executors and generators that provide the best experience for developing JavaScript and TypeScript projects. ",
        "file": "generated/packages/js/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "js/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/js/js-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "js",
    "packageName": "@nx/js",
    "root": "C:/coding-stuff/new-nx/nx/packages/js",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\js\\src"
  },
  {
    "description": "The Nx Plugin for Module Federation contains executors and utilities that support building applications using Module Federation.",
    "documents": [
      {
        "id": "nx-module-federation-plugin",
        "name": "NxModuleFederationPlugin",
        "description": "The Nx Plugin for Module Federation contains executors and utilities that support building applications using Module Federation.",
        "file": "generated/packages/module-federation/documents/nx-module-federation-plugin",
        "itemList": [],
        "isExternal": false,
        "path": "module-federation/documents/nx-module-federation-plugin",
        "tags": [],
        "originalFilePath": "shared/packages/module-federation/nx-module-federation-plugin"
      },
      {
        "id": "nx-module-federation-dev-server-plugin",
        "name": "NxModuleFederationDevServerPlugin",
        "description": "The Nx Plugin for Module Federation contains executors and utilities that support building applications using Module Federation.",
        "file": "generated/packages/module-federation/documents/nx-module-federation-dev-server-plugin",
        "itemList": [],
        "isExternal": false,
        "path": "module-federation/documents/nx-module-federation-dev-server-plugin",
        "tags": [],
        "originalFilePath": "shared/packages/module-federation/nx-module-federation-dev-server-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "module-federation",
    "packageName": "@nx/module-federation",
    "root": "C:/coding-stuff/new-nx/nx/packages/module-federation",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\module-federation\\src"
  },
  {
    "description": "The Nx Plugin for Nest contains executors and generators for allowing your workspace to create powerful Nest best in class APIs.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Nest contains executors and generators for allowing your workspace to create powerful Nest best in class APIs.",
        "file": "generated/packages/nest/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "nest/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/nest/nest-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "nest",
    "packageName": "@nx/nest",
    "root": "C:/coding-stuff/new-nx/nx/packages/nest",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\nest\\src"
  },
  {
    "description": "The Next.js plugin for Nx contains executors and generators for managing Next.js applications and libraries within an Nx workspace. It provides:\n\n\n- Scaffolding for creating, building, serving, linting, and testing Next.js applications.\n\n- Integration with building, serving, and exporting a Next.js application.\n\n- Integration with React libraries within the workspace. \n\nWhen using Next.js in Nx, you get the out-of-the-box support for TypeScript, Playwright, Cypress, and Jest. No need to configure anything: watch mode, source maps, and typings just work.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Next.js plugin for Nx contains executors and generators for managing Next.js applications and libraries within an Nx workspace. It provides:\n\n\n- Scaffolding for creating, building, serving, linting, and testing Next.js applications.\n\n- Integration with building, serving, and exporting a Next.js application.\n\n- Integration with React libraries within the workspace. \n\nWhen using Next.js in Nx, you get the out-of-the-box support for TypeScript, Playwright, Cypress, and Jest. No need to configure anything: watch mode, source maps, and typings just work.",
        "file": "generated/packages/next/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "next/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/next/plugin-overview"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "next",
    "packageName": "@nx/next",
    "root": "C:/coding-stuff/new-nx/nx/packages/next",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\next\\src"
  },
  {
    "description": "The Node Plugin for Nx contains generators to manage Node applications within an Nx workspace.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Node Plugin for Nx contains generators to manage Node applications within an Nx workspace.",
        "file": "generated/packages/node/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "node/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/node/node-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "node",
    "packageName": "@nx/node",
    "root": "C:/coding-stuff/new-nx/nx/packages/node",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\node\\src"
  },
  {
    "description": "The Nuxt plugin for Nx contains executors and generators for managing Nuxt applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Vitest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Nuxt contains generators for managing Nuxt applications within a Nx workspace. This page also explains how to configure Nuxt on your Nx workspace.",
        "file": "generated/packages/nuxt/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "nuxt/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/nuxt/nuxt-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "nuxt",
    "packageName": "@nx/nuxt",
    "root": "C:/coding-stuff/new-nx/nx/packages/nuxt",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\nuxt\\src"
  },
  {
    "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
    "documents": [
      {
        "id": "create-nx-workspace",
        "name": "create-nx-workspace",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/create-nx-workspace",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/create-nx-workspace",
        "tags": ["installation"],
        "originalFilePath": "generated/cli/create-nx-workspace"
      },
      {
        "id": "init",
        "name": "init",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/init",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/init",
        "tags": ["init"],
        "originalFilePath": "generated/cli/init"
      },
      {
        "id": "generate",
        "name": "generate",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/generate",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/generate",
        "tags": ["generate-code"],
        "originalFilePath": "generated/cli/generate"
      },
      {
        "id": "run",
        "name": "run",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/run",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/run",
        "tags": ["run-tasks"],
        "originalFilePath": "generated/cli/run"
      },
      {
        "id": "daemon",
        "name": "daemon",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/daemon",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/daemon",
        "tags": ["daemon"],
        "originalFilePath": "generated/cli/daemon"
      },
      {
        "id": "dep-graph",
        "name": "graph",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/dep-graph",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/dep-graph",
        "tags": ["explore-graph"],
        "originalFilePath": "generated/cli/graph"
      },
      {
        "id": "run-many",
        "name": "run-many",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/run-many",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/run-many",
        "tags": ["run-tasks"],
        "originalFilePath": "generated/cli/run-many"
      },
      {
        "id": "affected",
        "name": "affected",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/affected",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/affected",
        "tags": ["run-tasks", "affected"],
        "originalFilePath": "generated/cli/affected"
      },
      {
        "id": "format-check",
        "name": "format:check",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/format-check",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/format-check",
        "tags": ["enforce-module-boundaries"],
        "originalFilePath": "generated/cli/format-check"
      },
      {
        "id": "format-write",
        "name": "format:write",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/format-write",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/format-write",
        "tags": ["enforce-module-boundaries"],
        "originalFilePath": "generated/cli/format-write"
      },
      {
        "id": "migrate",
        "name": "migrate",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/migrate",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/migrate",
        "tags": ["automate-updating-dependencies"],
        "originalFilePath": "generated/cli/migrate"
      },
      {
        "id": "report",
        "name": "report",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/report",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/report",
        "tags": [],
        "originalFilePath": "generated/cli/report"
      },
      {
        "id": "list",
        "name": "list",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/list",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/list",
        "tags": [],
        "originalFilePath": "generated/cli/list"
      },
      {
        "id": "connect-to-nx-cloud",
        "name": "connect-to-nx-cloud",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/connect-to-nx-cloud",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/connect-to-nx-cloud",
        "tags": ["cache-task-results", "distribute-task-execution"],
        "originalFilePath": "generated/cli/connect"
      },
      {
        "id": "reset",
        "name": "reset",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/reset",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/reset",
        "tags": ["cache-task-results"],
        "originalFilePath": "generated/cli/reset"
      },
      {
        "id": "repair",
        "name": "repair",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/repair",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/repair",
        "tags": [],
        "originalFilePath": "generated/cli/repair"
      },
      {
        "id": "sync",
        "name": "sync",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/sync",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/sync",
        "tags": ["sync"],
        "originalFilePath": "generated/cli/sync"
      },
      {
        "id": "sync-check",
        "name": "sync:check",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/sync-check",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/sync-check",
        "tags": ["sync"],
        "originalFilePath": "generated/cli/sync-check"
      },
      {
        "id": "import",
        "name": "import",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/import",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/import",
        "tags": ["import"],
        "originalFilePath": "generated/cli/import"
      },
      {
        "id": "exec",
        "name": "exec",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/exec",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/exec",
        "tags": ["exec"],
        "originalFilePath": "generated/cli/exec"
      },
      {
        "id": "watch",
        "name": "watch",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/watch",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/watch",
        "tags": ["workspace-watching"],
        "originalFilePath": "generated/cli/watch"
      },
      {
        "id": "show",
        "name": "show",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/show",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/show",
        "tags": ["explore-graph"],
        "originalFilePath": "generated/cli/show"
      },
      {
        "id": "view-logs",
        "name": "view-logs",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/view-logs",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/view-logs",
        "tags": [],
        "originalFilePath": "generated/cli/view-logs"
      },
      {
        "id": "release",
        "name": "release",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/release",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/release",
        "tags": ["nx-release"],
        "originalFilePath": "generated/cli/release"
      },
      {
        "id": "add",
        "name": "add",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/add",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/add",
        "tags": ["add"],
        "originalFilePath": "generated/cli/add"
      },
      {
        "id": "login",
        "name": "login",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/login",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/login",
        "tags": ["login"],
        "originalFilePath": "generated/cli/login"
      },
      {
        "id": "logout",
        "name": "logout",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/logout",
        "itemList": [],
        "isExternal": false,
        "path": "nx/documents/logout",
        "tags": ["login"],
        "originalFilePath": "generated/cli/logout"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "nx",
    "packageName": "nx",
    "root": "C:/coding-stuff/new-nx/nx/packages/nx",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\nx\\src"
  },
  {
    "description": "The Nx Plugin for Playwright contains executors and generators allowing your workspace to use the powerful Playwright integration testing capabilities.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Playwright contains executors and generators allowing your workspace to use the powerful Playwright integration testing capabilities.",
        "file": "generated/packages/playwright/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "playwright/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/playwright/playwright-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "playwright",
    "packageName": "@nx/playwright",
    "root": "C:/coding-stuff/new-nx/nx/packages/playwright",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\playwright\\src"
  },
  {
    "description": "This plugin is used to create Nx plugins! It contains generators for generating common plugin features like generators, executors, migrations and more.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "This plugin is used to create Nx plugins! It contains generators for generating common plugin features like generators, executors, migrations and more.",
        "file": "generated/packages/plugin/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "plugin/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/plugin/plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "plugin",
    "packageName": "@nx/plugin",
    "root": "C:/coding-stuff/new-nx/nx/packages/plugin",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\plugin\\src"
  },
  {
    "description": "The React plugin for Nx contains executors and generators for managing React applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Jest, Vitest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, components, hooks, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The React plugin for Nx contains executors and generators for managing React applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Jest, Vitest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, components, hooks, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
        "file": "generated/packages/react/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "react/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/react/react-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "react",
    "packageName": "@nx/react",
    "root": "C:/coding-stuff/new-nx/nx/packages/react",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\react\\src"
  },
  {
    "description": "The Nx Plugin for React Native contains generators for managing React Native applications and libraries within an Nx workspace. It provides: \n\n-Integration with libraries such as Jest, Detox, and Storybook.\n-Scaffolding for creating buildable libraries that can be published to npm.\n-Utilities for automatic workspace refactoring.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for React Native contains generators for managing React Native applications and libraries within an Nx workspace. It provides: \n\n-Integration with libraries such as Jest, Detox, and Storybook.\n-Scaffolding for creating buildable libraries that can be published to npm.\n-Utilities for automatic workspace refactoring.",
        "file": "generated/packages/react-native/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "react-native/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/react-native/react-native-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "react-native",
    "packageName": "@nx/react-native",
    "root": "C:/coding-stuff/new-nx/nx/packages/react-native",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\react-native\\src"
  },
  {
    "description": "The Remix plugin for Nx contains executors and generators for managing Remix applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Vitest, Jest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, routes, loaders, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Remix plugin for Nx contains executors and generators for managing Remix applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Vitest, Jest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, routes, loaders, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
        "file": "generated/packages/remix/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "remix/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/remix/remix-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "remix",
    "packageName": "@nx/remix",
    "root": "C:/coding-stuff/new-nx/nx/packages/remix",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\remix\\src"
  },
  {
    "description": "The Nx Plugin for Rollup contains executors and generators that support building applications using Rollup.",
    "documents": [],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "rollup",
    "packageName": "@nx/rollup",
    "root": "C:/coding-stuff/new-nx/nx/packages/rollup",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\rollup\\src"
  },
  {
    "description": "The Nx Plugin for Rsbuild contains an Nx plugin, executors and utilities that support building applications using Rsbuild.",
    "documents": [],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "rsbuild",
    "packageName": "@nx/rsbuild",
    "root": "C:/coding-stuff/new-nx/nx/packages/rsbuild",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\rsbuild\\src"
  },
  {
    "description": "The Nx Plugin for Rspack contains executors and generators that support building applications using Rspack.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Rspack contains executors and generators that support building applications using Rspack.",
        "file": "generated/packages/rspack/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "rspack/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/rspack/rspack-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "rspack",
    "packageName": "@nx/rspack",
    "root": "C:/coding-stuff/new-nx/nx/packages/rspack",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\rspack\\src"
  },
  {
    "description": "The Nx Plugin for Storybook contains executors and generators for allowing your workspace to use the powerful Storybook integration testing & documenting capabilities.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "This is an overview page for the Storybook plugin in Nx. It explains what Storybook is and how to set it up in your Nx workspace.",
        "file": "generated/packages/storybook/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "storybook/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/storybook/plugin-overview"
      },
      {
        "id": "best-practices",
        "name": "Storybook best practices for making the most out of Nx",
        "description": "The purpose of this guide is to help you set up Storybook in your Nx workspace so that you can get the most out of Nx and its powerful capabilities.",
        "file": "generated/packages/storybook/documents/best-practices",
        "itemList": [],
        "isExternal": false,
        "path": "storybook/documents/best-practices",
        "tags": [],
        "originalFilePath": "shared/packages/storybook/best-practices"
      },
      {
        "id": "storybook-9-setup",
        "name": "Storybook 9",
        "description": "This guide explains how you can set up Storybook version 9 in your Nx workspace. It contains information about the generators and the frameworks that are supported.",
        "file": "generated/packages/storybook/documents/storybook-9-setup",
        "itemList": [],
        "isExternal": false,
        "path": "storybook/documents/storybook-9-setup",
        "tags": [],
        "originalFilePath": "shared/packages/storybook/storybook-9-setup"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "storybook",
    "packageName": "@nx/storybook",
    "root": "C:/coding-stuff/new-nx/nx/packages/storybook",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\storybook\\src"
  },
  {
    "description": "The Nx Plugin for building and testing applications using Vite",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Vite contains executors and generators that support building applications using Vite. This page also explains how to configure Vite on your Nx workspace.",
        "file": "generated/packages/vite/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "vite/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/vite/vite-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "vite",
    "packageName": "@nx/vite",
    "root": "C:/coding-stuff/new-nx/nx/packages/vite",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\vite\\src"
  },
  {
    "description": "The Vue plugin for Nx contains executors and generators for managing Vue applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Vitest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Vue contains generators for managing Vue applications and libraries within an Nx workspace. This page also explains how to configure Vue on your Nx workspace.",
        "file": "generated/packages/vue/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "vue/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/vue/vue-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "vue",
    "packageName": "@nx/vue",
    "root": "C:/coding-stuff/new-nx/nx/packages/vue",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\vue\\src"
  },
  {
    "description": "The Nx Plugin for Web Components contains generators for managing Web Component applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Jest, Playwright, Cypress, and Storybook.\n\n- Scaffolding for creating buildable libraries that can be published to npm.\n\n- Utilities for automatic workspace refactoring.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Web Components contains generators for managing Web Component applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Jest, Playwright, Cypress, and Storybook.\n\n- Scaffolding for creating buildable libraries that can be published to npm.\n\n- Utilities for automatic workspace refactoring.",
        "file": "generated/packages/web/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "web/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/web/web-plugin"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "web",
    "packageName": "@nx/web",
    "root": "C:/coding-stuff/new-nx/nx/packages/web",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\web\\src"
  },
  {
    "description": "The Nx Plugin for Webpack contains executors and generators that support building applications using Webpack.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Webpack contains executors and generators that support building applications using Webpack.",
        "file": "generated/packages/webpack/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "webpack/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/webpack/plugin-overview"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "webpack",
    "packageName": "@nx/webpack",
    "root": "C:/coding-stuff/new-nx/nx/packages/webpack",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\webpack\\src"
  },
  {
    "description": "The Workspace plugin contains executors and generators that are useful for any Nx workspace. It should be present in every Nx workspace and other plugins build on it.",
    "documents": [
      {
        "id": "overview",
        "name": "Overview",
        "description": "The Workspace plugin contains executors and generators that are useful for any Nx workspace. It should be present in every Nx workspace and other plugins build on it.",
        "file": "generated/packages/workspace/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "workspace/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/workspace/workspace-plugin"
      },
      {
        "id": "nx-nodejs-typescript-version-matrix",
        "name": "Nx, NodeJS and Typescript Versions",
        "description": "The Workspace plugin contains executors and generators that are useful for any Nx workspace. It should be present in every Nx workspace and other plugins build on it.",
        "file": "generated/packages/workspace/documents/nx-nodejs-typescript-version-matrix",
        "itemList": [],
        "isExternal": false,
        "path": "workspace/documents/nx-nodejs-typescript-version-matrix",
        "tags": [],
        "originalFilePath": "shared/packages/workspace/nx-compatibility-matrix"
      }
    ],
    "executors": [],
    "generators": [],
    "migrations": [],
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "workspace",
    "packageName": "@nx/workspace",
    "root": "C:/coding-stuff/new-nx/nx/packages/workspace",
    "source": "C:\\coding-stuff\\new-nx\\nx\\packages\\workspace\\src"
  }
]
