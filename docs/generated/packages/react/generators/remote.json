{
  "name": "remote",
  "factory": "./src/generators/remote/remote",
  "schema": {
    "$schema": "https://json-schema.org/schema",
    "$id": "GeneratorReactRemote",
    "cli": "nx",
    "title": "Generate Module Federation Setup for React Producer (Remote) App",
    "description": "Create Module Federation configuration files for given React Producer (Remote) Application.",
    "type": "object",
    "properties": {
      "directory": {
        "description": "The directory of the new application.",
        "type": "string",
        "alias": "dir",
        "$default": { "$source": "argv", "index": 0 },
        "x-prompt": "Which directory do you want to create the application in?"
      },
      "name": {
        "type": "string",
        "description": "The name of the Producer (remote) application to generate the Module Federation configuration",
        "pattern": "^[a-zA-Z_$][a-zA-Z_$0-9]*$",
        "x-priority": "important"
      },
      "dynamic": {
        "type": "boolean",
        "description": "Should the Consumer (host) application use dynamic federation?",
        "default": false,
        "x-priority": "internal"
      },
      "style": {
        "description": "The file extension to be used for style files.",
        "type": "string",
        "default": "css",
        "alias": "s",
        "x-prompt": {
          "message": "Which stylesheet format would you like to use?",
          "type": "list",
          "items": [
            { "value": "css", "label": "CSS" },
            {
              "value": "scss",
              "label": "SASS(.scss)       [ https://sass-lang.com                     ]"
            },
            {
              "value": "less",
              "label": "LESS              [ https://lesscss.org                       ]"
            },
            {
              "value": "tailwind",
              "label": "tailwind [ https://tailwindcss.com/            ]"
            },
            {
              "value": "styled-components",
              "label": "styled-components [ https://styled-components.com            ]"
            },
            {
              "value": "@emotion/styled",
              "label": "emotion           [ https://emotion.sh                       ]"
            },
            {
              "value": "styled-jsx",
              "label": "styled-jsx        [ https://www.npmjs.com/package/styled-jsx ]"
            },
            { "value": "none", "label": "None" }
          ]
        }
      },
      "linter": {
        "description": "The tool to use for running lint checks.",
        "type": "string",
        "enum": ["eslint"],
        "default": "eslint"
      },
      "routing": {
        "type": "boolean",
        "description": "Generate application with routes.",
        "default": false
      },
      "skipFormat": {
        "description": "Skip formatting files.",
        "type": "boolean",
        "default": false,
        "x-priority": "internal"
      },
      "skipNxJson": {
        "description": "Skip updating nx.json with default options based on values provided to this app (e.g. babel, style).",
        "type": "boolean",
        "default": false,
        "x-priority": "internal"
      },
      "unitTestRunner": {
        "type": "string",
        "enum": ["jest", "none"],
        "description": "Test runner to use for unit tests.",
        "default": "jest"
      },
      "e2eTestRunner": {
        "type": "string",
        "enum": ["playwright", "cypress", "none"],
        "description": "Test runner to use for end to end (E2E) tests.",
        "x-prompt": "Which E2E test runner would you like to use?",
        "default": "playwright"
      },
      "tags": {
        "type": "string",
        "description": "Add tags to the application (used for linting).",
        "alias": "t"
      },
      "classComponent": {
        "type": "boolean",
        "description": "Use class components instead of functional component.",
        "alias": "C",
        "default": false
      },
      "js": {
        "type": "boolean",
        "description": "Generate JavaScript files rather than TypeScript files.",
        "default": false
      },
      "globalCss": {
        "type": "boolean",
        "description": "Default is false. When true, the component is generated with *.css/*.scss instead of *.module.css/*.module.scss.",
        "default": false
      },
      "strict": {
        "type": "boolean",
        "description": "Creates an application with strict mode and strict type checking.",
        "default": true
      },
      "setParserOptionsProject": {
        "type": "boolean",
        "description": "Whether or not to configure the ESLint \"parserOptions.project\" option. We do not do this by default for lint performance reasons.",
        "default": false
      },
      "compiler": {
        "type": "string",
        "description": "The compiler to use.",
        "enum": ["babel", "swc"],
        "default": "babel"
      },
      "host": {
        "type": "string",
        "description": "The Consumer (host) application for this Producer (remote).",
        "x-priority": "important",
        "alias": "consumer"
      },
      "devServerPort": {
        "type": "number",
        "description": "The port for the dev server of the Producer (remote) app.",
        "x-priority": "important"
      },
      "ssr": {
        "description": "Whether to configure SSR for the Consumer (host) application",
        "type": "boolean",
        "default": false
      },
      "typescriptConfiguration": {
        "type": "boolean",
        "description": "Whether the module federation configuration and webpack configuration files should use TS. When --js is used, this flag is ignored.",
        "default": true
      },
      "skipPackageJson": {
        "description": "Do not add dependencies to `package.json`.",
        "type": "boolean",
        "default": false,
        "x-priority": "internal"
      },
      "bundler": {
        "description": "The bundler to use.",
        "type": "string",
        "enum": ["rspack", "webpack"],
        "x-prompt": "Which bundler do you want to use to build the application?",
        "default": "rspack",
        "x-priority": "important"
      }
    },
    "required": ["directory"],
    "additionalProperties": false,
    "presets": []
  },
  "x-type": "application",
  "description": "Generate a remote react application",
  "aliases": ["producer"],
  "implementation": "/packages/react/src/generators/remote/remote.ts",
  "hidden": false,
  "path": "/packages/react/src/generators/remote/schema.json",
  "type": "generator"
}
