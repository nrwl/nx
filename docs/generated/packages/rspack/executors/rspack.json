{
  "name": "rspack",
  "implementation": "/packages/rspack/src/executors/rspack/rspack.impl.ts",
  "schema": {
    "$schema": "http://json-schema.org/schema",
    "version": 2,
    "title": "Rspack build executor",
    "description": "Run Rspack via an executor for a project.",
    "type": "object",
    "properties": {
      "target": {
        "type": "string",
        "description": "The platform to target (e.g. web, node).",
        "enum": ["web", "node"]
      },
      "main": { "type": "string", "description": "The main entry file." },
      "outputPath": {
        "type": "string",
        "description": "The output path for the bundle."
      },
      "outputFileName": {
        "type": "string",
        "description": "The main output entry file"
      },
      "tsConfig": {
        "type": "string",
        "description": "The tsconfig file to build the project."
      },
      "skipTypeChecking": {
        "alias": "typeCheck",
        "type": "boolean",
        "description": "Skip the type checking. Default is `false`."
      },
      "index": {
        "alias": "indexHtml",
        "type": "string",
        "description": "HTML File which will be contain the application.",
        "x-completion-type": "file",
        "x-completion-glob": "**/*@(.html|.htm)"
      },
      "baseHref": {
        "type": "string",
        "description": "Base url for the application being built."
      },
      "deployUrl": {
        "type": "string",
        "description": "URL where the application will be deployed."
      },
      "rspackConfig": {
        "type": "string",
        "description": "The path to the rspack config file."
      },
      "optimization": {
        "description": "Enables optimization of the build output.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "scripts": {
                "type": "boolean",
                "description": "Enables optimization of the scripts output.",
                "default": true
              },
              "styles": {
                "type": "boolean",
                "description": "Enables optimization of the styles output.",
                "default": true
              }
            },
            "additionalProperties": false
          },
          { "type": "boolean" }
        ]
      },
      "sourceMap": {
        "description": "Output sourcemaps. Use 'hidden' for use with error reporting tools without generating sourcemap comment.",
        "default": true,
        "oneOf": [{ "type": "boolean" }, { "type": "string" }]
      },
      "assets": {
        "type": "array",
        "description": "List of static application assets.",
        "default": [],
        "items": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "glob": {
                  "type": "string",
                  "description": "The pattern to match."
                },
                "input": {
                  "type": "string",
                  "description": "The input directory path in which to apply 'glob'. Defaults to the project root."
                },
                "ignore": {
                  "description": "An array of globs to ignore.",
                  "type": "array",
                  "items": { "type": "string" }
                },
                "output": {
                  "type": "string",
                  "description": "Absolute path within the output."
                },
                "watch": {
                  "type": "boolean",
                  "description": "Enable re-building when files change.",
                  "default": false
                }
              },
              "additionalProperties": false,
              "required": ["glob", "input", "output"]
            },
            { "type": "string" }
          ]
        }
      },
      "extractLicenses": {
        "type": "boolean",
        "description": "Extract all licenses in a separate file.",
        "default": false
      },
      "fileReplacements": {
        "description": "Replace files with other files in the build.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "replace": {
              "type": "string",
              "description": "The file to be replaced.",
              "x-completion-type": "file"
            },
            "with": {
              "type": "string",
              "description": "The file to replace with.",
              "x-completion-type": "file"
            }
          },
          "additionalProperties": false,
          "required": ["replace", "with"]
        },
        "default": []
      },
      "mode": {
        "type": "string",
        "description": "Mode to run the build in.",
        "enum": ["development", "production", "none"]
      },
      "generatePackageJson": {
        "type": "boolean",
        "description": "Generates a `package.json` and pruned lock file with the project's `node_module` dependencies populated for installing in a container. If a `package.json` exists in the project's directory, it will be reused with dependencies populated."
      },
      "additionalEntryPoints": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "entryName": {
              "type": "string",
              "description": "Name of the additional entry file."
            },
            "entryPath": {
              "type": "string",
              "description": "Path to the additional entry file.",
              "x-completion-type": "file",
              "x-completion-glob": "**/*@(.js|.ts)"
            }
          }
        }
      },
      "buildLibsFromSource": {
        "type": "boolean",
        "description": "Read buildable libraries from source instead of building them separately. If set to `false`, the `tsConfig` option must also be set to remap paths.",
        "default": true
      },
      "extractCss": {
        "type": "boolean",
        "description": "Extract CSS into a `.css` file."
      },
      "externalDependencies": {
        "oneOf": [
          { "type": "string", "enum": ["none", "all"] },
          { "type": "array", "items": { "type": "string" } }
        ],
        "description": "Dependencies to keep external to the bundle. (`all` (default), `none`, or an array of module names)"
      },
      "generateIndexHtml": {
        "type": "boolean",
        "description": "Generates `index.html` file to the output path. This can be turned off if using a webpack plugin to generate HTML such as `html-webpack-plugin`."
      },
      "memoryLimit": {
        "type": "number",
        "description": "Memory limit for type checking service process in `MB`."
      },
      "namedChunks": {
        "type": "boolean",
        "description": "Names the produced bundles according to their entry file."
      },
      "outputHashing": {
        "type": "string",
        "description": "Define the output filename cache-busting hashing mode.",
        "enum": ["none", "all", "media", "bundles"]
      },
      "poll": {
        "type": "number",
        "description": "Enable and define the file watching poll time period."
      },
      "polyfills": {
        "type": "string",
        "description": "Polyfills to load before application",
        "x-completion-type": "file",
        "x-completion-glob": "**/*@(.js|.ts|.tsx)"
      },
      "postcssConfig": {
        "type": "string",
        "description": "Set a path to PostCSS config that applies to the app and all libs. Defaults to `undefined`, which auto-detects postcss.config.js files in each `app`/`lib` directory."
      },
      "progress": {
        "type": "boolean",
        "description": "Log progress to the console while building."
      },
      "publicPath": {
        "type": "string",
        "description": "Set a public path for assets resources with absolute paths."
      },
      "rebaseRootRelative": {
        "type": "boolean",
        "description": "Whether to rebase absolute path for assets in postcss cli resources."
      },
      "runtimeChunk": {
        "type": "boolean",
        "description": "Use a separate bundle containing the runtime."
      },
      "scripts": {
        "type": "array",
        "description": "External Scripts which will be included before the main application entry.",
        "items": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "input": {
                  "type": "string",
                  "description": "The file to include.",
                  "x-completion-type": "file",
                  "x-completion-glob": "**/*@(.css|.scss|.less|.sass|.styl|.stylus)"
                },
                "bundleName": {
                  "type": "string",
                  "description": "The bundle name for this extra entry point."
                },
                "inject": {
                  "type": "boolean",
                  "description": "If the bundle will be referenced in the HTML file.",
                  "default": true
                }
              },
              "additionalProperties": false,
              "required": ["input"]
            },
            {
              "type": "string",
              "description": "The file to include.",
              "x-completion-type": "file",
              "x-completion-glob": "**/*@(.css|.scss|.less|.sass|.styl|.stylus)"
            }
          ]
        }
      },
      "standardRspackConfigFunction": {
        "type": "boolean",
        "description": "Set to true if the rspack config exports a standard rspack function, not an Nx-specific one. See: https://rspack.dev/config/",
        "default": false
      },
      "statsJson": {
        "type": "boolean",
        "description": "Generates a 'stats.json' file which can be analyzed using tools such as: 'webpack-bundle-analyzer' See: https://rspack.dev/guide/optimization/analysis"
      },
      "stylePreprocessorOptions": {
        "description": "Options to pass to style preprocessors.",
        "type": "object",
        "properties": {
          "includePaths": {
            "description": "Paths to include. Paths will be resolved to project root.",
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "additionalProperties": false
      },
      "styles": {
        "type": "array",
        "description": "External Styles which will be included with the application",
        "items": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "input": {
                  "type": "string",
                  "description": "The file to include.",
                  "x-completion-type": "file",
                  "x-completion-glob": "**/*@(.css|.scss|.less|.sass|.styl|.stylus)"
                },
                "bundleName": {
                  "type": "string",
                  "description": "The bundle name for this extra entry point."
                },
                "inject": {
                  "type": "boolean",
                  "description": "If the bundle will be referenced in the HTML file.",
                  "default": true
                }
              },
              "additionalProperties": false,
              "required": ["input"]
            },
            {
              "type": "string",
              "description": "The file to include.",
              "x-completion-type": "file",
              "x-completion-glob": "**/*@(.css|.scss|.less|.sass|.styl|.stylus)"
            }
          ]
        }
      },
      "transformers": {
        "type": "array",
        "description": "List of TypeScript Compiler Transfomers Plugins.",
        "aliases": ["tsPlugins"],
        "items": {
          "oneOf": [
            { "type": "string" },
            {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "options": { "type": "object", "additionalProperties": true }
              },
              "additionalProperties": false,
              "required": ["name"]
            }
          ]
        }
      },
      "vendorChunk": {
        "type": "boolean",
        "description": "Use a separate bundle containing only vendor libraries."
      }
    },
    "required": ["rspackConfig"],
    "definitions": {
      "assetPattern": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "glob": {
                "type": "string",
                "description": "The pattern to match."
              },
              "input": {
                "type": "string",
                "description": "The input directory path in which to apply 'glob'. Defaults to the project root."
              },
              "ignore": {
                "description": "An array of globs to ignore.",
                "type": "array",
                "items": { "type": "string" }
              },
              "output": {
                "type": "string",
                "description": "Absolute path within the output."
              },
              "watch": {
                "type": "boolean",
                "description": "Enable re-building when files change.",
                "default": false
              }
            },
            "additionalProperties": false,
            "required": ["glob", "input", "output"]
          },
          { "type": "string" }
        ]
      },
      "extraEntryPoint": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "input": {
                "type": "string",
                "description": "The file to include.",
                "x-completion-type": "file",
                "x-completion-glob": "**/*@(.css|.scss|.less|.sass|.styl|.stylus)"
              },
              "bundleName": {
                "type": "string",
                "description": "The bundle name for this extra entry point."
              },
              "inject": {
                "type": "boolean",
                "description": "If the bundle will be referenced in the HTML file.",
                "default": true
              }
            },
            "additionalProperties": false,
            "required": ["input"]
          },
          {
            "type": "string",
            "description": "The file to include.",
            "x-completion-type": "file",
            "x-completion-glob": "**/*@(.css|.scss|.less|.sass|.styl|.stylus)"
          }
        ]
      },
      "transformerPattern": {
        "oneOf": [
          { "type": "string" },
          {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "options": { "type": "object", "additionalProperties": true }
            },
            "additionalProperties": false,
            "required": ["name"]
          }
        ]
      }
    },
    "presets": []
  },
  "description": "Run Rspack via an executor for a project.",
  "aliases": [],
  "hidden": false,
  "path": "/packages/rspack/src/executors/rspack/schema.json",
  "type": "executor"
}
