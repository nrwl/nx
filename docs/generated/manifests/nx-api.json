{
  "angular": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "angular",
    "packageName": "@nx/angular",
    "description": "The Nx Plugin for Angular contains executors, generators, and utilities for managing Angular applications and libraries within an Nx workspace. It provides: \n\n- Integration with libraries such as Storybook, Jest, ESLint, Tailwind CSS, Playwright and Cypress. \n\n- Generators to help scaffold code quickly (like: Micro Frontends, Libraries, both internal to your codebase and publishable to npm) \n\n- Single Component Application Modules (SCAMs) \n\n- NgRx helpers. \n\n- Utilities for automatic workspace refactoring.",
    "documents": {
      "/nx-api/angular/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Angular contains executors, generators, and utilities for managing Angular applications and libraries within an Nx workspace. It provides: \n\n- Integration with libraries such as Storybook, Jest, ESLint, Tailwind CSS, Playwright and Cypress. \n\n- Generators to help scaffold code quickly (like: Micro Frontends, Libraries, both internal to your codebase and publishable to npm) \n\n- Single Component Application Modules (SCAMs) \n\n- NgRx helpers. \n\n- Utilities for automatic workspace refactoring.",
        "file": "generated/packages/angular/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/angular/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/angular/angular-plugin"
      },
      "/nx-api/angular/documents/nx-and-angular": {
        "id": "nx-and-angular",
        "name": "Nx and the Angular CLI",
        "description": "The Nx Plugin for Angular contains executors, generators, and utilities for managing Angular applications and libraries within an Nx workspace. It provides: \n\n- Integration with libraries such as Storybook, Jest, ESLint, Tailwind CSS, Playwright and Cypress. \n\n- Generators to help scaffold code quickly (like: Micro Frontends, Libraries, both internal to your codebase and publishable to npm) \n\n- Single Component Application Modules (SCAMs) \n\n- NgRx helpers. \n\n- Utilities for automatic workspace refactoring.",
        "file": "generated/packages/angular/documents/nx-and-angular",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/angular/documents/nx-and-angular",
        "tags": [],
        "originalFilePath": "shared/guides/nx-and-angular-cli"
      },
      "/nx-api/angular/documents/nx-devkit-angular-devkit": {
        "id": "nx-devkit-angular-devkit",
        "name": "Nx Devkit and Angular Devkit",
        "description": "The Nx Plugin for Angular contains executors, generators, and utilities for managing Angular applications and libraries within an Nx workspace. It provides: \n\n- Integration with libraries such as Storybook, Jest, ESLint, Tailwind CSS, Playwright and Cypress. \n\n- Generators to help scaffold code quickly (like: Micro Frontends, Libraries, both internal to your codebase and publishable to npm) \n\n- Single Component Application Modules (SCAMs) \n\n- NgRx helpers. \n\n- Utilities for automatic workspace refactoring.",
        "file": "generated/packages/angular/documents/nx-devkit-angular-devkit",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/angular/documents/nx-devkit-angular-devkit",
        "tags": ["create-your-own-plugin"],
        "originalFilePath": "shared/guides/nx-devkit-angular-devkit"
      },
      "/nx-api/angular/documents/angular-nx-version-matrix": {
        "id": "angular-nx-version-matrix",
        "name": "Angular and Nx Version Matrix",
        "description": "The Nx Plugin for Angular contains executors, generators, and utilities for managing Angular applications and libraries within an Nx workspace. It provides: \n\n- Integration with libraries such as Storybook, Jest, ESLint, Tailwind CSS, Playwright and Cypress. \n\n- Generators to help scaffold code quickly (like: Micro Frontends, Libraries, both internal to your codebase and publishable to npm) \n\n- Single Component Application Modules (SCAMs) \n\n- NgRx helpers. \n\n- Utilities for automatic workspace refactoring.",
        "file": "generated/packages/angular/documents/angular-nx-version-matrix",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/angular/documents/angular-nx-version-matrix",
        "tags": [],
        "originalFilePath": "shared/packages/angular/angular-nx-version-matrix"
      }
    },
    "root": "/packages/angular",
    "source": "/packages/angular/src",
    "executors": {
      "/nx-api/angular/executors/delegate-build": {
        "description": "Delegates the build to a different target while supporting incremental builds.",
        "file": "generated/packages/angular/executors/delegate-build.json",
        "hidden": false,
        "name": "delegate-build",
        "originalFilePath": "/packages/angular/src/executors/delegate-build/schema.json",
        "path": "/nx-api/angular/executors/delegate-build",
        "type": "executor"
      },
      "/nx-api/angular/executors/ng-packagr-lite": {
        "description": "Builds an Angular library with support for incremental builds.\n\nThis executor is meant to be used with buildable libraries in an incremental build scenario. It is similar to the `@nx/angular:package` executor but it only produces ESM2022 bundles.",
        "file": "generated/packages/angular/executors/ng-packagr-lite.json",
        "hidden": false,
        "name": "ng-packagr-lite",
        "originalFilePath": "/packages/angular/src/executors/ng-packagr-lite/schema.json",
        "path": "/nx-api/angular/executors/ng-packagr-lite",
        "type": "executor"
      },
      "/nx-api/angular/executors/package": {
        "description": "Builds and packages an Angular library producing an output following the Angular Package Format (APF) to be distributed as an NPM package.\n\nThis executor is a drop-in replacement for the `@angular-devkit/build-angular:ng-packagr` with additional support for incremental builds.",
        "file": "generated/packages/angular/executors/package.json",
        "hidden": false,
        "name": "package",
        "originalFilePath": "/packages/angular/src/executors/package/schema.json",
        "path": "/nx-api/angular/executors/package",
        "type": "executor"
      },
      "/nx-api/angular/executors/browser-esbuild": {
        "description": "Builds an Angular application using [esbuild](https://esbuild.github.io/).",
        "file": "generated/packages/angular/executors/browser-esbuild.json",
        "hidden": false,
        "name": "browser-esbuild",
        "originalFilePath": "/packages/angular/src/executors/browser-esbuild/schema.json",
        "path": "/nx-api/angular/executors/browser-esbuild",
        "type": "executor"
      },
      "/nx-api/angular/executors/module-federation-dev-server": {
        "description": "Serves host [Module Federation](https://module-federation.io/) applications ([webpack](https://webpack.js.org/)-based) allowing to specify which remote applications should be served with the host.",
        "file": "generated/packages/angular/executors/module-federation-dev-server.json",
        "hidden": false,
        "name": "module-federation-dev-server",
        "originalFilePath": "/packages/angular/src/executors/module-federation-dev-server/schema.json",
        "path": "/nx-api/angular/executors/module-federation-dev-server",
        "type": "executor"
      },
      "/nx-api/angular/executors/module-federation-dev-ssr": {
        "description": "The module-federation-ssr-dev-server executor is reserved exclusively for use with host SSR Module Federation applications. It allows the user to specify which remote applications should be served with the host.",
        "file": "generated/packages/angular/executors/module-federation-dev-ssr.json",
        "hidden": false,
        "name": "module-federation-dev-ssr",
        "originalFilePath": "/packages/angular/src/executors/module-federation-ssr-dev-server/schema.json",
        "path": "/nx-api/angular/executors/module-federation-dev-ssr",
        "type": "executor"
      },
      "/nx-api/angular/executors/application": {
        "description": "Builds an Angular application using [esbuild](https://esbuild.github.io/) with integrated SSR and prerendering capabilities.",
        "file": "generated/packages/angular/executors/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/angular/src/executors/application/schema.json",
        "path": "/nx-api/angular/executors/application",
        "type": "executor"
      },
      "/nx-api/angular/executors/extract-i18n": {
        "description": "Extracts i18n messages from source code.",
        "file": "generated/packages/angular/executors/extract-i18n.json",
        "hidden": false,
        "name": "extract-i18n",
        "originalFilePath": "/packages/angular/src/executors/extract-i18n/schema.json",
        "path": "/nx-api/angular/executors/extract-i18n",
        "type": "executor"
      },
      "/nx-api/angular/executors/webpack-browser": {
        "description": "Builds an Angular application using [webpack](https://webpack.js.org/).",
        "file": "generated/packages/angular/executors/webpack-browser.json",
        "hidden": false,
        "name": "webpack-browser",
        "originalFilePath": "/packages/angular/src/builders/webpack-browser/schema.json",
        "path": "/nx-api/angular/executors/webpack-browser",
        "type": "executor"
      },
      "/nx-api/angular/executors/dev-server": {
        "description": "Serves an Angular application using [webpack](https://webpack.js.org/) when the build target is using a webpack-based executor, or [Vite](https://vitejs.dev/) when the build target uses an [esbuild](https://esbuild.github.io/)-based executor.",
        "file": "generated/packages/angular/executors/dev-server.json",
        "hidden": false,
        "name": "dev-server",
        "originalFilePath": "/packages/angular/src/builders/dev-server/schema.json",
        "path": "/nx-api/angular/executors/dev-server",
        "type": "executor"
      },
      "/nx-api/angular/executors/webpack-server": {
        "description": "Builds a server Angular application using [webpack](https://webpack.js.org/). This executor is a drop-in replacement for the `@angular-devkit/build-angular:server` builder provided by the Angular CLI. It is usually used in tandem with the `@nx/angular:webpack-browser` executor when your Angular application uses a custom webpack configuration.",
        "file": "generated/packages/angular/executors/webpack-server.json",
        "hidden": false,
        "name": "webpack-server",
        "originalFilePath": "/packages/angular/src/builders/webpack-server/schema.json",
        "path": "/nx-api/angular/executors/webpack-server",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/angular/generators/add-linting": {
        "description": "Adds linting configuration to an Angular project.",
        "file": "generated/packages/angular/generators/add-linting.json",
        "hidden": true,
        "name": "add-linting",
        "originalFilePath": "/packages/angular/src/generators/add-linting/schema.json",
        "path": "/nx-api/angular/generators/add-linting",
        "type": "generator"
      },
      "/nx-api/angular/generators/application": {
        "description": "Creates an Angular application.",
        "file": "generated/packages/angular/generators/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/angular/src/generators/application/schema.json",
        "path": "/nx-api/angular/generators/application",
        "type": "generator"
      },
      "/nx-api/angular/generators/component": {
        "description": "Generate an Angular Component.",
        "file": "generated/packages/angular/generators/component.json",
        "hidden": false,
        "name": "component",
        "originalFilePath": "/packages/angular/src/generators/component/schema.json",
        "path": "/nx-api/angular/generators/component",
        "type": "generator"
      },
      "/nx-api/angular/generators/component-story": {
        "description": "Creates a stories.ts file for a component.",
        "file": "generated/packages/angular/generators/component-story.json",
        "hidden": true,
        "name": "component-story",
        "originalFilePath": "/packages/angular/src/generators/component-story/schema.json",
        "path": "/nx-api/angular/generators/component-story",
        "type": "generator"
      },
      "/nx-api/angular/generators/component-test": {
        "description": "Creates a cypress component test file for a component.",
        "file": "generated/packages/angular/generators/component-test.json",
        "hidden": false,
        "name": "component-test",
        "originalFilePath": "/packages/angular/src/generators/component-test/schema.json",
        "path": "/nx-api/angular/generators/component-test",
        "type": "generator"
      },
      "/nx-api/angular/generators/convert-to-application-executor": {
        "description": "Converts projects to use the `@nx/angular:application` executor or the `@angular-devkit/build-angular:application` builder.",
        "file": "generated/packages/angular/generators/convert-to-application-executor.json",
        "hidden": false,
        "name": "convert-to-application-executor",
        "originalFilePath": "/packages/angular/src/generators/convert-to-application-executor/schema.json",
        "path": "/nx-api/angular/generators/convert-to-application-executor",
        "type": "generator"
      },
      "/nx-api/angular/generators/directive": {
        "description": "Generate an Angular directive.",
        "file": "generated/packages/angular/generators/directive.json",
        "hidden": false,
        "name": "directive",
        "originalFilePath": "/packages/angular/src/generators/directive/schema.json",
        "path": "/nx-api/angular/generators/directive",
        "type": "generator"
      },
      "/nx-api/angular/generators/federate-module": {
        "description": "Create a federated module, which is exposed by a remote and can be subsequently loaded by a host.",
        "file": "generated/packages/angular/generators/federate-module.json",
        "hidden": false,
        "name": "federate-module",
        "originalFilePath": "/packages/angular/src/generators/federate-module/schema.json",
        "path": "/nx-api/angular/generators/federate-module",
        "type": "generator"
      },
      "/nx-api/angular/generators/init": {
        "description": "Initializes the `@nrwl/angular` plugin.",
        "file": "generated/packages/angular/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/angular/src/generators/init/schema.json",
        "path": "/nx-api/angular/generators/init",
        "type": "generator"
      },
      "/nx-api/angular/generators/library": {
        "description": "Creates an Angular library.",
        "file": "generated/packages/angular/generators/library.json",
        "hidden": false,
        "name": "library",
        "originalFilePath": "/packages/angular/src/generators/library/schema.json",
        "path": "/nx-api/angular/generators/library",
        "type": "generator"
      },
      "/nx-api/angular/generators/library-secondary-entry-point": {
        "description": "Creates a secondary entry point for an Angular publishable library.",
        "file": "generated/packages/angular/generators/library-secondary-entry-point.json",
        "hidden": false,
        "name": "library-secondary-entry-point",
        "originalFilePath": "/packages/angular/src/generators/library-secondary-entry-point/schema.json",
        "path": "/nx-api/angular/generators/library-secondary-entry-point",
        "type": "generator"
      },
      "/nx-api/angular/generators/remote": {
        "description": "Generate a Remote Angular Module Federation Application.",
        "file": "generated/packages/angular/generators/remote.json",
        "hidden": false,
        "name": "remote",
        "originalFilePath": "/packages/angular/src/generators/remote/schema.json",
        "path": "/nx-api/angular/generators/remote",
        "type": "generator"
      },
      "/nx-api/angular/generators/move": {
        "description": "Moves an Angular application or library to another folder within the workspace and updates the project configuration.",
        "file": "generated/packages/angular/generators/move.json",
        "hidden": false,
        "name": "move",
        "originalFilePath": "/packages/angular/src/generators/move/schema.json",
        "path": "/nx-api/angular/generators/move",
        "type": "generator"
      },
      "/nx-api/angular/generators/convert-to-with-mf": {
        "description": "Converts an old micro frontend configuration to use the new withModuleFederation helper. It will run successfully if the following conditions are met: \n - Is either a host or remote application \n - Shared npm package configurations have not been modified \n - Name used to identify the Micro Frontend application matches the project name \n\n{% callout type=\"warning\" title=\"Overrides\" %}This generator will overwrite your webpack config. If you have additional custom configuration in your config file, it will be lost!{% /callout %}",
        "file": "generated/packages/angular/generators/convert-to-with-mf.json",
        "hidden": false,
        "name": "convert-to-with-mf",
        "originalFilePath": "/packages/angular/src/generators/convert-to-with-mf/schema.json",
        "path": "/nx-api/angular/generators/convert-to-with-mf",
        "type": "generator"
      },
      "/nx-api/angular/generators/host": {
        "description": "Generate a Host Angular Module Federation Application.",
        "file": "generated/packages/angular/generators/host.json",
        "hidden": false,
        "name": "host",
        "originalFilePath": "/packages/angular/src/generators/host/schema.json",
        "path": "/nx-api/angular/generators/host",
        "type": "generator"
      },
      "/nx-api/angular/generators/ng-add": {
        "description": "Migrates an Angular CLI workspace to Nx or adds the Angular plugin to an Nx workspace.",
        "file": "generated/packages/angular/generators/ng-add.json",
        "hidden": true,
        "name": "ng-add",
        "originalFilePath": "/packages/angular/src/generators/ng-add/schema.json",
        "path": "/nx-api/angular/generators/ng-add",
        "type": "generator"
      },
      "/nx-api/angular/generators/ngrx": {
        "description": "Adds NgRx support to an application or library.",
        "file": "generated/packages/angular/generators/ngrx.json",
        "hidden": false,
        "name": "ngrx",
        "originalFilePath": "/packages/angular/src/generators/ngrx/schema.json",
        "path": "/nx-api/angular/generators/ngrx",
        "type": "generator"
      },
      "/nx-api/angular/generators/ngrx-feature-store": {
        "description": "Adds an NgRx Feature Store to an application or library.",
        "file": "generated/packages/angular/generators/ngrx-feature-store.json",
        "hidden": false,
        "name": "ngrx-feature-store",
        "originalFilePath": "/packages/angular/src/generators/ngrx-feature-store/schema.json",
        "path": "/nx-api/angular/generators/ngrx-feature-store",
        "type": "generator"
      },
      "/nx-api/angular/generators/ngrx-root-store": {
        "description": "Adds an NgRx Root Store to an application.",
        "file": "generated/packages/angular/generators/ngrx-root-store.json",
        "hidden": false,
        "name": "ngrx-root-store",
        "originalFilePath": "/packages/angular/src/generators/ngrx-root-store/schema.json",
        "path": "/nx-api/angular/generators/ngrx-root-store",
        "type": "generator"
      },
      "/nx-api/angular/generators/pipe": {
        "description": "Generate an Angular Pipe",
        "file": "generated/packages/angular/generators/pipe.json",
        "hidden": false,
        "name": "pipe",
        "originalFilePath": "/packages/angular/src/generators/pipe/schema.json",
        "path": "/nx-api/angular/generators/pipe",
        "type": "generator"
      },
      "/nx-api/angular/generators/scam-to-standalone": {
        "description": "Convert an existing Single Component Angular Module (SCAM) to a Standalone Component.",
        "file": "generated/packages/angular/generators/scam-to-standalone.json",
        "hidden": false,
        "name": "scam-to-standalone",
        "originalFilePath": "/packages/angular/src/generators/scam-to-standalone/schema.json",
        "path": "/nx-api/angular/generators/scam-to-standalone",
        "type": "generator"
      },
      "/nx-api/angular/generators/scam": {
        "description": "Generate a component with an accompanying Single Component Angular Module (SCAM).",
        "file": "generated/packages/angular/generators/scam.json",
        "hidden": false,
        "name": "scam",
        "originalFilePath": "/packages/angular/src/generators/scam/schema.json",
        "path": "/nx-api/angular/generators/scam",
        "type": "generator"
      },
      "/nx-api/angular/generators/scam-directive": {
        "description": "Generate a directive with an accompanying Single Component Angular Module (SCAM).",
        "file": "generated/packages/angular/generators/scam-directive.json",
        "hidden": false,
        "name": "scam-directive",
        "originalFilePath": "/packages/angular/src/generators/scam-directive/schema.json",
        "path": "/nx-api/angular/generators/scam-directive",
        "type": "generator"
      },
      "/nx-api/angular/generators/scam-pipe": {
        "description": "Generate a pipe with an accompanying Single Component Angular Module (SCAM).",
        "file": "generated/packages/angular/generators/scam-pipe.json",
        "hidden": false,
        "name": "scam-pipe",
        "originalFilePath": "/packages/angular/src/generators/scam-pipe/schema.json",
        "path": "/nx-api/angular/generators/scam-pipe",
        "type": "generator"
      },
      "/nx-api/angular/generators/setup-mf": {
        "description": "Generate a Module Federation configuration for a given Angular application.",
        "file": "generated/packages/angular/generators/setup-mf.json",
        "hidden": false,
        "name": "setup-mf",
        "originalFilePath": "/packages/angular/src/generators/setup-mf/schema.json",
        "path": "/nx-api/angular/generators/setup-mf",
        "type": "generator"
      },
      "/nx-api/angular/generators/setup-ssr": {
        "description": "Generate Angular Universal (SSR) setup for an Angular application.",
        "file": "generated/packages/angular/generators/setup-ssr.json",
        "hidden": false,
        "name": "setup-ssr",
        "originalFilePath": "/packages/angular/src/generators/setup-ssr/schema.json",
        "path": "/nx-api/angular/generators/setup-ssr",
        "type": "generator"
      },
      "/nx-api/angular/generators/setup-tailwind": {
        "description": "Configures Tailwind CSS for an application or a buildable/publishable library.",
        "file": "generated/packages/angular/generators/setup-tailwind.json",
        "hidden": false,
        "name": "setup-tailwind",
        "originalFilePath": "/packages/angular/src/generators/setup-tailwind/schema.json",
        "path": "/nx-api/angular/generators/setup-tailwind",
        "type": "generator"
      },
      "/nx-api/angular/generators/stories": {
        "description": "Creates stories/specs for all components declared in a project.",
        "file": "generated/packages/angular/generators/stories.json",
        "hidden": false,
        "name": "stories",
        "originalFilePath": "/packages/angular/src/generators/stories/schema.json",
        "path": "/nx-api/angular/generators/stories",
        "type": "generator"
      },
      "/nx-api/angular/generators/storybook-configuration": {
        "description": "Adds Storybook configuration to a project.",
        "file": "generated/packages/angular/generators/storybook-configuration.json",
        "hidden": false,
        "name": "storybook-configuration",
        "originalFilePath": "/packages/angular/src/generators/storybook-configuration/schema.json",
        "path": "/nx-api/angular/generators/storybook-configuration",
        "type": "generator"
      },
      "/nx-api/angular/generators/cypress-component-configuration": {
        "description": "Setup Cypress component testing for a project.",
        "file": "generated/packages/angular/generators/cypress-component-configuration.json",
        "hidden": false,
        "name": "cypress-component-configuration",
        "originalFilePath": "/packages/angular/src/generators/cypress-component-configuration/schema.json",
        "path": "/nx-api/angular/generators/cypress-component-configuration",
        "type": "generator"
      },
      "/nx-api/angular/generators/web-worker": {
        "description": "Creates a Web Worker.",
        "file": "generated/packages/angular/generators/web-worker.json",
        "hidden": false,
        "name": "web-worker",
        "originalFilePath": "/packages/angular/src/generators/web-worker/schema.json",
        "path": "/nx-api/angular/generators/web-worker",
        "type": "generator"
      }
    },
    "path": "/nx-api/angular"
  },
  "create-nx-plugin": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "create-nx-plugin",
    "packageName": "create-nx-plugin",
    "description": "This package is used to scaffold a brand-new workspace used to develop an Nx plugin, and sets up a pre-configured plugin with the specified name. The new plugin is created with a default generator, executor, and e2e app.",
    "documents": {},
    "root": "/packages/create-nx-plugin",
    "source": "/packages/create-nx-plugin/src",
    "executors": {},
    "generators": {},
    "path": "/nx-api/create-nx-plugin"
  },
  "create-nx-workspace": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "create-nx-workspace",
    "packageName": "create-nx-workspace",
    "description": "Smart Monorepos · Fast CI",
    "documents": {},
    "root": "/packages/create-nx-workspace",
    "source": "/packages/create-nx-workspace/src",
    "executors": {},
    "generators": {},
    "path": "/nx-api/create-nx-workspace"
  },
  "cypress": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "cypress",
    "packageName": "@nx/cypress",
    "description": "The Nx Plugin for Cypress contains executors and generators allowing your workspace to use the powerful Cypress integration testing capabilities.",
    "documents": {
      "/nx-api/cypress/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Cypress contains executors and generators allowing your workspace to use the powerful Cypress integration testing capabilities.",
        "file": "generated/packages/cypress/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/cypress/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/cypress/cypress-plugin"
      }
    },
    "root": "/packages/cypress",
    "source": "/packages/cypress/src",
    "executors": {
      "/nx-api/cypress/executors/cypress": {
        "description": "Run Cypress E2E tests.",
        "file": "generated/packages/cypress/executors/cypress.json",
        "hidden": false,
        "name": "cypress",
        "originalFilePath": "/packages/cypress/src/executors/cypress/schema.json",
        "path": "/nx-api/cypress/executors/cypress",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/cypress/generators/init": {
        "description": "Initialize the `@nx/cypress` plugin.",
        "file": "generated/packages/cypress/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/cypress/src/generators/init/schema.json",
        "path": "/nx-api/cypress/generators/init",
        "type": "generator"
      },
      "/nx-api/cypress/generators/configuration": {
        "description": "Add a Cypress E2E Configuration to an existing project.",
        "file": "generated/packages/cypress/generators/configuration.json",
        "hidden": false,
        "name": "configuration",
        "originalFilePath": "/packages/cypress/src/generators/configuration/schema.json",
        "path": "/nx-api/cypress/generators/configuration",
        "type": "generator"
      },
      "/nx-api/cypress/generators/component-configuration": {
        "description": "Set up Cypress Component Test for a project",
        "file": "generated/packages/cypress/generators/component-configuration.json",
        "hidden": true,
        "name": "component-configuration",
        "originalFilePath": "/packages/cypress/src/generators/component-configuration/schema.json",
        "path": "/nx-api/cypress/generators/component-configuration",
        "type": "generator"
      },
      "/nx-api/cypress/generators/migrate-to-cypress-11": {
        "description": "Migrate existing Cypress e2e projects to Cypress v11",
        "file": "generated/packages/cypress/generators/migrate-to-cypress-11.json",
        "hidden": false,
        "name": "migrate-to-cypress-11",
        "originalFilePath": "/packages/cypress/src/generators/migrate-to-cypress-11/schema.json",
        "path": "/nx-api/cypress/generators/migrate-to-cypress-11",
        "type": "generator"
      },
      "/nx-api/cypress/generators/convert-to-inferred": {
        "description": "Convert existing Cypress project(s) using `@nx/cypress:cypress` executor to use `@nx/cypress/plugin`.",
        "file": "generated/packages/cypress/generators/convert-to-inferred.json",
        "hidden": false,
        "name": "convert-to-inferred",
        "originalFilePath": "/packages/cypress/src/generators/convert-to-inferred/schema.json",
        "path": "/nx-api/cypress/generators/convert-to-inferred",
        "type": "generator"
      }
    },
    "path": "/nx-api/cypress"
  },
  "detox": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "detox",
    "packageName": "@nx/detox",
    "description": "The Nx Plugin for Detox contains executors and generators for allowing your workspace to use the powerful Detox integration testing capabilities.",
    "documents": {
      "/nx-api/detox/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Detox contains executors and generators for allowing your workspace to use the powerful Detox integration testing capabilities.",
        "file": "generated/packages/detox/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/detox/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/detox/detox-plugin"
      }
    },
    "root": "/packages/detox",
    "source": "/packages/detox/src",
    "executors": {
      "/nx-api/detox/executors/build": {
        "description": "Run the command defined in build property of the specified configuration.",
        "file": "generated/packages/detox/executors/build.json",
        "hidden": false,
        "name": "build",
        "originalFilePath": "/packages/detox/src/executors/build/schema.json",
        "path": "/nx-api/detox/executors/build",
        "type": "executor"
      },
      "/nx-api/detox/executors/test": {
        "description": "Initiating your detox test suite.",
        "file": "generated/packages/detox/executors/test.json",
        "hidden": false,
        "name": "test",
        "originalFilePath": "/packages/detox/src/executors/test/schema.json",
        "path": "/nx-api/detox/executors/test",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/detox/generators/init": {
        "description": "Initialize the `@nx/detox` plugin.",
        "file": "generated/packages/detox/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/detox/src/generators/init/schema.json",
        "path": "/nx-api/detox/generators/init",
        "type": "generator"
      },
      "/nx-api/detox/generators/application": {
        "description": "Create a Detox application.",
        "file": "generated/packages/detox/generators/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/detox/src/generators/application/schema.json",
        "path": "/nx-api/detox/generators/application",
        "type": "generator"
      },
      "/nx-api/detox/generators/convert-to-inferred": {
        "description": "Convert existing Detox project(s) using `@nx/detox:*` executors to use `@nx/detox/plugin`. Defaults to migrating all projects. Pass '--project' to migrate only one target.",
        "file": "generated/packages/detox/generators/convert-to-inferred.json",
        "hidden": false,
        "name": "convert-to-inferred",
        "originalFilePath": "/packages/detox/src/generators/convert-to-inferred/schema.json",
        "path": "/nx-api/detox/generators/convert-to-inferred",
        "type": "generator"
      }
    },
    "path": "/nx-api/detox"
  },
  "devkit": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "devkit",
    "packageName": "@nx/devkit",
    "description": "The Nx Devkit is used to customize Nx for different technologies and use cases. It contains many utility functions for reading and writing files, updating configuration, working with Abstract Syntax Trees(ASTs), and more. Learn more about [extending Nx by leveraging the Nx Devkit](https://nx.dev/extending-nx/intro/getting-started) on our docs.",
    "documents": {
      "/nx-api/devkit/documents/nx_devkit": {
        "id": "nx_devkit",
        "name": "Overview",
        "description": "The Nx Devkit is used to customize Nx for different technologies and use cases. It contains many utility functions for reading and writing files, updating configuration, working with Abstract Syntax Trees(ASTs), and more. Learn more about [extending Nx by leveraging the Nx Devkit](https://nx.dev/extending-nx/intro/getting-started) on our docs.",
        "file": "generated/packages/devkit/documents/nx_devkit",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/devkit/documents/nx_devkit",
        "tags": [],
        "originalFilePath": "generated/devkit/README"
      },
      "/nx-api/devkit/documents/ngcli_adapter": {
        "id": "ngcli_adapter",
        "name": "Ng CLI Adapter",
        "description": "The Nx Devkit is used to customize Nx for different technologies and use cases. It contains many utility functions for reading and writing files, updating configuration, working with Abstract Syntax Trees(ASTs), and more. Learn more about [extending Nx by leveraging the Nx Devkit](https://nx.dev/extending-nx/intro/getting-started) on our docs.",
        "file": "generated/packages/devkit/documents/ngcli_adapter",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/devkit/documents/ngcli_adapter",
        "tags": [],
        "originalFilePath": "generated/devkit/ngcli_adapter/README"
      }
    },
    "root": "/packages/devkit",
    "source": "/packages/devkit/src",
    "executors": {},
    "generators": {},
    "path": "/nx-api/devkit"
  },
  "esbuild": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "esbuild",
    "packageName": "@nx/esbuild",
    "description": "The Nx Plugin for esbuild contains executors and generators that support building applications using esbuild",
    "documents": {
      "/nx-api/esbuild/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for esbuild contains executors and generators that support building applications using esbuild",
        "file": "generated/packages/esbuild/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/esbuild/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/esbuild/esbuild-plugin"
      }
    },
    "root": "/packages/esbuild",
    "source": "/packages/esbuild/src",
    "executors": {
      "/nx-api/esbuild/executors/esbuild": {
        "description": "Bundle a package using EsBuild.",
        "file": "generated/packages/esbuild/executors/esbuild.json",
        "hidden": false,
        "name": "esbuild",
        "originalFilePath": "/packages/esbuild/src/executors/esbuild/schema.json",
        "path": "/nx-api/esbuild/executors/esbuild",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/esbuild/generators/init": {
        "description": "Initialize the `@nx/esbuild` plugin.",
        "file": "generated/packages/esbuild/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/esbuild/src/generators/init/schema.json",
        "path": "/nx-api/esbuild/generators/init",
        "type": "generator"
      },
      "/nx-api/esbuild/generators/configuration": {
        "description": "Add esbuild configuration to a project.",
        "file": "generated/packages/esbuild/generators/configuration.json",
        "hidden": false,
        "name": "configuration",
        "originalFilePath": "/packages/esbuild/src/generators/configuration/schema.json",
        "path": "/nx-api/esbuild/generators/configuration",
        "type": "generator"
      }
    },
    "path": "/nx-api/esbuild"
  },
  "eslint": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "eslint",
    "packageName": "@nx/eslint",
    "description": "The ESLint plugin for Nx contains executors, generators and utilities used for linting JavaScript/TypeScript projects within an Nx workspace.",
    "documents": {
      "/nx-api/eslint/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The ESLint plugin for Nx contains executors, generators and utilities used for linting JavaScript/TypeScript projects within an Nx workspace.",
        "file": "generated/packages/eslint/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/eslint/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/eslint/eslint"
      }
    },
    "root": "/packages/eslint",
    "source": "/packages/eslint/src",
    "executors": {
      "/nx-api/eslint/executors/lint": {
        "description": "Run ESLint on a project.",
        "file": "generated/packages/eslint/executors/lint.json",
        "hidden": false,
        "name": "lint",
        "originalFilePath": "/packages/eslint/src/executors/lint/schema.json",
        "path": "/nx-api/eslint/executors/lint",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/eslint/generators/init": {
        "description": "Set up the ESLint plugin.",
        "file": "generated/packages/eslint/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/eslint/src/generators/init/schema.json",
        "path": "/nx-api/eslint/generators/init",
        "type": "generator"
      },
      "/nx-api/eslint/generators/workspace-rules-project": {
        "description": "Create the Workspace Lint Rules Project.",
        "file": "generated/packages/eslint/generators/workspace-rules-project.json",
        "hidden": true,
        "name": "workspace-rules-project",
        "originalFilePath": "/packages/eslint/src/generators/workspace-rules-project/schema.json",
        "path": "/nx-api/eslint/generators/workspace-rules-project",
        "type": "generator"
      },
      "/nx-api/eslint/generators/workspace-rule": {
        "description": "Create a new Workspace ESLint rule.",
        "file": "generated/packages/eslint/generators/workspace-rule.json",
        "hidden": false,
        "name": "workspace-rule",
        "originalFilePath": "/packages/eslint/src/generators/workspace-rule/schema.json",
        "path": "/nx-api/eslint/generators/workspace-rule",
        "type": "generator"
      },
      "/nx-api/eslint/generators/convert-to-flat-config": {
        "description": "Convert an Nx workspace's ESLint configs to use Flat Config.",
        "file": "generated/packages/eslint/generators/convert-to-flat-config.json",
        "hidden": false,
        "name": "convert-to-flat-config",
        "originalFilePath": "/packages/eslint/src/generators/convert-to-flat-config/schema.json",
        "path": "/nx-api/eslint/generators/convert-to-flat-config",
        "type": "generator"
      },
      "/nx-api/eslint/generators/convert-to-inferred": {
        "description": "Convert existing ESLint project(s) using `@nx/eslint:lint` executor to use `@nx/eslint/plugin`.",
        "file": "generated/packages/eslint/generators/convert-to-inferred.json",
        "hidden": false,
        "name": "convert-to-inferred",
        "originalFilePath": "/packages/eslint/src/generators/convert-to-inferred/schema.json",
        "path": "/nx-api/eslint/generators/convert-to-inferred",
        "type": "generator"
      }
    },
    "path": "/nx-api/eslint"
  },
  "eslint-plugin": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "eslint-plugin",
    "packageName": "@nx/eslint-plugin",
    "description": "The eslint-plugin package is an ESLint plugin that contains a collection of recommended ESLint rule configurations which you can extend from in your own ESLint configs, as well as an Nx-specific lint rule called enforce-module-boundaries.",
    "documents": {
      "/nx-api/eslint-plugin/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The eslint-plugin package is an ESLint plugin that contains a collection of recommended ESLint rule configurations which you can extend from in your own ESLint configs, as well as an Nx-specific lint rule called enforce-module-boundaries.",
        "file": "generated/packages/eslint-plugin/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/eslint-plugin/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/eslint/eslint-plugin"
      },
      "/nx-api/eslint-plugin/documents/enforce-module-boundaries": {
        "id": "enforce-module-boundaries",
        "name": "The `enforce-module-boundaries` rule",
        "description": "The eslint-plugin package is an ESLint plugin that contains a collection of recommended ESLint rule configurations which you can extend from in your own ESLint configs, as well as an Nx-specific lint rule called enforce-module-boundaries.",
        "file": "generated/packages/eslint-plugin/documents/enforce-module-boundaries",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/eslint-plugin/documents/enforce-module-boundaries",
        "tags": [],
        "originalFilePath": "shared/packages/eslint/enforce-module-boundaries"
      },
      "/nx-api/eslint-plugin/documents/dependency-checks": {
        "id": "dependency-checks",
        "name": "The `dependency-checks` rule",
        "description": "The eslint-plugin package is an ESLint plugin that contains a collection of recommended ESLint rule configurations which you can extend from in your own ESLint configs, as well as an Nx-specific lint rule called enforce-module-boundaries.",
        "file": "generated/packages/eslint-plugin/documents/dependency-checks",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/eslint-plugin/documents/dependency-checks",
        "tags": [],
        "originalFilePath": "shared/packages/eslint/dependency-checks"
      }
    },
    "root": "/packages/eslint-plugin",
    "source": "/packages/eslint-plugin/src",
    "executors": {},
    "generators": {},
    "path": "/nx-api/eslint-plugin"
  },
  "expo": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "expo",
    "packageName": "@nx/expo",
    "description": "The Expo Plugin for Nx contains executors and generators for managing and developing an expo application within your workspace. For example, you can directly build for different target platforms as well as generate projects and publish your code.",
    "documents": {
      "/nx-api/expo/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Expo Plugin for Nx contains executors and generators for managing and developing an expo application within your workspace. For example, you can directly build for different target platforms as well as generate projects and publish your code.",
        "file": "generated/packages/expo/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/expo/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/expo/expo-plugin"
      }
    },
    "root": "/packages/expo",
    "source": "/packages/expo/src",
    "executors": {
      "/nx-api/expo/executors/update": {
        "description": "Start an EAS update for your expo project",
        "file": "generated/packages/expo/executors/update.json",
        "hidden": false,
        "name": "update",
        "originalFilePath": "/packages/expo/src/executors/update/schema.json",
        "path": "/nx-api/expo/executors/update",
        "type": "executor"
      },
      "/nx-api/expo/executors/build": {
        "description": "Start an EAS build for your expo project",
        "file": "generated/packages/expo/executors/build.json",
        "hidden": false,
        "name": "build",
        "originalFilePath": "/packages/expo/src/executors/build/schema.json",
        "path": "/nx-api/expo/executors/build",
        "type": "executor"
      },
      "/nx-api/expo/executors/build-list": {
        "description": "List all EAS builds for your Expo project",
        "file": "generated/packages/expo/executors/build-list.json",
        "hidden": false,
        "name": "build-list",
        "originalFilePath": "/packages/expo/src/executors/build-list/schema.json",
        "path": "/nx-api/expo/executors/build-list",
        "type": "executor"
      },
      "/nx-api/expo/executors/run": {
        "description": "Run the Android app binary locally or run the iOS app binary locally",
        "file": "generated/packages/expo/executors/run.json",
        "hidden": false,
        "name": "run",
        "originalFilePath": "/packages/expo/src/executors/run/schema.json",
        "path": "/nx-api/expo/executors/run",
        "type": "executor"
      },
      "/nx-api/expo/executors/start": {
        "description": "Start a local dev server for the app or start a Webpack dev server for the web app",
        "file": "generated/packages/expo/executors/start.json",
        "hidden": false,
        "name": "start",
        "originalFilePath": "/packages/expo/src/executors/start/schema.json",
        "path": "/nx-api/expo/executors/start",
        "type": "executor"
      },
      "/nx-api/expo/executors/sync-deps": {
        "description": "Syncs dependencies to package.json (required for autolinking).",
        "file": "generated/packages/expo/executors/sync-deps.json",
        "hidden": false,
        "name": "sync-deps",
        "originalFilePath": "/packages/expo/src/executors/sync-deps/schema.json",
        "path": "/nx-api/expo/executors/sync-deps",
        "type": "executor"
      },
      "/nx-api/expo/executors/ensure-symlink": {
        "description": "Ensure workspace node_modules is symlink under app's node_modules folder.",
        "file": "generated/packages/expo/executors/ensure-symlink.json",
        "hidden": false,
        "name": "ensure-symlink",
        "originalFilePath": "/packages/expo/src/executors/ensure-symlink/schema.json",
        "path": "/nx-api/expo/executors/ensure-symlink",
        "type": "executor"
      },
      "/nx-api/expo/executors/prebuild": {
        "description": "Create native iOS and Android project files for building natively.",
        "file": "generated/packages/expo/executors/prebuild.json",
        "hidden": false,
        "name": "prebuild",
        "originalFilePath": "/packages/expo/src/executors/prebuild/schema.json",
        "path": "/nx-api/expo/executors/prebuild",
        "type": "executor"
      },
      "/nx-api/expo/executors/install": {
        "description": "Install a module or other package to a project.",
        "file": "generated/packages/expo/executors/install.json",
        "hidden": false,
        "name": "install",
        "originalFilePath": "/packages/expo/src/executors/install/schema.json",
        "path": "/nx-api/expo/executors/install",
        "type": "executor"
      },
      "/nx-api/expo/executors/export": {
        "description": "Export the JavaScript and assets for your app using Metro/webpack bundler",
        "file": "generated/packages/expo/executors/export.json",
        "hidden": false,
        "name": "export",
        "originalFilePath": "/packages/expo/src/executors/export/schema.json",
        "path": "/nx-api/expo/executors/export",
        "type": "executor"
      },
      "/nx-api/expo/executors/submit": {
        "description": "Submit app binary to App Store and/or Play Store",
        "file": "generated/packages/expo/executors/submit.json",
        "hidden": false,
        "name": "submit",
        "originalFilePath": "/packages/expo/src/executors/submit/schema.json",
        "path": "/nx-api/expo/executors/submit",
        "type": "executor"
      },
      "/nx-api/expo/executors/serve": {
        "description": "Serve up the Expo web app locally",
        "file": "generated/packages/expo/executors/serve.json",
        "hidden": false,
        "name": "serve",
        "originalFilePath": "/packages/expo/src/executors/serve/schema.json",
        "path": "/nx-api/expo/executors/serve",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/expo/generators/init": {
        "description": "Initialize the @nx/expo plugin",
        "file": "generated/packages/expo/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/expo/src/generators/init/schema.json",
        "path": "/nx-api/expo/generators/init",
        "type": "generator"
      },
      "/nx-api/expo/generators/application": {
        "description": "Create an application",
        "file": "generated/packages/expo/generators/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/expo/src/generators/application/schema.json",
        "path": "/nx-api/expo/generators/application",
        "type": "generator"
      },
      "/nx-api/expo/generators/library": {
        "description": "Create a library",
        "file": "generated/packages/expo/generators/library.json",
        "hidden": false,
        "name": "library",
        "originalFilePath": "/packages/expo/src/generators/library/schema.json",
        "path": "/nx-api/expo/generators/library",
        "type": "generator"
      },
      "/nx-api/expo/generators/component": {
        "description": "Create a component",
        "file": "generated/packages/expo/generators/component.json",
        "hidden": false,
        "name": "component",
        "originalFilePath": "/packages/expo/src/generators/component/schema.json",
        "path": "/nx-api/expo/generators/component",
        "type": "generator"
      },
      "/nx-api/expo/generators/convert-to-inferred": {
        "description": "Convert existing Expo project(s) using `@nx/expo:*` executors to use `@nx/expo/plugin`. Defaults to migrating all projects. Pass '--project' to migrate only one target.",
        "file": "generated/packages/expo/generators/convert-to-inferred.json",
        "hidden": false,
        "name": "convert-to-inferred",
        "originalFilePath": "/packages/expo/src/generators/convert-to-inferred/schema.json",
        "path": "/nx-api/expo/generators/convert-to-inferred",
        "type": "generator"
      }
    },
    "path": "/nx-api/expo"
  },
  "express": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "express",
    "packageName": "@nx/express",
    "description": "The Nx Plugin for Express contains executors and generators for allowing your workspace to create powerful Express Node applications and APIs.",
    "documents": {
      "/nx-api/express/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Express contains executors and generators for allowing your workspace to create powerful Express Node applications and APIs.",
        "file": "generated/packages/express/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/express/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/express/express-plugin"
      }
    },
    "root": "/packages/express",
    "source": "/packages/express/src",
    "executors": {},
    "generators": {
      "/nx-api/express/generators/init": {
        "description": "Initialize the `@nx/express` plugin.",
        "file": "generated/packages/express/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/express/src/generators/init/schema.json",
        "path": "/nx-api/express/generators/init",
        "type": "generator"
      },
      "/nx-api/express/generators/application": {
        "description": "Create an Express application.",
        "file": "generated/packages/express/generators/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/express/src/generators/application/schema.json",
        "path": "/nx-api/express/generators/application",
        "type": "generator"
      }
    },
    "path": "/nx-api/express"
  },
  "gradle": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "gradle",
    "packageName": "@nx/gradle",
    "description": "The Nx Plugin for Gradle allows Gradle tasks to be run through Nx",
    "documents": {
      "/nx-api/gradle/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Gradle allows Gradle tasks to be run through Nx",
        "file": "generated/packages/gradle/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/gradle/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/gradle/gradle-plugin"
      }
    },
    "root": "/packages/gradle",
    "source": "/packages/gradle/src",
    "executors": {},
    "generators": {
      "/nx-api/gradle/generators/init": {
        "description": "Initializes a Gradle project in the current workspace",
        "file": "generated/packages/gradle/generators/init.json",
        "hidden": false,
        "name": "init",
        "originalFilePath": "/packages/gradle/src/generators/init/schema.json",
        "path": "/nx-api/gradle/generators/init",
        "type": "generator"
      },
      "/nx-api/gradle/generators/ci-workflow": {
        "description": "Setup a CI Workflow to run Nx in CI",
        "file": "generated/packages/gradle/generators/ci-workflow.json",
        "hidden": false,
        "name": "ci-workflow",
        "originalFilePath": "/packages/gradle/src/generators/ci-workflow/schema.json",
        "path": "/nx-api/gradle/generators/ci-workflow",
        "type": "generator"
      }
    },
    "path": "/nx-api/gradle"
  },
  "jest": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "jest",
    "packageName": "@nx/jest",
    "description": "The Nx Plugin for Jest contains executors and generators allowing your workspace to use the powerful Jest testing capabilities.",
    "documents": {
      "/nx-api/jest/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Jest contains executors and generators allowing your workspace to use the powerful Jest testing capabilities.",
        "file": "generated/packages/jest/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/jest/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/jest/jest-plugin"
      }
    },
    "root": "/packages/jest",
    "source": "/packages/jest/src",
    "executors": {
      "/nx-api/jest/executors/jest": {
        "description": "Run Jest unit tests.",
        "file": "generated/packages/jest/executors/jest.json",
        "hidden": false,
        "name": "jest",
        "originalFilePath": "/packages/jest/src/executors/jest/schema.json",
        "path": "/nx-api/jest/executors/jest",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/jest/generators/init": {
        "description": "Initialize the `@nx/jest` plugin.",
        "file": "generated/packages/jest/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/jest/src/generators/init/schema.json",
        "path": "/nx-api/jest/generators/init",
        "type": "generator"
      },
      "/nx-api/jest/generators/configuration": {
        "description": "Add Jest configuration to a project.",
        "file": "generated/packages/jest/generators/configuration.json",
        "hidden": true,
        "name": "configuration",
        "originalFilePath": "/packages/jest/src/generators/configuration/schema.json",
        "path": "/nx-api/jest/generators/configuration",
        "type": "generator"
      },
      "/nx-api/jest/generators/convert-to-inferred": {
        "description": "Convert existing Jest project(s) using `@nx/jest:jest` executor to use `@nx/jest/plugin`.",
        "file": "generated/packages/jest/generators/convert-to-inferred.json",
        "hidden": false,
        "name": "convert-to-inferred",
        "originalFilePath": "/packages/jest/src/generators/convert-to-inferred/schema.json",
        "path": "/nx-api/jest/generators/convert-to-inferred",
        "type": "generator"
      }
    },
    "path": "/nx-api/jest"
  },
  "js": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "js",
    "packageName": "@nx/js",
    "description": "The JS plugin for Nx contains executors and generators that provide the best experience for developing JavaScript and TypeScript projects. ",
    "documents": {
      "/nx-api/js/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The JS plugin for Nx contains executors and generators that provide the best experience for developing JavaScript and TypeScript projects. ",
        "file": "generated/packages/js/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/js/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/js/js-plugin"
      },
      "/nx-api/js/documents/typescript-project-references": {
        "id": "typescript-project-references",
        "name": "Configure TypeScript Project References in an Nx Workspace",
        "description": "The JS plugin for Nx contains executors and generators that provide the best experience for developing JavaScript and TypeScript projects. ",
        "file": "generated/packages/js/documents/typescript-project-references",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/js/documents/typescript-project-references",
        "tags": [],
        "originalFilePath": "shared/packages/js/typescript-project-references"
      }
    },
    "root": "/packages/js",
    "source": "/packages/js/src",
    "executors": {
      "/nx-api/js/executors/tsc": {
        "description": "Build a project using TypeScript.",
        "file": "generated/packages/js/executors/tsc.json",
        "hidden": false,
        "name": "tsc",
        "originalFilePath": "/packages/js/src/executors/tsc/schema.json",
        "path": "/nx-api/js/executors/tsc",
        "type": "executor"
      },
      "/nx-api/js/executors/swc": {
        "description": "Build a project using SWC.",
        "file": "generated/packages/js/executors/swc.json",
        "hidden": false,
        "name": "swc",
        "originalFilePath": "/packages/js/src/executors/swc/schema.json",
        "path": "/nx-api/js/executors/swc",
        "type": "executor"
      },
      "/nx-api/js/executors/node": {
        "description": "Execute a Node application.",
        "file": "generated/packages/js/executors/node.json",
        "hidden": false,
        "name": "node",
        "originalFilePath": "/packages/js/src/executors/node/schema.json",
        "path": "/nx-api/js/executors/node",
        "type": "executor"
      },
      "/nx-api/js/executors/release-publish": {
        "description": "DO NOT INVOKE DIRECTLY WITH `nx run`. Use `nx release publish` instead.",
        "file": "generated/packages/js/executors/release-publish.json",
        "hidden": true,
        "name": "release-publish",
        "originalFilePath": "/packages/js/src/executors/release-publish/schema.json",
        "path": "/nx-api/js/executors/release-publish",
        "type": "executor"
      },
      "/nx-api/js/executors/verdaccio": {
        "description": "Start local registry with verdaccio",
        "file": "generated/packages/js/executors/verdaccio.json",
        "hidden": false,
        "name": "verdaccio",
        "originalFilePath": "/packages/js/src/executors/verdaccio/schema.json",
        "path": "/nx-api/js/executors/verdaccio",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/js/generators/library": {
        "description": "Create a library",
        "file": "generated/packages/js/generators/library.json",
        "hidden": false,
        "name": "library",
        "originalFilePath": "/packages/js/src/generators/library/schema.json",
        "path": "/nx-api/js/generators/library",
        "type": "generator"
      },
      "/nx-api/js/generators/init": {
        "description": "Initialize a TS/JS workspace.",
        "file": "generated/packages/js/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/js/src/generators/init/schema.json",
        "path": "/nx-api/js/generators/init",
        "type": "generator"
      },
      "/nx-api/js/generators/convert-to-swc": {
        "description": "Convert a TypeScript library to compile with SWC.",
        "file": "generated/packages/js/generators/convert-to-swc.json",
        "hidden": false,
        "name": "convert-to-swc",
        "originalFilePath": "/packages/js/src/generators/convert-to-swc/schema.json",
        "path": "/nx-api/js/generators/convert-to-swc",
        "type": "generator"
      },
      "/nx-api/js/generators/release-version": {
        "description": "DO NOT INVOKE DIRECTLY WITH `nx generate`. Use `nx release version` instead.",
        "file": "generated/packages/js/generators/release-version.json",
        "hidden": true,
        "name": "release-version",
        "originalFilePath": "/packages/js/src/generators/release-version/schema.json",
        "path": "/nx-api/js/generators/release-version",
        "type": "generator"
      },
      "/nx-api/js/generators/setup-verdaccio": {
        "description": "Setup Verdaccio for local package management.",
        "file": "generated/packages/js/generators/setup-verdaccio.json",
        "hidden": false,
        "name": "setup-verdaccio",
        "originalFilePath": "/packages/js/src/generators/setup-verdaccio/schema.json",
        "path": "/nx-api/js/generators/setup-verdaccio",
        "type": "generator"
      },
      "/nx-api/js/generators/setup-build": {
        "description": "setup-build generator",
        "file": "generated/packages/js/generators/setup-build.json",
        "hidden": false,
        "name": "setup-build",
        "originalFilePath": "/packages/js/src/generators/setup-build/schema.json",
        "path": "/nx-api/js/generators/setup-build",
        "type": "generator"
      },
      "/nx-api/js/generators/typescript-sync": {
        "description": "Synchronize TypeScript project references based on the project graph",
        "file": "generated/packages/js/generators/typescript-sync.json",
        "hidden": true,
        "name": "typescript-sync",
        "originalFilePath": "/packages/js/src/generators/typescript-sync/schema.json",
        "path": "/nx-api/js/generators/typescript-sync",
        "type": "generator"
      },
      "/nx-api/js/generators/setup-prettier": {
        "description": "Setup Prettier as the formatting tool.",
        "file": "generated/packages/js/generators/setup-prettier.json",
        "hidden": false,
        "name": "setup-prettier",
        "originalFilePath": "/packages/js/src/generators/setup-prettier/schema.json",
        "path": "/nx-api/js/generators/setup-prettier",
        "type": "generator"
      }
    },
    "path": "/nx-api/js"
  },
  "module-federation": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "module-federation",
    "packageName": "@nx/module-federation",
    "description": "The Nx Plugin for Module Federation contains executors and utilities that support building applications using Module Federation.",
    "documents": {},
    "root": "/packages/module-federation",
    "source": "/packages/module-federation/src",
    "executors": {},
    "generators": {},
    "path": "/nx-api/module-federation"
  },
  "nest": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "nest",
    "packageName": "@nx/nest",
    "description": "The Nx Plugin for Nest contains executors and generators for allowing your workspace to create powerful Nest best in class APIs.",
    "documents": {
      "/nx-api/nest/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Nest contains executors and generators for allowing your workspace to create powerful Nest best in class APIs.",
        "file": "generated/packages/nest/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nest/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/nest/nest-plugin"
      }
    },
    "root": "/packages/nest",
    "source": "/packages/nest/src",
    "executors": {},
    "generators": {
      "/nx-api/nest/generators/application": {
        "description": "Create a NestJS application.",
        "file": "generated/packages/nest/generators/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/nest/src/generators/application/schema.json",
        "path": "/nx-api/nest/generators/application",
        "type": "generator"
      },
      "/nx-api/nest/generators/init": {
        "description": "Initialize the `@nx/nest` plugin.",
        "file": "generated/packages/nest/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/nest/src/generators/init/schema.json",
        "path": "/nx-api/nest/generators/init",
        "type": "generator"
      },
      "/nx-api/nest/generators/library": {
        "description": "Create a new NestJS library.",
        "file": "generated/packages/nest/generators/library.json",
        "hidden": false,
        "name": "library",
        "originalFilePath": "/packages/nest/src/generators/library/schema.json",
        "path": "/nx-api/nest/generators/library",
        "type": "generator"
      },
      "/nx-api/nest/generators/class": {
        "description": "Run the `class` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/class.json",
        "hidden": false,
        "name": "class",
        "originalFilePath": "/packages/nest/src/generators/class/schema.json",
        "path": "/nx-api/nest/generators/class",
        "type": "generator"
      },
      "/nx-api/nest/generators/controller": {
        "description": "Run the `controller` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/controller.json",
        "hidden": false,
        "name": "controller",
        "originalFilePath": "/packages/nest/src/generators/controller/schema.json",
        "path": "/nx-api/nest/generators/controller",
        "type": "generator"
      },
      "/nx-api/nest/generators/decorator": {
        "description": "Run the `decorator` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/decorator.json",
        "hidden": false,
        "name": "decorator",
        "originalFilePath": "/packages/nest/src/generators/decorator/schema.json",
        "path": "/nx-api/nest/generators/decorator",
        "type": "generator"
      },
      "/nx-api/nest/generators/filter": {
        "description": "Run the `filter` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/filter.json",
        "hidden": false,
        "name": "filter",
        "originalFilePath": "/packages/nest/src/generators/filter/schema.json",
        "path": "/nx-api/nest/generators/filter",
        "type": "generator"
      },
      "/nx-api/nest/generators/gateway": {
        "description": "Run the `gateway` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/gateway.json",
        "hidden": false,
        "name": "gateway",
        "originalFilePath": "/packages/nest/src/generators/gateway/schema.json",
        "path": "/nx-api/nest/generators/gateway",
        "type": "generator"
      },
      "/nx-api/nest/generators/guard": {
        "description": "Run the `guard` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/guard.json",
        "hidden": false,
        "name": "guard",
        "originalFilePath": "/packages/nest/src/generators/guard/schema.json",
        "path": "/nx-api/nest/generators/guard",
        "type": "generator"
      },
      "/nx-api/nest/generators/interceptor": {
        "description": "Run the `interceptor` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/interceptor.json",
        "hidden": false,
        "name": "interceptor",
        "originalFilePath": "/packages/nest/src/generators/interceptor/schema.json",
        "path": "/nx-api/nest/generators/interceptor",
        "type": "generator"
      },
      "/nx-api/nest/generators/interface": {
        "description": "Run the `interface` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/interface.json",
        "hidden": false,
        "name": "interface",
        "originalFilePath": "/packages/nest/src/generators/interface/schema.json",
        "path": "/nx-api/nest/generators/interface",
        "type": "generator"
      },
      "/nx-api/nest/generators/middleware": {
        "description": "Run the `middleware` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/middleware.json",
        "hidden": false,
        "name": "middleware",
        "originalFilePath": "/packages/nest/src/generators/middleware/schema.json",
        "path": "/nx-api/nest/generators/middleware",
        "type": "generator"
      },
      "/nx-api/nest/generators/module": {
        "description": "Run the `module` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/module.json",
        "hidden": false,
        "name": "module",
        "originalFilePath": "/packages/nest/src/generators/module/schema.json",
        "path": "/nx-api/nest/generators/module",
        "type": "generator"
      },
      "/nx-api/nest/generators/pipe": {
        "description": "Run the `pipe` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/pipe.json",
        "hidden": false,
        "name": "pipe",
        "originalFilePath": "/packages/nest/src/generators/pipe/schema.json",
        "path": "/nx-api/nest/generators/pipe",
        "type": "generator"
      },
      "/nx-api/nest/generators/provider": {
        "description": "Run the `provider` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/provider.json",
        "hidden": false,
        "name": "provider",
        "originalFilePath": "/packages/nest/src/generators/provider/schema.json",
        "path": "/nx-api/nest/generators/provider",
        "type": "generator"
      },
      "/nx-api/nest/generators/resolver": {
        "description": "Run the `resolver` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/resolver.json",
        "hidden": false,
        "name": "resolver",
        "originalFilePath": "/packages/nest/src/generators/resolver/schema.json",
        "path": "/nx-api/nest/generators/resolver",
        "type": "generator"
      },
      "/nx-api/nest/generators/resource": {
        "description": "Run the `resource` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/resource.json",
        "hidden": false,
        "name": "resource",
        "originalFilePath": "/packages/nest/src/generators/resource/schema.json",
        "path": "/nx-api/nest/generators/resource",
        "type": "generator"
      },
      "/nx-api/nest/generators/service": {
        "description": "Run the `service` NestJS generator with Nx project support.",
        "file": "generated/packages/nest/generators/service.json",
        "hidden": false,
        "name": "service",
        "originalFilePath": "/packages/nest/src/generators/service/schema.json",
        "path": "/nx-api/nest/generators/service",
        "type": "generator"
      }
    },
    "path": "/nx-api/nest"
  },
  "next": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "next",
    "packageName": "@nx/next",
    "description": "The Next.js plugin for Nx contains executors and generators for managing Next.js applications and libraries within an Nx workspace. It provides:\n\n\n- Scaffolding for creating, building, serving, linting, and testing Next.js applications.\n\n- Integration with building, serving, and exporting a Next.js application.\n\n- Integration with React libraries within the workspace. \n\nWhen using Next.js in Nx, you get the out-of-the-box support for TypeScript, Playwright, Cypress, and Jest. No need to configure anything: watch mode, source maps, and typings just work.",
    "documents": {
      "/nx-api/next/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Next.js plugin for Nx contains executors and generators for managing Next.js applications and libraries within an Nx workspace. It provides:\n\n\n- Scaffolding for creating, building, serving, linting, and testing Next.js applications.\n\n- Integration with building, serving, and exporting a Next.js application.\n\n- Integration with React libraries within the workspace. \n\nWhen using Next.js in Nx, you get the out-of-the-box support for TypeScript, Playwright, Cypress, and Jest. No need to configure anything: watch mode, source maps, and typings just work.",
        "file": "generated/packages/next/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/next/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/next/plugin-overview"
      }
    },
    "root": "/packages/next",
    "source": "/packages/next/src",
    "executors": {
      "/nx-api/next/executors/build": {
        "description": "Build a Next.js application.",
        "file": "generated/packages/next/executors/build.json",
        "hidden": false,
        "name": "build",
        "originalFilePath": "/packages/next/src/executors/build/schema.json",
        "path": "/nx-api/next/executors/build",
        "type": "executor"
      },
      "/nx-api/next/executors/server": {
        "description": "Serve a Next.js application.",
        "file": "generated/packages/next/executors/server.json",
        "hidden": false,
        "name": "server",
        "originalFilePath": "/packages/next/src/executors/server/schema.json",
        "path": "/nx-api/next/executors/server",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/next/generators/init": {
        "description": "Initialize the `@nx/next` plugin.",
        "file": "generated/packages/next/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/next/src/generators/init/schema.json",
        "path": "/nx-api/next/generators/init",
        "type": "generator"
      },
      "/nx-api/next/generators/application": {
        "description": "Create an application.",
        "file": "generated/packages/next/generators/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/next/src/generators/application/schema.json",
        "path": "/nx-api/next/generators/application",
        "type": "generator"
      },
      "/nx-api/next/generators/page": {
        "description": "Create a page.",
        "file": "generated/packages/next/generators/page.json",
        "hidden": false,
        "name": "page",
        "originalFilePath": "/packages/next/src/generators/page/schema.json",
        "path": "/nx-api/next/generators/page",
        "type": "generator"
      },
      "/nx-api/next/generators/component": {
        "description": "Create a component.",
        "file": "generated/packages/next/generators/component.json",
        "hidden": false,
        "name": "component",
        "originalFilePath": "/packages/next/src/generators/component/schema.json",
        "path": "/nx-api/next/generators/component",
        "type": "generator"
      },
      "/nx-api/next/generators/library": {
        "description": "Create a library.",
        "file": "generated/packages/next/generators/library.json",
        "hidden": false,
        "name": "library",
        "originalFilePath": "/packages/next/src/generators/library/schema.json",
        "path": "/nx-api/next/generators/library",
        "type": "generator"
      },
      "/nx-api/next/generators/custom-server": {
        "description": "Set up a custom server.",
        "file": "generated/packages/next/generators/custom-server.json",
        "hidden": false,
        "name": "custom-server",
        "originalFilePath": "/packages/next/src/generators/custom-server/schema.json",
        "path": "/nx-api/next/generators/custom-server",
        "type": "generator"
      },
      "/nx-api/next/generators/cypress-component-configuration": {
        "description": "cypress-component-configuration generator",
        "file": "generated/packages/next/generators/cypress-component-configuration.json",
        "hidden": false,
        "name": "cypress-component-configuration",
        "originalFilePath": "/packages/next/src/generators/cypress-component-configuration/schema.json",
        "path": "/nx-api/next/generators/cypress-component-configuration",
        "type": "generator"
      },
      "/nx-api/next/generators/convert-to-inferred": {
        "description": "Convert an existing Next.js project(s) using `@nx/next:build` to use `@nx/next/plugin`. Defaults to migrating all projects. Pass '--project' to migrate a single project.",
        "file": "generated/packages/next/generators/convert-to-inferred.json",
        "hidden": false,
        "name": "convert-to-inferred",
        "originalFilePath": "/packages/next/src/generators/convert-to-inferred/schema.json",
        "path": "/nx-api/next/generators/convert-to-inferred",
        "type": "generator"
      }
    },
    "path": "/nx-api/next"
  },
  "node": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "node",
    "packageName": "@nx/node",
    "description": "The Node Plugin for Nx contains generators to manage Node applications within an Nx workspace.",
    "documents": {
      "/nx-api/node/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Node Plugin for Nx contains generators to manage Node applications within an Nx workspace.",
        "file": "generated/packages/node/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/node/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/node/node-plugin"
      }
    },
    "root": "/packages/node",
    "source": "/packages/node/src",
    "executors": {},
    "generators": {
      "/nx-api/node/generators/init": {
        "description": "Initialize the `@nx/node` plugin.",
        "file": "generated/packages/node/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/node/src/generators/init/schema.json",
        "path": "/nx-api/node/generators/init",
        "type": "generator"
      },
      "/nx-api/node/generators/application": {
        "description": "Create a node application.",
        "file": "generated/packages/node/generators/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/node/src/generators/application/schema.json",
        "path": "/nx-api/node/generators/application",
        "type": "generator"
      },
      "/nx-api/node/generators/library": {
        "description": "Create a node library.",
        "file": "generated/packages/node/generators/library.json",
        "hidden": false,
        "name": "library",
        "originalFilePath": "/packages/node/src/generators/library/schema.json",
        "path": "/nx-api/node/generators/library",
        "type": "generator"
      },
      "/nx-api/node/generators/setup-docker": {
        "description": "Set up Docker configuration for a project.",
        "file": "generated/packages/node/generators/setup-docker.json",
        "hidden": false,
        "name": "setup-docker",
        "originalFilePath": "/packages/node/src/generators/setup-docker/schema.json",
        "path": "/nx-api/node/generators/setup-docker",
        "type": "generator"
      }
    },
    "path": "/nx-api/node"
  },
  "nuxt": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "nuxt",
    "packageName": "@nx/nuxt",
    "description": "The Nuxt plugin for Nx contains executors and generators for managing Nuxt applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Vitest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
    "documents": {
      "/nx-api/nuxt/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Nuxt contains generators for managing Nuxt applications within a Nx workspace. This page also explains how to configure Nuxt on your Nx workspace.",
        "file": "generated/packages/nuxt/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nuxt/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/nuxt/nuxt-plugin"
      }
    },
    "root": "/packages/nuxt",
    "source": "/packages/nuxt/src",
    "executors": {},
    "generators": {
      "/nx-api/nuxt/generators/init": {
        "description": "Initialize the `@nx/nuxt` plugin.",
        "file": "generated/packages/nuxt/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/nuxt/src/generators/init/schema.json",
        "path": "/nx-api/nuxt/generators/init",
        "type": "generator"
      },
      "/nx-api/nuxt/generators/application": {
        "description": "Create a Nuxt application.",
        "file": "generated/packages/nuxt/generators/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/nuxt/src/generators/application/schema.json",
        "path": "/nx-api/nuxt/generators/application",
        "type": "generator"
      },
      "/nx-api/nuxt/generators/storybook-configuration": {
        "description": "Set up storybook for a Nuxt app.",
        "file": "generated/packages/nuxt/generators/storybook-configuration.json",
        "hidden": false,
        "name": "storybook-configuration",
        "originalFilePath": "/packages/nuxt/src/generators/storybook-configuration/schema.json",
        "path": "/nx-api/nuxt/generators/storybook-configuration",
        "type": "generator"
      }
    },
    "path": "/nx-api/nuxt"
  },
  "nx": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "nx",
    "packageName": "nx",
    "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
    "documents": {
      "/nx-api/nx/documents/create-nx-workspace": {
        "id": "create-nx-workspace",
        "name": "create-nx-workspace",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/create-nx-workspace",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/create-nx-workspace",
        "tags": ["installation"],
        "originalFilePath": "generated/cli/create-nx-workspace"
      },
      "/nx-api/nx/documents/init": {
        "id": "init",
        "name": "init",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/init",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/init",
        "tags": ["init"],
        "originalFilePath": "generated/cli/init"
      },
      "/nx-api/nx/documents/generate": {
        "id": "generate",
        "name": "generate",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/generate",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/generate",
        "tags": ["generate-code"],
        "originalFilePath": "generated/cli/generate"
      },
      "/nx-api/nx/documents/run": {
        "id": "run",
        "name": "run",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/run",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/run",
        "tags": ["run-tasks"],
        "originalFilePath": "generated/cli/run"
      },
      "/nx-api/nx/documents/daemon": {
        "id": "daemon",
        "name": "daemon",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/daemon",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/daemon",
        "tags": ["daemon"],
        "originalFilePath": "generated/cli/daemon"
      },
      "/nx-api/nx/documents/dep-graph": {
        "id": "dep-graph",
        "name": "graph",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/dep-graph",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/dep-graph",
        "tags": ["explore-graph"],
        "originalFilePath": "generated/cli/graph"
      },
      "/nx-api/nx/documents/run-many": {
        "id": "run-many",
        "name": "run-many",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/run-many",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/run-many",
        "tags": ["run-tasks"],
        "originalFilePath": "generated/cli/run-many"
      },
      "/nx-api/nx/documents/affected": {
        "id": "affected",
        "name": "affected",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/affected",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/affected",
        "tags": ["run-tasks"],
        "originalFilePath": "generated/cli/affected"
      },
      "/nx-api/nx/documents/format-check": {
        "id": "format-check",
        "name": "format:check",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/format-check",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/format-check",
        "tags": ["enforce-module-boundaries"],
        "originalFilePath": "generated/cli/format-check"
      },
      "/nx-api/nx/documents/format-write": {
        "id": "format-write",
        "name": "format:write",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/format-write",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/format-write",
        "tags": ["enforce-module-boundaries"],
        "originalFilePath": "generated/cli/format-write"
      },
      "/nx-api/nx/documents/migrate": {
        "id": "migrate",
        "name": "migrate",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/migrate",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/migrate",
        "tags": ["automate-updating-dependencies"],
        "originalFilePath": "generated/cli/migrate"
      },
      "/nx-api/nx/documents/report": {
        "id": "report",
        "name": "report",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/report",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/report",
        "tags": [],
        "originalFilePath": "generated/cli/report"
      },
      "/nx-api/nx/documents/list": {
        "id": "list",
        "name": "list",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/list",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/list",
        "tags": [],
        "originalFilePath": "generated/cli/list"
      },
      "/nx-api/nx/documents/connect-to-nx-cloud": {
        "id": "connect-to-nx-cloud",
        "name": "connect-to-nx-cloud",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/connect-to-nx-cloud",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/connect-to-nx-cloud",
        "tags": ["cache-task-results", "distribute-task-execution"],
        "originalFilePath": "generated/cli/connect"
      },
      "/nx-api/nx/documents/reset": {
        "id": "reset",
        "name": "reset",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/reset",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/reset",
        "tags": ["cache-task-results"],
        "originalFilePath": "generated/cli/reset"
      },
      "/nx-api/nx/documents/repair": {
        "id": "repair",
        "name": "repair",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/repair",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/repair",
        "tags": [],
        "originalFilePath": "generated/cli/repair"
      },
      "/nx-api/nx/documents/sync": {
        "id": "sync",
        "name": "sync",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/sync",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/sync",
        "tags": ["sync"],
        "originalFilePath": "generated/cli/sync"
      },
      "/nx-api/nx/documents/sync-check": {
        "id": "sync-check",
        "name": "sync:check",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/sync-check",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/sync-check",
        "tags": ["sync"],
        "originalFilePath": "generated/cli/sync-check"
      },
      "/nx-api/nx/documents/import": {
        "id": "import",
        "name": "import",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/import",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/import",
        "tags": ["import"],
        "originalFilePath": "generated/cli/import"
      },
      "/nx-api/nx/documents/exec": {
        "id": "exec",
        "name": "exec",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/exec",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/exec",
        "tags": ["exec"],
        "originalFilePath": "generated/cli/exec"
      },
      "/nx-api/nx/documents/watch": {
        "id": "watch",
        "name": "watch",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/watch",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/watch",
        "tags": ["workspace-watching"],
        "originalFilePath": "generated/cli/watch"
      },
      "/nx-api/nx/documents/show": {
        "id": "show",
        "name": "show",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/show",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/show",
        "tags": ["explore-graph"],
        "originalFilePath": "generated/cli/show"
      },
      "/nx-api/nx/documents/view-logs": {
        "id": "view-logs",
        "name": "view-logs",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/view-logs",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/view-logs",
        "tags": [],
        "originalFilePath": "generated/cli/view-logs"
      },
      "/nx-api/nx/documents/release": {
        "id": "release",
        "name": "release",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/release",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/release",
        "tags": ["nx-release"],
        "originalFilePath": "generated/cli/release"
      },
      "/nx-api/nx/documents/add": {
        "id": "add",
        "name": "add",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/add",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/add",
        "tags": ["add"],
        "originalFilePath": "generated/cli/add"
      },
      "/nx-api/nx/documents/login": {
        "id": "login",
        "name": "login",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/login",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/login",
        "tags": ["login"],
        "originalFilePath": "generated/cli/login"
      },
      "/nx-api/nx/documents/logout": {
        "id": "logout",
        "name": "logout",
        "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
        "file": "generated/packages/nx/documents/logout",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/nx/documents/logout",
        "tags": ["login"],
        "originalFilePath": "generated/cli/logout"
      }
    },
    "root": "/packages/nx",
    "source": "/packages/nx/src",
    "executors": {
      "/nx-api/nx/executors/noop": {
        "description": "An executor that does nothing",
        "file": "generated/packages/nx/executors/noop.json",
        "hidden": false,
        "name": "noop",
        "originalFilePath": "/packages/nx/src/executors/noop/schema.json",
        "path": "/nx-api/nx/executors/noop",
        "type": "executor"
      },
      "/nx-api/nx/executors/run-commands": {
        "description": "Run any custom commands with Nx.",
        "file": "generated/packages/nx/executors/run-commands.json",
        "hidden": false,
        "name": "run-commands",
        "originalFilePath": "/packages/nx/src/executors/run-commands/schema.json",
        "path": "/nx-api/nx/executors/run-commands",
        "type": "executor"
      },
      "/nx-api/nx/executors/run-script": {
        "description": "Run an NPM script using Nx.",
        "file": "generated/packages/nx/executors/run-script.json",
        "hidden": false,
        "name": "run-script",
        "originalFilePath": "/packages/nx/src/executors/run-script/schema.json",
        "path": "/nx-api/nx/executors/run-script",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/nx/generators/connect-to-nx-cloud": {
        "description": "Connect a workspace to Nx Cloud",
        "file": "generated/packages/nx/generators/connect-to-nx-cloud.json",
        "hidden": false,
        "name": "connect-to-nx-cloud",
        "originalFilePath": "/packages/nx/src/nx-cloud/generators/connect-to-nx-cloud/schema.json",
        "path": "/nx-api/nx/generators/connect-to-nx-cloud",
        "type": "generator"
      }
    },
    "path": "/nx-api/nx"
  },
  "playwright": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "playwright",
    "packageName": "@nx/playwright",
    "description": "The Nx Plugin for Playwright contains executors and generators allowing your workspace to use the powerful Playwright integration testing capabilities.",
    "documents": {
      "/nx-api/playwright/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Playwright contains executors and generators allowing your workspace to use the powerful Playwright integration testing capabilities.",
        "file": "generated/packages/playwright/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/playwright/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/playwright/playwright-plugin"
      }
    },
    "root": "/packages/playwright",
    "source": "/packages/playwright/src",
    "executors": {
      "/nx-api/playwright/executors/playwright": {
        "description": "Run Playwright tests.",
        "file": "generated/packages/playwright/executors/playwright.json",
        "hidden": false,
        "name": "playwright",
        "originalFilePath": "/packages/playwright/src/executors/playwright/schema.json",
        "path": "/nx-api/playwright/executors/playwright",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/playwright/generators/configuration": {
        "description": "Add Nx Playwright configuration to your project",
        "file": "generated/packages/playwright/generators/configuration.json",
        "hidden": false,
        "name": "configuration",
        "originalFilePath": "/packages/playwright/src/generators/configuration/schema.json",
        "path": "/nx-api/playwright/generators/configuration",
        "type": "generator"
      },
      "/nx-api/playwright/generators/init": {
        "description": "Initializes a Playwright project in the current workspace",
        "file": "generated/packages/playwright/generators/init.json",
        "hidden": false,
        "name": "init",
        "originalFilePath": "/packages/playwright/src/generators/init/schema.json",
        "path": "/nx-api/playwright/generators/init",
        "type": "generator"
      },
      "/nx-api/playwright/generators/convert-to-inferred": {
        "description": "Convert existing Playwright project(s) using `@nx/playwright:playwright` executor to use `@nx/playwright/plugin`.",
        "file": "generated/packages/playwright/generators/convert-to-inferred.json",
        "hidden": false,
        "name": "convert-to-inferred",
        "originalFilePath": "/packages/playwright/src/generators/convert-to-inferred/schema.json",
        "path": "/nx-api/playwright/generators/convert-to-inferred",
        "type": "generator"
      }
    },
    "path": "/nx-api/playwright"
  },
  "plugin": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "plugin",
    "packageName": "@nx/plugin",
    "description": "This plugin is used to create Nx plugins! It contains generators for generating common plugin features like generators, executors, migrations and more.",
    "documents": {
      "/nx-api/plugin/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "This plugin is used to create Nx plugins! It contains generators for generating common plugin features like generators, executors, migrations and more.",
        "file": "generated/packages/plugin/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/plugin/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/plugin/plugin"
      }
    },
    "root": "/packages/plugin",
    "source": "/packages/plugin/src",
    "executors": {},
    "generators": {
      "/nx-api/plugin/generators/plugin": {
        "description": "Create a Nx Plugin.",
        "file": "generated/packages/plugin/generators/plugin.json",
        "hidden": false,
        "name": "plugin",
        "originalFilePath": "/packages/plugin/src/generators/plugin/schema.json",
        "path": "/nx-api/plugin/generators/plugin",
        "type": "generator"
      },
      "/nx-api/plugin/generators/create-package": {
        "description": "Create a package which can be used by npx to create a new workspace",
        "file": "generated/packages/plugin/generators/create-package.json",
        "hidden": false,
        "name": "create-package",
        "originalFilePath": "/packages/plugin/src/generators/create-package/schema.json",
        "path": "/nx-api/plugin/generators/create-package",
        "type": "generator"
      },
      "/nx-api/plugin/generators/e2e-project": {
        "description": "Create a E2E application for a Nx Plugin.",
        "file": "generated/packages/plugin/generators/e2e-project.json",
        "hidden": false,
        "name": "e2e-project",
        "originalFilePath": "/packages/plugin/src/generators/e2e-project/schema.json",
        "path": "/nx-api/plugin/generators/e2e-project",
        "type": "generator"
      },
      "/nx-api/plugin/generators/migration": {
        "description": "Create a migration for an Nx Plugin.",
        "file": "generated/packages/plugin/generators/migration.json",
        "hidden": false,
        "name": "migration",
        "originalFilePath": "/packages/plugin/src/generators/migration/schema.json",
        "path": "/nx-api/plugin/generators/migration",
        "type": "generator"
      },
      "/nx-api/plugin/generators/generator": {
        "description": "Create a generator for an Nx Plugin.",
        "file": "generated/packages/plugin/generators/generator.json",
        "hidden": false,
        "name": "generator",
        "originalFilePath": "/packages/plugin/src/generators/generator/schema.json",
        "path": "/nx-api/plugin/generators/generator",
        "type": "generator"
      },
      "/nx-api/plugin/generators/executor": {
        "description": "Create an executor for an Nx Plugin.",
        "file": "generated/packages/plugin/generators/executor.json",
        "hidden": false,
        "name": "executor",
        "originalFilePath": "/packages/plugin/src/generators/executor/schema.json",
        "path": "/nx-api/plugin/generators/executor",
        "type": "generator"
      },
      "/nx-api/plugin/generators/plugin-lint-checks": {
        "description": "Adds linting configuration to validate common json files for nx plugins.",
        "file": "generated/packages/plugin/generators/plugin-lint-checks.json",
        "hidden": false,
        "name": "plugin-lint-checks",
        "originalFilePath": "/packages/plugin/src/generators/lint-checks/schema.json",
        "path": "/nx-api/plugin/generators/plugin-lint-checks",
        "type": "generator"
      },
      "/nx-api/plugin/generators/preset": {
        "description": "Initializes a workspace with an nx-plugin inside of it. Use as: `create-nx-workspace --preset @nx/plugin`.",
        "file": "generated/packages/plugin/generators/preset.json",
        "hidden": true,
        "name": "preset",
        "originalFilePath": "/packages/plugin/src/generators/preset/schema.json",
        "path": "/nx-api/plugin/generators/preset",
        "type": "generator"
      }
    },
    "path": "/nx-api/plugin"
  },
  "react": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "react",
    "packageName": "@nx/react",
    "description": "The React plugin for Nx contains executors and generators for managing React applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Jest, Vitest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, components, hooks, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
    "documents": {
      "/nx-api/react/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The React plugin for Nx contains executors and generators for managing React applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Jest, Vitest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, components, hooks, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
        "file": "generated/packages/react/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/react/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/react/react-plugin"
      }
    },
    "root": "/packages/react",
    "source": "/packages/react/src",
    "executors": {
      "/nx-api/react/executors/module-federation-dev-server": {
        "description": "Serve a host or remote application.",
        "file": "generated/packages/react/executors/module-federation-dev-server.json",
        "hidden": false,
        "name": "module-federation-dev-server",
        "originalFilePath": "/packages/react/src/executors/module-federation-dev-server/schema.json",
        "path": "/nx-api/react/executors/module-federation-dev-server",
        "type": "executor"
      },
      "/nx-api/react/executors/module-federation-ssr-dev-server": {
        "description": "Serve a host application along with it's known remotes.",
        "file": "generated/packages/react/executors/module-federation-ssr-dev-server.json",
        "hidden": false,
        "name": "module-federation-ssr-dev-server",
        "originalFilePath": "/packages/react/src/executors/module-federation-ssr-dev-server/schema.json",
        "path": "/nx-api/react/executors/module-federation-ssr-dev-server",
        "type": "executor"
      },
      "/nx-api/react/executors/module-federation-static-server": {
        "description": "Serve a host and its remotes statically.",
        "file": "generated/packages/react/executors/module-federation-static-server.json",
        "hidden": false,
        "name": "module-federation-static-server",
        "originalFilePath": "/packages/react/src/executors/module-federation-static-server/schema.json",
        "path": "/nx-api/react/executors/module-federation-static-server",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/react/generators/init": {
        "description": "Initialize the `@nx/react` plugin.",
        "file": "generated/packages/react/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/react/src/generators/init/schema.json",
        "path": "/nx-api/react/generators/init",
        "type": "generator"
      },
      "/nx-api/react/generators/application": {
        "description": "Create a React application.",
        "file": "generated/packages/react/generators/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/react/src/generators/application/schema.json",
        "path": "/nx-api/react/generators/application",
        "type": "generator"
      },
      "/nx-api/react/generators/library": {
        "description": "Create a React library.",
        "file": "generated/packages/react/generators/library.json",
        "hidden": false,
        "name": "library",
        "originalFilePath": "/packages/react/src/generators/library/schema.json",
        "path": "/nx-api/react/generators/library",
        "type": "generator"
      },
      "/nx-api/react/generators/component": {
        "description": "Create a React component.",
        "file": "generated/packages/react/generators/component.json",
        "hidden": false,
        "name": "component",
        "originalFilePath": "/packages/react/src/generators/component/schema.json",
        "path": "/nx-api/react/generators/component",
        "type": "generator"
      },
      "/nx-api/react/generators/redux": {
        "description": "Create a Redux slice for a project.",
        "file": "generated/packages/react/generators/redux.json",
        "hidden": false,
        "name": "redux",
        "originalFilePath": "/packages/react/src/generators/redux/schema.json",
        "path": "/nx-api/react/generators/redux",
        "type": "generator"
      },
      "/nx-api/react/generators/storybook-configuration": {
        "description": "Set up storybook for a React app or library.",
        "file": "generated/packages/react/generators/storybook-configuration.json",
        "hidden": false,
        "name": "storybook-configuration",
        "originalFilePath": "/packages/react/src/generators/storybook-configuration/schema.json",
        "path": "/nx-api/react/generators/storybook-configuration",
        "type": "generator"
      },
      "/nx-api/react/generators/component-story": {
        "description": "Generate storybook story for a React component",
        "file": "generated/packages/react/generators/component-story.json",
        "hidden": false,
        "name": "component-story",
        "originalFilePath": "/packages/react/src/generators/component-story/schema.json",
        "path": "/nx-api/react/generators/component-story",
        "type": "generator"
      },
      "/nx-api/react/generators/stories": {
        "description": "Create stories/specs for all components declared in an app or library.",
        "file": "generated/packages/react/generators/stories.json",
        "hidden": false,
        "name": "stories",
        "originalFilePath": "/packages/react/src/generators/stories/schema.json",
        "path": "/nx-api/react/generators/stories",
        "type": "generator"
      },
      "/nx-api/react/generators/hook": {
        "description": "Create a hook.",
        "file": "generated/packages/react/generators/hook.json",
        "hidden": false,
        "name": "hook",
        "originalFilePath": "/packages/react/src/generators/hook/schema.json",
        "path": "/nx-api/react/generators/hook",
        "type": "generator"
      },
      "/nx-api/react/generators/host": {
        "description": "Generate a host react application",
        "file": "generated/packages/react/generators/host.json",
        "hidden": false,
        "name": "host",
        "originalFilePath": "/packages/react/src/generators/host/schema.json",
        "path": "/nx-api/react/generators/host",
        "type": "generator"
      },
      "/nx-api/react/generators/remote": {
        "description": "Generate a remote react application",
        "file": "generated/packages/react/generators/remote.json",
        "hidden": false,
        "name": "remote",
        "originalFilePath": "/packages/react/src/generators/remote/schema.json",
        "path": "/nx-api/react/generators/remote",
        "type": "generator"
      },
      "/nx-api/react/generators/cypress-component-configuration": {
        "description": "Setup Cypress component testing for a React project",
        "file": "generated/packages/react/generators/cypress-component-configuration.json",
        "hidden": false,
        "name": "cypress-component-configuration",
        "originalFilePath": "/packages/react/src/generators/cypress-component-configuration/schema.json",
        "path": "/nx-api/react/generators/cypress-component-configuration",
        "type": "generator"
      },
      "/nx-api/react/generators/component-test": {
        "description": "Generate a Cypress component test for a React component",
        "file": "generated/packages/react/generators/component-test.json",
        "hidden": false,
        "name": "component-test",
        "originalFilePath": "/packages/react/src/generators/component-test/schema.json",
        "path": "/nx-api/react/generators/component-test",
        "type": "generator"
      },
      "/nx-api/react/generators/setup-tailwind": {
        "description": "Set up Tailwind configuration for a project.",
        "file": "generated/packages/react/generators/setup-tailwind.json",
        "hidden": false,
        "name": "setup-tailwind",
        "originalFilePath": "/packages/react/src/generators/setup-tailwind/schema.json",
        "path": "/nx-api/react/generators/setup-tailwind",
        "type": "generator"
      },
      "/nx-api/react/generators/setup-ssr": {
        "description": "Set up SSR configuration for a project.",
        "file": "generated/packages/react/generators/setup-ssr.json",
        "hidden": false,
        "name": "setup-ssr",
        "originalFilePath": "/packages/react/src/generators/setup-ssr/schema.json",
        "path": "/nx-api/react/generators/setup-ssr",
        "type": "generator"
      },
      "/nx-api/react/generators/federate-module": {
        "description": "Federate a module.",
        "file": "generated/packages/react/generators/federate-module.json",
        "hidden": false,
        "name": "federate-module",
        "originalFilePath": "/packages/react/src/generators/federate-module/schema.json",
        "path": "/nx-api/react/generators/federate-module",
        "type": "generator"
      }
    },
    "path": "/nx-api/react"
  },
  "react-native": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "react-native",
    "packageName": "@nx/react-native",
    "description": "The Nx Plugin for React Native contains generators for managing React Native applications and libraries within an Nx workspace. It provides: \n\n-Integration with libraries such as Jest, Detox, and Storybook.\n-Scaffolding for creating buildable libraries that can be published to npm.\n-Utilities for automatic workspace refactoring.",
    "documents": {
      "/nx-api/react-native/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for React Native contains generators for managing React Native applications and libraries within an Nx workspace. It provides: \n\n-Integration with libraries such as Jest, Detox, and Storybook.\n-Scaffolding for creating buildable libraries that can be published to npm.\n-Utilities for automatic workspace refactoring.",
        "file": "generated/packages/react-native/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/react-native/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/react-native/react-native-plugin"
      }
    },
    "root": "/packages/react-native",
    "source": "/packages/react-native/src",
    "executors": {
      "/nx-api/react-native/executors/run-android": {
        "description": "Runs Android application.",
        "file": "generated/packages/react-native/executors/run-android.json",
        "hidden": false,
        "name": "run-android",
        "originalFilePath": "/packages/react-native/src/executors/run-android/schema.json",
        "path": "/nx-api/react-native/executors/run-android",
        "type": "executor"
      },
      "/nx-api/react-native/executors/run-ios": {
        "description": "Runs iOS application.",
        "file": "generated/packages/react-native/executors/run-ios.json",
        "hidden": false,
        "name": "run-ios",
        "originalFilePath": "/packages/react-native/src/executors/run-ios/schema.json",
        "path": "/nx-api/react-native/executors/run-ios",
        "type": "executor"
      },
      "/nx-api/react-native/executors/bundle": {
        "description": "Builds the JavaScript bundle for offline use.",
        "file": "generated/packages/react-native/executors/bundle.json",
        "hidden": false,
        "name": "bundle",
        "originalFilePath": "/packages/react-native/src/executors/bundle/schema.json",
        "path": "/nx-api/react-native/executors/bundle",
        "type": "executor"
      },
      "/nx-api/react-native/executors/build-android": {
        "description": "Release Build for Android.",
        "file": "generated/packages/react-native/executors/build-android.json",
        "hidden": false,
        "name": "build-android",
        "originalFilePath": "/packages/react-native/src/executors/build-android/schema.json",
        "path": "/nx-api/react-native/executors/build-android",
        "type": "executor"
      },
      "/nx-api/react-native/executors/build-ios": {
        "description": "Build iOS app",
        "file": "generated/packages/react-native/executors/build-ios.json",
        "hidden": false,
        "name": "build-ios",
        "originalFilePath": "/packages/react-native/src/executors/build-ios/schema.json",
        "path": "/nx-api/react-native/executors/build-ios",
        "type": "executor"
      },
      "/nx-api/react-native/executors/start": {
        "description": "Starts the Javascript server that communicates with connected devices.",
        "file": "generated/packages/react-native/executors/start.json",
        "hidden": false,
        "name": "start",
        "originalFilePath": "/packages/react-native/src/executors/start/schema.json",
        "path": "/nx-api/react-native/executors/start",
        "type": "executor"
      },
      "/nx-api/react-native/executors/sync-deps": {
        "description": "Syncs dependencies to `package.json` (required for autolinking).",
        "file": "generated/packages/react-native/executors/sync-deps.json",
        "hidden": false,
        "name": "sync-deps",
        "originalFilePath": "/packages/react-native/src/executors/sync-deps/schema.json",
        "path": "/nx-api/react-native/executors/sync-deps",
        "type": "executor"
      },
      "/nx-api/react-native/executors/ensure-symlink": {
        "description": "Ensure workspace `node_modules` is symlink under app's `node_modules` folder.",
        "file": "generated/packages/react-native/executors/ensure-symlink.json",
        "hidden": false,
        "name": "ensure-symlink",
        "originalFilePath": "/packages/react-native/src/executors/ensure-symlink/schema.json",
        "path": "/nx-api/react-native/executors/ensure-symlink",
        "type": "executor"
      },
      "/nx-api/react-native/executors/storybook": {
        "description": "Serve React Native Storybook.",
        "file": "generated/packages/react-native/executors/storybook.json",
        "hidden": false,
        "name": "storybook",
        "originalFilePath": "/packages/react-native/src/executors/storybook/schema.json",
        "path": "/nx-api/react-native/executors/storybook",
        "type": "executor"
      },
      "/nx-api/react-native/executors/pod-install": {
        "description": "Run `pod install` in the `ios` directory.",
        "file": "generated/packages/react-native/executors/pod-install.json",
        "hidden": false,
        "name": "pod-install",
        "originalFilePath": "/packages/react-native/src/executors/pod-install/schema.json",
        "path": "/nx-api/react-native/executors/pod-install",
        "type": "executor"
      },
      "/nx-api/react-native/executors/upgrade": {
        "description": "upgrade executor",
        "file": "generated/packages/react-native/executors/upgrade.json",
        "hidden": false,
        "name": "upgrade",
        "originalFilePath": "/packages/react-native/src/executors/upgrade/schema.json",
        "path": "/nx-api/react-native/executors/upgrade",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/react-native/generators/init": {
        "description": "Initialize the `@nx/react-native` plugin.",
        "file": "generated/packages/react-native/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/react-native/src/generators/init/schema.json",
        "path": "/nx-api/react-native/generators/init",
        "type": "generator"
      },
      "/nx-api/react-native/generators/application": {
        "description": "Create a React Native application.",
        "file": "generated/packages/react-native/generators/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/react-native/src/generators/application/schema.json",
        "path": "/nx-api/react-native/generators/application",
        "type": "generator"
      },
      "/nx-api/react-native/generators/library": {
        "description": "Create a React Native library.",
        "file": "generated/packages/react-native/generators/library.json",
        "hidden": false,
        "name": "library",
        "originalFilePath": "/packages/react-native/src/generators/library/schema.json",
        "path": "/nx-api/react-native/generators/library",
        "type": "generator"
      },
      "/nx-api/react-native/generators/component": {
        "description": "Create a React Native component.",
        "file": "generated/packages/react-native/generators/component.json",
        "hidden": false,
        "name": "component",
        "originalFilePath": "/packages/react-native/src/generators/component/schema.json",
        "path": "/nx-api/react-native/generators/component",
        "type": "generator"
      },
      "/nx-api/react-native/generators/storybook-configuration": {
        "description": "Set up Storybook for a React Native application or library.",
        "file": "generated/packages/react-native/generators/storybook-configuration.json",
        "hidden": false,
        "name": "storybook-configuration",
        "originalFilePath": "/packages/react-native/src/generators/storybook-configuration/schema.json",
        "path": "/nx-api/react-native/generators/storybook-configuration",
        "type": "generator"
      },
      "/nx-api/react-native/generators/component-story": {
        "description": "Generate Storybook story for a React Native component.",
        "file": "generated/packages/react-native/generators/component-story.json",
        "hidden": false,
        "name": "component-story",
        "originalFilePath": "/packages/react-native/src/generators/component-story/schema.json",
        "path": "/nx-api/react-native/generators/component-story",
        "type": "generator"
      },
      "/nx-api/react-native/generators/stories": {
        "description": "Create stories for all components declared in an application or library.",
        "file": "generated/packages/react-native/generators/stories.json",
        "hidden": false,
        "name": "stories",
        "originalFilePath": "/packages/react-native/src/generators/stories/schema.json",
        "path": "/nx-api/react-native/generators/stories",
        "type": "generator"
      },
      "/nx-api/react-native/generators/upgrade-native": {
        "description": "Destructive command to upgrade native iOS and Android code to latest.",
        "file": "generated/packages/react-native/generators/upgrade-native.json",
        "hidden": false,
        "name": "upgrade-native",
        "originalFilePath": "/packages/react-native/src/generators/upgrade-native/schema.json",
        "path": "/nx-api/react-native/generators/upgrade-native",
        "type": "generator"
      },
      "/nx-api/react-native/generators/web-configuration": {
        "description": "Set up web configuration for a React Native app",
        "file": "generated/packages/react-native/generators/web-configuration.json",
        "hidden": false,
        "name": "web-configuration",
        "originalFilePath": "/packages/react-native/src/generators/web-configuration/schema.json",
        "path": "/nx-api/react-native/generators/web-configuration",
        "type": "generator"
      },
      "/nx-api/react-native/generators/convert-to-inferred": {
        "description": "Convert existing React Native project(s) using `@nx/react-native:*` executors to use `@nx/react-native/plugin`. Defaults to migrating all projects. Pass '--project' to migrate only one target.",
        "file": "generated/packages/react-native/generators/convert-to-inferred.json",
        "hidden": false,
        "name": "convert-to-inferred",
        "originalFilePath": "/packages/react-native/src/generators/convert-to-inferred/schema.json",
        "path": "/nx-api/react-native/generators/convert-to-inferred",
        "type": "generator"
      }
    },
    "path": "/nx-api/react-native"
  },
  "remix": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "remix",
    "packageName": "@nx/remix",
    "description": "The Remix plugin for Nx contains executors and generators for managing Remix applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Vitest, Jest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, routes, loaders, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
    "documents": {
      "/nx-api/remix/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Remix plugin for Nx contains executors and generators for managing Remix applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Vitest, Jest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, routes, loaders, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
        "file": "generated/packages/remix/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/remix/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/remix/remix-plugin"
      }
    },
    "root": "/packages/remix",
    "source": "/packages/remix/src",
    "executors": {
      "/nx-api/remix/executors/serve": {
        "description": "Serve a Remix application.",
        "file": "generated/packages/remix/executors/serve.json",
        "hidden": false,
        "name": "serve",
        "originalFilePath": "/packages/remix/src/executors/serve/schema.json",
        "path": "/nx-api/remix/executors/serve",
        "type": "executor"
      },
      "/nx-api/remix/executors/build": {
        "description": "Build a Remix application.",
        "file": "generated/packages/remix/executors/build.json",
        "hidden": false,
        "name": "build",
        "originalFilePath": "/packages/remix/src/executors/build/schema.json",
        "path": "/nx-api/remix/executors/build",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/remix/generators/preset": {
        "description": "Generate a new Remix workspace",
        "file": "generated/packages/remix/generators/preset.json",
        "hidden": true,
        "name": "preset",
        "originalFilePath": "/packages/remix/src/generators/preset/schema.json",
        "path": "/nx-api/remix/generators/preset",
        "type": "generator"
      },
      "/nx-api/remix/generators/setup": {
        "description": "Setup a Remix in an existing workspace",
        "file": "generated/packages/remix/generators/setup.json",
        "hidden": true,
        "name": "setup",
        "originalFilePath": "/packages/remix/src/generators/setup/schema.json",
        "path": "/nx-api/remix/generators/setup",
        "type": "generator"
      },
      "/nx-api/remix/generators/application": {
        "description": "Generate a new Remix application",
        "file": "generated/packages/remix/generators/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/remix/src/generators/application/schema.json",
        "path": "/nx-api/remix/generators/application",
        "type": "generator"
      },
      "/nx-api/remix/generators/cypress-component-configuration": {
        "description": "Generate a Cypress Component Testing configuration for a Remix project",
        "file": "generated/packages/remix/generators/cypress-component-configuration.json",
        "hidden": false,
        "name": "cypress-component-configuration",
        "originalFilePath": "/packages/remix/src/generators/cypress-component-configuration/schema.json",
        "path": "/nx-api/remix/generators/cypress-component-configuration",
        "type": "generator"
      },
      "/nx-api/remix/generators/library": {
        "description": "Generate a new library",
        "file": "generated/packages/remix/generators/library.json",
        "hidden": false,
        "name": "library",
        "originalFilePath": "/packages/remix/src/generators/library/schema.json",
        "path": "/nx-api/remix/generators/library",
        "type": "generator"
      },
      "/nx-api/remix/generators/init": {
        "description": "Initialize the `@nx/remix` plugin.",
        "file": "generated/packages/remix/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/remix/src/generators/init/schema.json",
        "path": "/nx-api/remix/generators/init",
        "type": "generator"
      },
      "/nx-api/remix/generators/route": {
        "description": "Generate a new route",
        "file": "generated/packages/remix/generators/route.json",
        "hidden": false,
        "name": "route",
        "originalFilePath": "/packages/remix/src/generators/route/schema.json",
        "path": "/nx-api/remix/generators/route",
        "type": "generator"
      },
      "/nx-api/remix/generators/resource-route": {
        "description": "Generate a new resource route",
        "file": "generated/packages/remix/generators/resource-route.json",
        "hidden": false,
        "name": "resource-route",
        "originalFilePath": "/packages/remix/src/generators/resource-route/schema.json",
        "path": "/nx-api/remix/generators/resource-route",
        "type": "generator"
      },
      "/nx-api/remix/generators/action": {
        "description": "Add an action function to an existing route",
        "file": "generated/packages/remix/generators/action.json",
        "hidden": false,
        "name": "action",
        "originalFilePath": "/packages/remix/src/generators/action/schema.json",
        "path": "/nx-api/remix/generators/action",
        "type": "generator"
      },
      "/nx-api/remix/generators/loader": {
        "description": "Add a loader function to an existing route",
        "file": "generated/packages/remix/generators/loader.json",
        "hidden": false,
        "name": "loader",
        "originalFilePath": "/packages/remix/src/generators/loader/schema.json",
        "path": "/nx-api/remix/generators/loader",
        "type": "generator"
      },
      "/nx-api/remix/generators/style": {
        "description": "Generates a new stylesheet and adds it to an existing route",
        "file": "generated/packages/remix/generators/style.json",
        "hidden": false,
        "name": "style",
        "originalFilePath": "/packages/remix/src/generators/style/schema.json",
        "path": "/nx-api/remix/generators/style",
        "type": "generator"
      },
      "/nx-api/remix/generators/setup-tailwind": {
        "description": "Generates a TailwindCSS configuration for the Remix application",
        "file": "generated/packages/remix/generators/setup-tailwind.json",
        "hidden": false,
        "name": "setup-tailwind",
        "originalFilePath": "/packages/remix/src/generators/setup-tailwind/schema.json",
        "path": "/nx-api/remix/generators/setup-tailwind",
        "type": "generator"
      },
      "/nx-api/remix/generators/storybook-configuration": {
        "description": "Generates a Storybook configuration for a Remix application",
        "file": "generated/packages/remix/generators/storybook-configuration.json",
        "hidden": false,
        "name": "storybook-configuration",
        "originalFilePath": "/packages/remix/src/generators/storybook-configuration/schema.json",
        "path": "/nx-api/remix/generators/storybook-configuration",
        "type": "generator"
      },
      "/nx-api/remix/generators/meta": {
        "description": "Add a meta function to an existing route",
        "file": "generated/packages/remix/generators/meta.json",
        "hidden": false,
        "name": "meta",
        "originalFilePath": "/packages/remix/src/generators/meta/schema.json",
        "path": "/nx-api/remix/generators/meta",
        "type": "generator"
      },
      "/nx-api/remix/generators/error-boundary": {
        "description": "Add an ErrorBoundary to an existing route",
        "file": "generated/packages/remix/generators/error-boundary.json",
        "hidden": false,
        "name": "error-boundary",
        "originalFilePath": "/packages/remix/src/generators/error-boundary/schema.json",
        "path": "/nx-api/remix/generators/error-boundary",
        "type": "generator"
      },
      "/nx-api/remix/generators/convert-to-inferred": {
        "description": "Convert existing Remix project(s) using `@nx/remix:*` executors to use `@nx/remix/plugin`. Defaults to migrating all projects. Pass '--project' to migrate only one target.",
        "file": "generated/packages/remix/generators/convert-to-inferred.json",
        "hidden": false,
        "name": "convert-to-inferred",
        "originalFilePath": "/packages/remix/src/generators/convert-to-inferred/schema.json",
        "path": "/nx-api/remix/generators/convert-to-inferred",
        "type": "generator"
      }
    },
    "path": "/nx-api/remix"
  },
  "rollup": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "rollup",
    "packageName": "@nx/rollup",
    "description": "The Nx Plugin for Rollup contains executors and generators that support building applications using Rollup.",
    "documents": {},
    "root": "/packages/rollup",
    "source": "/packages/rollup/src",
    "executors": {
      "/nx-api/rollup/executors/rollup": {
        "description": "Bundle a package using Rollup.",
        "file": "generated/packages/rollup/executors/rollup.json",
        "hidden": false,
        "name": "rollup",
        "originalFilePath": "/packages/rollup/src/executors/rollup/schema.json",
        "path": "/nx-api/rollup/executors/rollup",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/rollup/generators/init": {
        "description": "Initialize the `@nx/rollup` plugin.",
        "file": "generated/packages/rollup/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/rollup/src/generators/init/schema.json",
        "path": "/nx-api/rollup/generators/init",
        "type": "generator"
      },
      "/nx-api/rollup/generators/configuration": {
        "description": "Add rollup configuration to a project.",
        "file": "generated/packages/rollup/generators/configuration.json",
        "hidden": false,
        "name": "configuration",
        "originalFilePath": "/packages/rollup/src/generators/configuration/schema.json",
        "path": "/nx-api/rollup/generators/configuration",
        "type": "generator"
      },
      "/nx-api/rollup/generators/convert-to-inferred": {
        "description": "Convert existing Rollup project(s) using `@nx/rollup:*` executors to use `@nx/rollup/plugin`.",
        "file": "generated/packages/rollup/generators/convert-to-inferred.json",
        "hidden": false,
        "name": "convert-to-inferred",
        "originalFilePath": "/packages/rollup/src/generators/convert-to-inferred/schema.json",
        "path": "/nx-api/rollup/generators/convert-to-inferred",
        "type": "generator"
      }
    },
    "path": "/nx-api/rollup"
  },
  "rsbuild": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "rsbuild",
    "packageName": "@nx/rsbuild",
    "description": "The Nx Plugin for Rsbuild contains an Nx plugin, executors and utilities that support building applications using Rsbuild.",
    "documents": {},
    "root": "/packages/rsbuild",
    "source": "/packages/rsbuild/src",
    "executors": {},
    "generators": {
      "/nx-api/rsbuild/generators/init": {
        "description": "Initialize the `@nx/rsbuild` plugin.",
        "file": "generated/packages/rsbuild/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/rsbuild/src/generators/init/schema.json",
        "path": "/nx-api/rsbuild/generators/init",
        "type": "generator"
      },
      "/nx-api/rsbuild/generators/configuration": {
        "description": "Add an Rsbuild configuration for the provided project.",
        "file": "generated/packages/rsbuild/generators/configuration.json",
        "hidden": false,
        "name": "configuration",
        "originalFilePath": "/packages/rsbuild/src/generators/configuration/schema.json",
        "path": "/nx-api/rsbuild/generators/configuration",
        "type": "generator"
      }
    },
    "path": "/nx-api/rsbuild"
  },
  "rspack": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "rspack",
    "packageName": "@nx/rspack",
    "description": "The Nx Plugin for Rspack contains executors and generators that support building applications using Rspack.",
    "documents": {
      "/nx-api/rspack/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Rspack contains executors and generators that support building applications using Rspack.",
        "file": "generated/packages/rspack/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/rspack/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/rspack/rspack-plugin"
      }
    },
    "root": "/packages/rspack",
    "source": "/packages/rspack/src",
    "executors": {
      "/nx-api/rspack/executors/rspack": {
        "description": "Run Rspack via an executor for a project.",
        "file": "generated/packages/rspack/executors/rspack.json",
        "hidden": false,
        "name": "rspack",
        "originalFilePath": "/packages/rspack/src/executors/rspack/schema.json",
        "path": "/nx-api/rspack/executors/rspack",
        "type": "executor"
      },
      "/nx-api/rspack/executors/dev-server": {
        "description": "Run @rspack/dev-server to serve a project.",
        "file": "generated/packages/rspack/executors/dev-server.json",
        "hidden": false,
        "name": "dev-server",
        "originalFilePath": "/packages/rspack/src/executors/dev-server/schema.json",
        "path": "/nx-api/rspack/executors/dev-server",
        "type": "executor"
      },
      "/nx-api/rspack/executors/ssr-dev-server": {
        "description": "Serve a SSR application.",
        "file": "generated/packages/rspack/executors/ssr-dev-server.json",
        "hidden": false,
        "name": "ssr-dev-server",
        "originalFilePath": "/packages/rspack/src/executors/ssr-dev-server/schema.json",
        "path": "/nx-api/rspack/executors/ssr-dev-server",
        "type": "executor"
      },
      "/nx-api/rspack/executors/module-federation-dev-server": {
        "description": "Serve a host or remote application.",
        "file": "generated/packages/rspack/executors/module-federation-dev-server.json",
        "hidden": false,
        "name": "module-federation-dev-server",
        "originalFilePath": "/packages/rspack/src/executors/module-federation-dev-server/schema.json",
        "path": "/nx-api/rspack/executors/module-federation-dev-server",
        "type": "executor"
      },
      "/nx-api/rspack/executors/module-federation-ssr-dev-server": {
        "description": "Serve a host application along with it's known remotes.",
        "file": "generated/packages/rspack/executors/module-federation-ssr-dev-server.json",
        "hidden": false,
        "name": "module-federation-ssr-dev-server",
        "originalFilePath": "/packages/rspack/src/executors/module-federation-ssr-dev-server/schema.json",
        "path": "/nx-api/rspack/executors/module-federation-ssr-dev-server",
        "type": "executor"
      },
      "/nx-api/rspack/executors/module-federation-static-server": {
        "description": "Serve a host and its remotes statically.",
        "file": "generated/packages/rspack/executors/module-federation-static-server.json",
        "hidden": false,
        "name": "module-federation-static-server",
        "originalFilePath": "/packages/rspack/src/executors/module-federation-static-server/schema.json",
        "path": "/nx-api/rspack/executors/module-federation-static-server",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/rspack/generators/configuration": {
        "description": "Rspack configuration generator.",
        "file": "generated/packages/rspack/generators/configuration.json",
        "hidden": false,
        "name": "configuration",
        "originalFilePath": "/packages/rspack/src/generators/configuration/schema.json",
        "path": "/nx-api/rspack/generators/configuration",
        "type": "generator"
      },
      "/nx-api/rspack/generators/init": {
        "description": "Rspack init generator.",
        "file": "generated/packages/rspack/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/rspack/src/generators/init/schema.json",
        "path": "/nx-api/rspack/generators/init",
        "type": "generator"
      },
      "/nx-api/rspack/generators/preset": {
        "description": "React preset generator.",
        "file": "generated/packages/rspack/generators/preset.json",
        "hidden": true,
        "name": "preset",
        "originalFilePath": "/packages/rspack/src/generators/preset/schema.json",
        "path": "/nx-api/rspack/generators/preset",
        "type": "generator"
      },
      "/nx-api/rspack/generators/application": {
        "description": "React application generator.",
        "file": "generated/packages/rspack/generators/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/rspack/src/generators/application/schema.json",
        "path": "/nx-api/rspack/generators/application",
        "type": "generator"
      },
      "/nx-api/rspack/generators/convert-webpack": {
        "description": "Convert a webpack application to use rspack.",
        "file": "generated/packages/rspack/generators/convert-webpack.json",
        "hidden": false,
        "name": "convert-webpack",
        "originalFilePath": "/packages/rspack/src/generators/convert-webpack/schema.json",
        "path": "/nx-api/rspack/generators/convert-webpack",
        "type": "generator"
      },
      "/nx-api/rspack/generators/convert-config-to-rspack-plugin": {
        "description": "Convert the project to use the `NxAppRspackPlugin` and `NxReactRspackPlugin`.",
        "file": "generated/packages/rspack/generators/convert-config-to-rspack-plugin.json",
        "hidden": false,
        "name": "convert-config-to-rspack-plugin",
        "originalFilePath": "/packages/rspack/src/generators/convert-config-to-rspack-plugin/schema.json",
        "path": "/nx-api/rspack/generators/convert-config-to-rspack-plugin",
        "type": "generator"
      },
      "/nx-api/rspack/generators/convert-to-inferred": {
        "description": "Convert existing Rspack project(s) using `@nx/rspack:rspack` executor to use `@nx/rspack/plugin`.",
        "file": "generated/packages/rspack/generators/convert-to-inferred.json",
        "hidden": false,
        "name": "convert-to-inferred",
        "originalFilePath": "/packages/rspack/src/generators/convert-to-inferred/schema.json",
        "path": "/nx-api/rspack/generators/convert-to-inferred",
        "type": "generator"
      }
    },
    "path": "/nx-api/rspack"
  },
  "storybook": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "storybook",
    "packageName": "@nx/storybook",
    "description": "The Nx Plugin for Storybook contains executors and generators for allowing your workspace to use the powerful Storybook integration testing & documenting capabilities.",
    "documents": {
      "/nx-api/storybook/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "This is an overview page for the Storybook plugin in Nx. It explains what Storybook is and how to set it up in your Nx workspace.",
        "file": "generated/packages/storybook/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/storybook/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/storybook/plugin-overview"
      },
      "/nx-api/storybook/documents/best-practices": {
        "id": "best-practices",
        "name": "Storybook best practices for making the most out of Nx",
        "description": "The purpose of this guide is to help you set up Storybook in your Nx workspace so that you can get the most out of Nx and its powerful capabilities.",
        "file": "generated/packages/storybook/documents/best-practices",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/storybook/documents/best-practices",
        "tags": [],
        "originalFilePath": "shared/packages/storybook/best-practices"
      },
      "/nx-api/storybook/documents/storybook-7-setup": {
        "id": "storybook-7-setup",
        "name": "Storybook 7",
        "description": "This guide explains how you can set up Storybook version 7 in your Nx workspace. It contains information about the generators and the frameworks that are supported.",
        "file": "generated/packages/storybook/documents/storybook-7-setup",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/storybook/documents/storybook-7-setup",
        "tags": [],
        "originalFilePath": "shared/packages/storybook/storybook-7-setup"
      }
    },
    "root": "/packages/storybook",
    "source": "/packages/storybook/src",
    "executors": {
      "/nx-api/storybook/executors/storybook": {
        "description": "Serve Storybook.",
        "file": "generated/packages/storybook/executors/storybook.json",
        "hidden": false,
        "name": "storybook",
        "originalFilePath": "/packages/storybook/src/executors/storybook/schema.json",
        "path": "/nx-api/storybook/executors/storybook",
        "type": "executor"
      },
      "/nx-api/storybook/executors/build": {
        "description": "Build Storybook.",
        "file": "generated/packages/storybook/executors/build.json",
        "hidden": false,
        "name": "build",
        "originalFilePath": "/packages/storybook/src/executors/build-storybook/schema.json",
        "path": "/nx-api/storybook/executors/build",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/storybook/generators/init": {
        "description": "Add Storybook configuration to the workspace.",
        "file": "generated/packages/storybook/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/storybook/src/generators/init/schema.json",
        "path": "/nx-api/storybook/generators/init",
        "type": "generator"
      },
      "/nx-api/storybook/generators/configuration": {
        "description": "Add Storybook configuration to a UI library or an application.",
        "file": "generated/packages/storybook/generators/configuration.json",
        "hidden": false,
        "name": "configuration",
        "originalFilePath": "/packages/storybook/src/generators/configuration/schema.json",
        "path": "/nx-api/storybook/generators/configuration",
        "type": "generator"
      },
      "/nx-api/storybook/generators/cypress-project": {
        "description": "Add cypress E2E app to test a ui library that is set up for Storybook.",
        "file": "generated/packages/storybook/generators/cypress-project.json",
        "hidden": false,
        "name": "cypress-project",
        "originalFilePath": "/packages/storybook/src/generators/cypress-project/schema.json",
        "path": "/nx-api/storybook/generators/cypress-project",
        "type": "generator"
      },
      "/nx-api/storybook/generators/convert-to-inferred": {
        "description": "Convert existing Storybook project(s) using `@nx/storybook:*` executors to use `@nx/storybook/plugin`. Defaults to migrating all projects. Pass '--project' to migrate only one target.",
        "file": "generated/packages/storybook/generators/convert-to-inferred.json",
        "hidden": false,
        "name": "convert-to-inferred",
        "originalFilePath": "/packages/storybook/src/generators/convert-to-inferred/schema.json",
        "path": "/nx-api/storybook/generators/convert-to-inferred",
        "type": "generator"
      },
      "/nx-api/storybook/generators/migrate-7": {
        "description": "Migrate to Storybook version 7.",
        "file": "generated/packages/storybook/generators/migrate-7.json",
        "hidden": false,
        "name": "migrate-7",
        "originalFilePath": "/packages/storybook/src/generators/migrate-7/schema.json",
        "path": "/nx-api/storybook/generators/migrate-7",
        "type": "generator"
      },
      "/nx-api/storybook/generators/migrate-8": {
        "description": "Migrate to Storybook version 8.",
        "file": "generated/packages/storybook/generators/migrate-8.json",
        "hidden": false,
        "name": "migrate-8",
        "originalFilePath": "/packages/storybook/src/generators/migrate-8/schema.json",
        "path": "/nx-api/storybook/generators/migrate-8",
        "type": "generator"
      }
    },
    "path": "/nx-api/storybook"
  },
  "vite": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "vite",
    "packageName": "@nx/vite",
    "description": "The Nx Plugin for building and testing applications using Vite",
    "documents": {
      "/nx-api/vite/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Vite contains executors and generators that support building applications using Vite. This page also explains how to configure Vite on your Nx workspace.",
        "file": "generated/packages/vite/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/vite/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/vite/vite-plugin"
      }
    },
    "root": "/packages/vite",
    "source": "/packages/vite/src",
    "executors": {
      "/nx-api/vite/executors/dev-server": {
        "description": "Vite dev server.",
        "file": "generated/packages/vite/executors/dev-server.json",
        "hidden": false,
        "name": "dev-server",
        "originalFilePath": "/packages/vite/src/executors/dev-server/schema.json",
        "path": "/nx-api/vite/executors/dev-server",
        "type": "executor"
      },
      "/nx-api/vite/executors/build": {
        "description": "Build with Vite.",
        "file": "generated/packages/vite/executors/build.json",
        "hidden": false,
        "name": "build",
        "originalFilePath": "/packages/vite/src/executors/build/schema.json",
        "path": "/nx-api/vite/executors/build",
        "type": "executor"
      },
      "/nx-api/vite/executors/test": {
        "description": "Test with Vitest",
        "file": "generated/packages/vite/executors/test.json",
        "hidden": false,
        "name": "test",
        "originalFilePath": "/packages/vite/src/executors/test/schema.json",
        "path": "/nx-api/vite/executors/test",
        "type": "executor"
      },
      "/nx-api/vite/executors/preview-server": {
        "description": "Vite preview server",
        "file": "generated/packages/vite/executors/preview-server.json",
        "hidden": false,
        "name": "preview-server",
        "originalFilePath": "/packages/vite/src/executors/preview-server/schema.json",
        "path": "/nx-api/vite/executors/preview-server",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/vite/generators/init": {
        "description": "Initialize Vite in the workspace.",
        "file": "generated/packages/vite/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/vite/src/generators/init/schema.json",
        "path": "/nx-api/vite/generators/init",
        "type": "generator"
      },
      "/nx-api/vite/generators/configuration": {
        "description": "Add Vite configuration to an application.",
        "file": "generated/packages/vite/generators/configuration.json",
        "hidden": false,
        "name": "configuration",
        "originalFilePath": "/packages/vite/src/generators/configuration/schema.json",
        "path": "/nx-api/vite/generators/configuration",
        "type": "generator"
      },
      "/nx-api/vite/generators/setup-paths-plugin": {
        "description": "Sets up the nxViteTsPaths plugin to enable support for workspace libraries.",
        "file": "generated/packages/vite/generators/setup-paths-plugin.json",
        "hidden": false,
        "name": "setup-paths-plugin",
        "originalFilePath": "/packages/vite/src/generators/setup-paths-plugin/schema.json",
        "path": "/nx-api/vite/generators/setup-paths-plugin",
        "type": "generator"
      },
      "/nx-api/vite/generators/convert-to-inferred": {
        "description": "Convert existing Vite project(s) using `@nx/vite:*` executors to use `@nx/vite/plugin`. Defaults to migrating all projects. Pass '--project' to migrate only one target.",
        "file": "generated/packages/vite/generators/convert-to-inferred.json",
        "hidden": false,
        "name": "convert-to-inferred",
        "originalFilePath": "/packages/vite/src/generators/convert-to-inferred/schema.json",
        "path": "/nx-api/vite/generators/convert-to-inferred",
        "type": "generator"
      },
      "/nx-api/vite/generators/vitest": {
        "description": "Generate a vitest configuration.",
        "file": "generated/packages/vite/generators/vitest.json",
        "hidden": false,
        "name": "vitest",
        "originalFilePath": "/packages/vite/src/generators/vitest/schema.json",
        "path": "/nx-api/vite/generators/vitest",
        "type": "generator"
      }
    },
    "path": "/nx-api/vite"
  },
  "vue": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "vue",
    "packageName": "@nx/vue",
    "description": "The Vue plugin for Nx contains executors and generators for managing Vue applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Vitest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
    "documents": {
      "/nx-api/vue/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Vue contains generators for managing Vue applications and libraries within an Nx workspace. This page also explains how to configure Vue on your Nx workspace.",
        "file": "generated/packages/vue/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/vue/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/vue/vue-plugin"
      }
    },
    "root": "/packages/vue",
    "source": "/packages/vue/src",
    "executors": {},
    "generators": {
      "/nx-api/vue/generators/init": {
        "description": "Initialize the `@nx/vue` plugin.",
        "file": "generated/packages/vue/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/vue/src/generators/init/schema.json",
        "path": "/nx-api/vue/generators/init",
        "type": "generator"
      },
      "/nx-api/vue/generators/application": {
        "description": "Create a Vue application.",
        "file": "generated/packages/vue/generators/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/vue/src/generators/application/schema.json",
        "path": "/nx-api/vue/generators/application",
        "type": "generator"
      },
      "/nx-api/vue/generators/library": {
        "description": "Create a Vue library.",
        "file": "generated/packages/vue/generators/library.json",
        "hidden": false,
        "name": "library",
        "originalFilePath": "/packages/vue/src/generators/library/schema.json",
        "path": "/nx-api/vue/generators/library",
        "type": "generator"
      },
      "/nx-api/vue/generators/component": {
        "description": "Create a Vue component.",
        "file": "generated/packages/vue/generators/component.json",
        "hidden": false,
        "name": "component",
        "originalFilePath": "/packages/vue/src/generators/component/schema.json",
        "path": "/nx-api/vue/generators/component",
        "type": "generator"
      },
      "/nx-api/vue/generators/setup-tailwind": {
        "description": "Set up Tailwind configuration for a project.",
        "file": "generated/packages/vue/generators/setup-tailwind.json",
        "hidden": false,
        "name": "setup-tailwind",
        "originalFilePath": "/packages/vue/src/generators/setup-tailwind/schema.json",
        "path": "/nx-api/vue/generators/setup-tailwind",
        "type": "generator"
      },
      "/nx-api/vue/generators/storybook-configuration": {
        "description": "Set up storybook for a Vue app or library.",
        "file": "generated/packages/vue/generators/storybook-configuration.json",
        "hidden": false,
        "name": "storybook-configuration",
        "originalFilePath": "/packages/vue/src/generators/storybook-configuration/schema.json",
        "path": "/nx-api/vue/generators/storybook-configuration",
        "type": "generator"
      },
      "/nx-api/vue/generators/stories": {
        "description": "Create stories for all components declared in an app or library.",
        "file": "generated/packages/vue/generators/stories.json",
        "hidden": false,
        "name": "stories",
        "originalFilePath": "/packages/vue/src/generators/stories/schema.json",
        "path": "/nx-api/vue/generators/stories",
        "type": "generator"
      }
    },
    "path": "/nx-api/vue"
  },
  "web": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "web",
    "packageName": "@nx/web",
    "description": "The Nx Plugin for Web Components contains generators for managing Web Component applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Jest, Playwright, Cypress, and Storybook.\n\n- Scaffolding for creating buildable libraries that can be published to npm.\n\n- Utilities for automatic workspace refactoring.",
    "documents": {
      "/nx-api/web/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Web Components contains generators for managing Web Component applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Jest, Playwright, Cypress, and Storybook.\n\n- Scaffolding for creating buildable libraries that can be published to npm.\n\n- Utilities for automatic workspace refactoring.",
        "file": "generated/packages/web/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/web/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/web/web-plugin"
      }
    },
    "root": "/packages/web",
    "source": "/packages/web/src",
    "executors": {
      "/nx-api/web/executors/file-server": {
        "description": "Serve a web application from a folder.",
        "file": "generated/packages/web/executors/file-server.json",
        "hidden": false,
        "name": "file-server",
        "originalFilePath": "/packages/web/src/executors/file-server/schema.json",
        "path": "/nx-api/web/executors/file-server",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/web/generators/init": {
        "description": "Add `@nrwl/web` to a project.",
        "file": "generated/packages/web/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/web/src/generators/init/schema.json",
        "path": "/nx-api/web/generators/init",
        "type": "generator"
      },
      "/nx-api/web/generators/application": {
        "description": "Create an web application.",
        "file": "generated/packages/web/generators/application.json",
        "hidden": false,
        "name": "application",
        "originalFilePath": "/packages/web/src/generators/application/schema.json",
        "path": "/nx-api/web/generators/application",
        "type": "generator"
      },
      "/nx-api/web/generators/static-config": {
        "description": "Add a new static-serve target to a project.",
        "file": "generated/packages/web/generators/static-config.json",
        "hidden": false,
        "name": "static-config",
        "originalFilePath": "/packages/web/src/generators/static-serve/schema.json",
        "path": "/nx-api/web/generators/static-config",
        "type": "generator"
      }
    },
    "path": "/nx-api/web"
  },
  "webpack": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "webpack",
    "packageName": "@nx/webpack",
    "description": "The Nx Plugin for Webpack contains executors and generators that support building applications using Webpack.",
    "documents": {
      "/nx-api/webpack/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Nx Plugin for Webpack contains executors and generators that support building applications using Webpack.",
        "file": "generated/packages/webpack/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/webpack/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/webpack/plugin-overview"
      }
    },
    "root": "/packages/webpack",
    "source": "/packages/webpack/src",
    "executors": {
      "/nx-api/webpack/executors/webpack": {
        "description": "Run webpack build.",
        "file": "generated/packages/webpack/executors/webpack.json",
        "hidden": false,
        "name": "webpack",
        "originalFilePath": "/packages/webpack/src/executors/webpack/schema.json",
        "path": "/nx-api/webpack/executors/webpack",
        "type": "executor"
      },
      "/nx-api/webpack/executors/dev-server": {
        "description": "Serve a web application.",
        "file": "generated/packages/webpack/executors/dev-server.json",
        "hidden": false,
        "name": "dev-server",
        "originalFilePath": "/packages/webpack/src/executors/dev-server/schema.json",
        "path": "/nx-api/webpack/executors/dev-server",
        "type": "executor"
      },
      "/nx-api/webpack/executors/ssr-dev-server": {
        "description": "Serve a SSR application.",
        "file": "generated/packages/webpack/executors/ssr-dev-server.json",
        "hidden": false,
        "name": "ssr-dev-server",
        "originalFilePath": "/packages/webpack/src/executors/ssr-dev-server/schema.json",
        "path": "/nx-api/webpack/executors/ssr-dev-server",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/webpack/generators/init": {
        "description": "Initialize the `@nx/webpack` plugin.",
        "file": "generated/packages/webpack/generators/init.json",
        "hidden": true,
        "name": "init",
        "originalFilePath": "/packages/webpack/src/generators/init/schema.json",
        "path": "/nx-api/webpack/generators/init",
        "type": "generator"
      },
      "/nx-api/webpack/generators/configuration": {
        "description": "Add webpack configuration to a project.",
        "file": "generated/packages/webpack/generators/configuration.json",
        "hidden": true,
        "name": "configuration",
        "originalFilePath": "/packages/webpack/src/generators/configuration/schema.json",
        "path": "/nx-api/webpack/generators/configuration",
        "type": "generator"
      },
      "/nx-api/webpack/generators/convert-config-to-webpack-plugin": {
        "description": "Convert the project to use the `NxAppWebpackPlugin` and `NxReactWebpackPlugin`.",
        "file": "generated/packages/webpack/generators/convert-config-to-webpack-plugin.json",
        "hidden": false,
        "name": "convert-config-to-webpack-plugin",
        "originalFilePath": "/packages/webpack/src/generators/convert-config-to-webpack-plugin/schema.json",
        "path": "/nx-api/webpack/generators/convert-config-to-webpack-plugin",
        "type": "generator"
      },
      "/nx-api/webpack/generators/convert-to-inferred": {
        "description": "Convert existing Webpack project(s) using `@nx/webpack:wepack` executor to use `@nx/webpack/plugin`.",
        "file": "generated/packages/webpack/generators/convert-to-inferred.json",
        "hidden": false,
        "name": "convert-to-inferred",
        "originalFilePath": "/packages/webpack/src/generators/convert-to-inferred/schema.json",
        "path": "/nx-api/webpack/generators/convert-to-inferred",
        "type": "generator"
      }
    },
    "path": "/nx-api/webpack"
  },
  "workspace": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "workspace",
    "packageName": "@nx/workspace",
    "description": "The Workspace plugin contains executors and generators that are useful for any Nx workspace. It should be present in every Nx workspace and other plugins build on it.",
    "documents": {
      "/nx-api/workspace/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "The Workspace plugin contains executors and generators that are useful for any Nx workspace. It should be present in every Nx workspace and other plugins build on it.",
        "file": "generated/packages/workspace/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/workspace/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/workspace/workspace-plugin"
      },
      "/nx-api/workspace/documents/nx-nodejs-typescript-version-matrix": {
        "id": "nx-nodejs-typescript-version-matrix",
        "name": "Nx, NodeJS and Typescript Versions",
        "description": "The Workspace plugin contains executors and generators that are useful for any Nx workspace. It should be present in every Nx workspace and other plugins build on it.",
        "file": "generated/packages/workspace/documents/nx-nodejs-typescript-version-matrix",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/workspace/documents/nx-nodejs-typescript-version-matrix",
        "tags": [],
        "originalFilePath": "shared/packages/workspace/nx-compatibility-matrix"
      }
    },
    "root": "/packages/workspace",
    "source": "/packages/workspace/src",
    "executors": {
      "/nx-api/workspace/executors/counter": {
        "description": "A dummy executor useful for E2E tests.",
        "file": "generated/packages/workspace/executors/counter.json",
        "hidden": true,
        "name": "counter",
        "originalFilePath": "/packages/workspace/src/executors/counter/schema.json",
        "path": "/nx-api/workspace/executors/counter",
        "type": "executor"
      }
    },
    "generators": {
      "/nx-api/workspace/generators/preset": {
        "description": "Create application in an empty workspace.",
        "file": "generated/packages/workspace/generators/preset.json",
        "hidden": true,
        "name": "preset",
        "originalFilePath": "/packages/workspace/src/generators/preset/schema.json",
        "path": "/nx-api/workspace/generators/preset",
        "type": "generator"
      },
      "/nx-api/workspace/generators/move": {
        "description": "Move an application or library to another folder.",
        "file": "generated/packages/workspace/generators/move.json",
        "hidden": false,
        "name": "move",
        "originalFilePath": "/packages/workspace/src/generators/move/schema.json",
        "path": "/nx-api/workspace/generators/move",
        "type": "generator"
      },
      "/nx-api/workspace/generators/remove": {
        "description": "Remove an application or library.",
        "file": "generated/packages/workspace/generators/remove.json",
        "hidden": false,
        "name": "remove",
        "originalFilePath": "/packages/workspace/src/generators/remove/schema.json",
        "path": "/nx-api/workspace/generators/remove",
        "type": "generator"
      },
      "/nx-api/workspace/generators/convert-to-monorepo": {
        "description": "Convert a Nx project to a monorepo.",
        "file": "generated/packages/workspace/generators/convert-to-monorepo.json",
        "hidden": false,
        "name": "convert-to-monorepo",
        "originalFilePath": "/packages/workspace/src/generators/convert-to-monorepo/schema.json",
        "path": "/nx-api/workspace/generators/convert-to-monorepo",
        "type": "generator"
      },
      "/nx-api/workspace/generators/new": {
        "description": "Create a workspace.",
        "file": "generated/packages/workspace/generators/new.json",
        "hidden": true,
        "name": "new",
        "originalFilePath": "/packages/workspace/src/generators/new/schema.json",
        "path": "/nx-api/workspace/generators/new",
        "type": "generator"
      },
      "/nx-api/workspace/generators/run-commands": {
        "description": "Generates a target to run any command in the terminal.",
        "file": "generated/packages/workspace/generators/run-commands.json",
        "hidden": false,
        "name": "run-commands",
        "originalFilePath": "/packages/workspace/src/generators/run-commands/schema.json",
        "path": "/nx-api/workspace/generators/run-commands",
        "type": "generator"
      },
      "/nx-api/workspace/generators/fix-configuration": {
        "description": "Fixes projects configuration",
        "file": "generated/packages/workspace/generators/fix-configuration.json",
        "hidden": false,
        "name": "fix-configuration",
        "originalFilePath": "/packages/workspace/src/generators/convert-to-nx-project/schema.json",
        "path": "/nx-api/workspace/generators/fix-configuration",
        "type": "generator"
      },
      "/nx-api/workspace/generators/npm-package": {
        "description": "Create a minimal NPM package.",
        "file": "generated/packages/workspace/generators/npm-package.json",
        "hidden": false,
        "name": "npm-package",
        "originalFilePath": "/packages/workspace/src/generators/npm-package/schema.json",
        "path": "/nx-api/workspace/generators/npm-package",
        "type": "generator"
      },
      "/nx-api/workspace/generators/ci-workflow": {
        "description": "Generate a CI workflow.",
        "file": "generated/packages/workspace/generators/ci-workflow.json",
        "hidden": false,
        "name": "ci-workflow",
        "originalFilePath": "/packages/workspace/src/generators/ci-workflow/schema.json",
        "path": "/nx-api/workspace/generators/ci-workflow",
        "type": "generator"
      },
      "/nx-api/workspace/generators/infer-targets": {
        "description": "Convert Nx projects to use inferred targets.",
        "file": "generated/packages/workspace/generators/infer-targets.json",
        "hidden": false,
        "name": "infer-targets",
        "originalFilePath": "/packages/workspace/src/generators/infer-targets/schema.json",
        "path": "/nx-api/workspace/generators/infer-targets",
        "type": "generator"
      }
    },
    "path": "/nx-api/workspace"
  },
  "powerpack-azure-cache": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "powerpack-azure-cache",
    "packageName": "@nx/powerpack-azure-cache",
    "description": "A Nx Powerpack plugin which provides a Nx cache which can be self hosted on Azure Blob Storage.",
    "documents": {
      "/nx-api/powerpack-azure-cache/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "A Nx Powerpack plugin which provides a Nx cache which can be self hosted on Azure Blob Storage.",
        "file": "external-generated/packages/powerpack-azure-cache/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/powerpack-azure-cache/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/powerpack-azure-cache/powerpack-azure-cache-plugin"
      }
    },
    "root": "/libs/nx-packages/powerpack-azure-cache",
    "source": "/libs/nx-packages/powerpack-azure-cache/src",
    "executors": {},
    "generators": {},
    "path": "/nx-api/powerpack-azure-cache"
  },
  "powerpack-conformance": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "powerpack-conformance",
    "packageName": "@nx/powerpack-conformance",
    "description": "A Nx Powerpack plugin which allows users to write and apply rules for your entire workspace that help with consistency, maintainability, reliability and security.",
    "documents": {
      "/nx-api/powerpack-conformance/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "A Nx Powerpack plugin which allows users to write and apply rules for your entire workspace that help with consistency, maintainability, reliability and security.",
        "file": "external-generated/packages/powerpack-conformance/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/powerpack-conformance/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/powerpack-conformance/powerpack-conformance-plugin"
      }
    },
    "root": "/libs/nx-packages/powerpack-conformance",
    "source": "/libs/nx-packages/powerpack-conformance/src",
    "executors": {
      "/nx-api/powerpack-conformance/executors/bundle-rules": {
        "description": "Compile and bundle one or more Nx Conformance Rules",
        "file": "external-generated/packages/powerpack-conformance/executors/bundle-rules.json",
        "hidden": false,
        "name": "bundle-rules",
        "originalFilePath": "/libs/nx-packages/powerpack-conformance/src/executors/bundle-rules/schema.json",
        "path": "/nx-api/powerpack-conformance/executors/bundle-rules",
        "type": "executor"
      }
    },
    "generators": {},
    "path": "/nx-api/powerpack-conformance"
  },
  "powerpack-enterprise-cloud": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "powerpack-enterprise-cloud",
    "packageName": "@nx/powerpack-enterprise-cloud",
    "description": "A Nx Powerpack plugin which is specific to Nx Enterprise Cloud workspaces.",
    "documents": {},
    "root": "/libs/nx-packages/powerpack-enterprise-cloud",
    "source": "/libs/nx-packages/powerpack-enterprise-cloud/src",
    "executors": {},
    "generators": {
      "/nx-api/powerpack-enterprise-cloud/generators/init": {
        "description": "Initialize Nx Powerpack Enterprise Cloud config",
        "file": "external-generated/packages/powerpack-enterprise-cloud/generators/init.json",
        "hidden": false,
        "name": "init",
        "originalFilePath": "/libs/nx-packages/powerpack-enterprise-cloud/src/generators/init/schema.json",
        "path": "/nx-api/powerpack-enterprise-cloud/generators/init",
        "type": "generator"
      }
    },
    "path": "/nx-api/powerpack-enterprise-cloud"
  },
  "powerpack-gcs-cache": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "powerpack-gcs-cache",
    "packageName": "@nx/powerpack-gcs-cache",
    "description": "A Nx Powerpack plugin which provides a Nx cache which can be self hosted on Google Cloud Storage.",
    "documents": {
      "/nx-api/powerpack-gcs-cache/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "A Nx Powerpack plugin which provides a Nx cache which can be self hosted on Google Cloud Storage.",
        "file": "external-generated/packages/powerpack-gcs-cache/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/powerpack-gcs-cache/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/powerpack-gcs-cache/powerpack-gcs-cache-plugin"
      }
    },
    "root": "/libs/nx-packages/powerpack-gcs-cache",
    "source": "/libs/nx-packages/powerpack-gcs-cache/src",
    "executors": {},
    "generators": {},
    "path": "/nx-api/powerpack-gcs-cache"
  },
  "powerpack-license": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "powerpack-license",
    "packageName": "@nx/powerpack-license",
    "description": "Package to provide the ability to activate and read licenses for Nx Powerpack.",
    "documents": {},
    "root": "/libs/nx-packages/powerpack-license",
    "source": "/libs/nx-packages/powerpack-license/src",
    "executors": {},
    "generators": {},
    "path": "/nx-api/powerpack-license"
  },
  "powerpack-owners": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "powerpack-owners",
    "packageName": "@nx/powerpack-owners",
    "description": "A Nx Powerpack plugin which provides the ability to configure and maintain codeowners for projects in Nx workspaces.",
    "documents": {
      "/nx-api/powerpack-owners/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "A Nx Powerpack plugin which provides the ability to configure and maintain codeowners for projects in Nx workspaces.",
        "file": "external-generated/packages/powerpack-owners/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/powerpack-owners/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/powerpack-owners/powerpack-owners-plugin"
      }
    },
    "root": "/libs/nx-packages/powerpack-owners",
    "source": "/libs/nx-packages/powerpack-owners/src",
    "executors": {},
    "generators": {
      "/nx-api/powerpack-owners/generators/init": {
        "description": "Initialize Nx Powerpack Owners config",
        "file": "external-generated/packages/powerpack-owners/generators/init.json",
        "hidden": false,
        "name": "init",
        "originalFilePath": "/libs/nx-packages/powerpack-owners/src/generators/init/schema.json",
        "path": "/nx-api/powerpack-owners/generators/init",
        "type": "generator"
      },
      "/nx-api/powerpack-owners/generators/sync-codeowners-file": {
        "description": "Sync Nx Powerpack Owners config to a CODEOWNERS file",
        "file": "external-generated/packages/powerpack-owners/generators/sync-codeowners-file.json",
        "hidden": false,
        "name": "sync-codeowners-file",
        "originalFilePath": "/libs/nx-packages/powerpack-owners/src/generators/sync-codeowners-file/schema.json",
        "path": "/nx-api/powerpack-owners/generators/sync-codeowners-file",
        "type": "generator"
      }
    },
    "path": "/nx-api/powerpack-owners"
  },
  "powerpack-s3-cache": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "powerpack-s3-cache",
    "packageName": "@nx/powerpack-s3-cache",
    "description": "A Nx Powerpack plugin which provides a Nx cache which can be self hosted on Amazon S3.",
    "documents": {
      "/nx-api/powerpack-s3-cache/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "A Nx Powerpack plugin which provides a Nx cache which can be self hosted on Amazon S3.",
        "file": "external-generated/packages/powerpack-s3-cache/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/powerpack-s3-cache/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/powerpack-s3-cache/powerpack-s3-cache-plugin"
      }
    },
    "root": "/libs/nx-packages/powerpack-s3-cache",
    "source": "/libs/nx-packages/powerpack-s3-cache/src",
    "executors": {},
    "generators": {
      "/nx-api/powerpack-s3-cache/generators/init": {
        "description": "Initialize the S3 Cache",
        "file": "external-generated/packages/powerpack-s3-cache/generators/init.json",
        "hidden": false,
        "name": "init",
        "originalFilePath": "/libs/nx-packages/powerpack-s3-cache/src/generators/init/schema.json",
        "path": "/nx-api/powerpack-s3-cache/generators/init",
        "type": "generator"
      }
    },
    "path": "/nx-api/powerpack-s3-cache"
  },
  "powerpack-shared-fs-cache": {
    "githubRoot": "https://github.com/nrwl/nx/blob/master",
    "name": "powerpack-shared-fs-cache",
    "packageName": "@nx/powerpack-shared-fs-cache",
    "description": "A Nx Powerpack plugin to enable you to use a shared file system directory",
    "documents": {
      "/nx-api/powerpack-shared-fs-cache/documents/overview": {
        "id": "overview",
        "name": "Overview",
        "description": "A Nx Powerpack plugin to enable you to use a shared file system directory",
        "file": "external-generated/packages/powerpack-shared-fs-cache/documents/overview",
        "itemList": [],
        "isExternal": false,
        "path": "/nx-api/powerpack-shared-fs-cache/documents/overview",
        "tags": [],
        "originalFilePath": "shared/packages/powerpack-shared-fs-cache/powerpack-shared-fs-cache-plugin"
      }
    },
    "root": "/libs/nx-packages/powerpack-shared-fs-cache",
    "source": "/libs/nx-packages/powerpack-shared-fs-cache/src",
    "executors": {},
    "generators": {
      "/nx-api/powerpack-shared-fs-cache/generators/init": {
        "description": "Add the shared fs cache",
        "file": "external-generated/packages/powerpack-shared-fs-cache/generators/init.json",
        "hidden": false,
        "name": "init",
        "originalFilePath": "/libs/nx-packages/powerpack-shared-fs-cache/src/generators/init/schema.json",
        "path": "/nx-api/powerpack-shared-fs-cache/generators/init",
        "type": "generator"
      }
    },
    "path": "/nx-api/powerpack-shared-fs-cache"
  }
}
