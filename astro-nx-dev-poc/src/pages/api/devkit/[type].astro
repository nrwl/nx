---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import { getCollection, render } from 'astro:content';

export async function getStaticPaths() {
  const docs = await getCollection(
    'devkit-docs',
    (doc) => doc.data.category !== 'Projects'
  );

  console.log('DevKit docs found:', docs.length);
  const categories = docs.reduce((acc, doc) => {
    console.log('Processing doc:', doc.id);
    const category = doc.data.category || 'Uncategorized';
    if (!acc[category]) {
      acc[category] = [];
    }
    acc[category].push(doc);
    return acc;
  }, {});

  console.log('Categories found:', Object.keys(categories).length);
  return Object.entries(categories).map(([category, docs]) => ({
    params: { type: category },
    props: {
      docs,
    },
  }));
}

const { docs } = Astro.props;
const { type } = Astro.params;
if (!docs) {
  throw new Error('DevKit documentation not found');
}

const docContent = await Promise.all(
  docs.map(
    async (doc) =>
      console.log(doc) || {
        doc,
        Content: (await render(doc)).Content,
      }
  )
);
---

<StarlightPage
  frontmatter={{
    title: `DevKit Documentation - ${type}`,
    description: `Documentation for the ${type} category in DevKit`,
  }}
>
  {
    docContent.map((doc) => (
      <section>
        <h2 id={doc.title?.toLowerCase()}>{doc.title}</h2>
        <p>{doc.description}</p>
        <doc.Content />
      </section>
    ))
  }
</StarlightPage>
