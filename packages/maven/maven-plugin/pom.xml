<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0           http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>dev.nx</groupId>
    <artifactId>nx-parent</artifactId>
    <version>0.0.6-SNAPSHOT</version>
    <relativePath>../../../pom.xml</relativePath>
  </parent>

  <groupId>dev.nx.maven</groupId>
  <artifactId>nx-maven-plugin</artifactId>
  <version>${project.parent.version}</version>
  <packaging>maven-plugin</packaging>

  <name>Nx Maven Plugin</name>
  <description>Maven plugin for Nx integration and project analysis</description>
  <url>https://github.com/nrwl/nx</url>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://github.com/nrwl/nx/blob/master/LICENSE</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Nx Team</name>
      <email>hello@nrwl.io</email>
      <organization>Nx</organization>
      <organizationUrl>https://nx.dev</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/nrwl/nx.git</connection>
    <developerConnection>scm:git:ssh://github.com:nrwl/nx.git</developerConnection>
    <url>https://github.com/nrwl/nx</url>
  </scm>

  <properties>
    <!-- Enable install, deploy, and signing for this module -->
    <maven.install.skip>false</maven.install.skip>
    <maven.deploy.skip>false</maven.deploy.skip>
    <maven.gpg.skip>false</maven.gpg.skip>
  </properties>

  <dependencies>
    <!-- Maven Plugin API -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>${maven.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Maven Core -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>${maven.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Maven Plugin Annotations -->
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <version>${maven.plugin.tools.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- JSON Processing -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <!-- Jackson Kotlin Module -->
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-kotlin</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <!-- Removed JavaParser - was causing StackOverflowError -->

    <!-- Maven Model -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <version>${maven.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- SLF4J API -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Kotlin -->
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib</artifactId>
      <version>${kotlin.version}</version>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-test</artifactId>
      <version>${kotlin.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Maven Plugin Testing Harness -->
    <dependency>
      <groupId>org.apache.maven.plugin-testing</groupId>
      <artifactId>maven-plugin-testing-harness</artifactId>
      <version>4.0.0-beta-4</version>
      <scope>test</scope>
    </dependency>

    <!-- Snapshot Testing -->
    <dependency>
      <groupId>de.skuzzle.test</groupId>
      <artifactId>snapshot-tests-junit5</artifactId>
      <version>1.11.0</version>
      <scope>test</scope>
    </dependency>

    <!-- JSON Serialization for Snapshots -->
    <dependency>
      <groupId>de.skuzzle.test</groupId>
      <artifactId>snapshot-tests-json</artifactId>
      <version>1.11.0</version>
      <scope>test</scope>
    </dependency>

    <!-- JUnit 4 for Maven Plugin Testing Harness -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>

    <!-- JUnit 5 -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit5.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- AssertJ -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Mockito -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- JGit for gitignore parsing -->
    <dependency>
      <groupId>org.eclipse.jgit</groupId>
      <artifactId>org.eclipse.jgit</artifactId>
      <version>6.8.0.202311291450-r</version>
    </dependency>


    <!-- Plexus Utils for XML parsing -->
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>3.5.1</version>
    </dependency>


  </dependencies>

  <build>
    <plugins>
      <!-- Kotlin Maven Plugin -->
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
      </plugin>

      <!-- Maven Compiler Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <!-- Maven Plugin Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <configuration>
          <goalPrefix>nx</goalPrefix>
        </configuration>
      </plugin>

      <!-- Maven Surefire Plugin for running tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <dependencies>
          <!-- Support for JUnit 4 tests (for Maven Plugin Testing Harness) -->
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit4</artifactId>
            <version>3.2.5</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- Maven Flatten Plugin - creates a flattened POM without parent references -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <outputDirectory>${project.build.directory}</outputDirectory>
        </configuration>
      </plugin>
    </plugins>
    <sourceDirectory>src/main/kotlin</sourceDirectory>
    <testSourceDirectory>src/test/kotlin</testSourceDirectory>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
          <!-- Use Dokka for Kotlin documentation instead of maven-javadoc-plugin -->
          <plugin>
            <groupId>org.jetbrains.dokka</groupId>
            <artifactId>dokka-maven-plugin</artifactId>
            <version>${dokka.version}</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <phase>package</phase>
                <goals>
                  <goal>javadocJar</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <dokkaPlugins>
                <plugin>
                  <groupId>org.jetbrains.dokka</groupId>
                  <artifactId>kotlin-as-java-plugin</artifactId>
                  <version>${dokka.version}</version>
                </plugin>
              </dokkaPlugins>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.sonatype.central</groupId>
            <artifactId>central-publishing-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
