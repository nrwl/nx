{
  "$schema": "https://json-schema.org/schema",
  "cli": "nx",
  "$id": "SchematicsNxNodeApp",
  "title": "Nx Application Options Schema",
  "description": "Nx Application Options Schema.",
  "type": "object",
  "properties": {
    "directory": {
      "description": "The directory of the new application.",
      "type": "string",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "Which directory do you want to create the application in?"
    },
    "name": {
      "description": "The name of the application.",
      "type": "string",
      "pattern": "^[a-zA-Z][^:]*$",
      "x-priority": "important"
    },
    "skipFormat": {
      "description": "Skip formatting files",
      "type": "boolean",
      "default": false,
      "x-priority": "internal"
    },
    "skipPackageJson": {
      "type": "boolean",
      "default": false,
      "description": "Do not add dependencies to `package.json`.",
      "x-priority": "internal"
    },
    "linter": {
      "description": "The tool to use for running lint checks.",
      "type": "string",
      "enum": ["eslint", "none"],
      "default": "none",
      "x-prompt": "Which linter would you like to use?",
      "x-priority": "important"
    },
    "unitTestRunner": {
      "type": "string",
      "enum": ["jest", "none"],
      "description": "Test runner to use for unit tests.",
      "default": "none",
      "x-priority": "important",
      "x-prompt": "Which unit test runner would you like to use?"
    },
    "e2eTestRunner": {
      "type": "string",
      "enum": ["jest", "none"],
      "description": "Test runner to use for end-to-end tests",
      "default": "none",
      "x-priority": "important",
      "x-prompt": "Which end-to-end test runner would you like to use?"
    },
    "tags": {
      "type": "string",
      "description": "Add tags to the application (used for linting)."
    },
    "frontendProject": {
      "type": "string",
      "description": "Frontend project that needs to access this application. This sets up proxy configuration.",
      "x-priority": "important",
      "x-dropdown": "projects"
    },
    "swcJest": {
      "type": "boolean",
      "description": "Use `@swc/jest` instead `ts-jest` for faster test compilation.",
      "default": false
    },
    "babelJest": {
      "type": "boolean",
      "description": "Use `babel` instead `ts-jest`.",
      "default": false,
      "x-deprecated": "Use --swcJest instead for faster compilation"
    },
    "js": {
      "type": "boolean",
      "description": "Generate JavaScript files rather than TypeScript files.",
      "default": false
    },
    "setParserOptionsProject": {
      "type": "boolean",
      "description": "Whether or not to configure the ESLint `parserOptions.project` option. We do not do this by default for lint performance reasons.",
      "default": false
    },
    "standaloneConfig": {
      "description": "Split the project configuration into `<projectRoot>/project.json` rather than including it inside `workspace.json`.",
      "type": "boolean",
      "default": true,
      "x-deprecated": "Nx only supports standaloneConfig"
    },
    "bundler": {
      "description": "Bundler which is used to package the application",
      "type": "string",
      "enum": ["esbuild", "webpack"],
      "default": "esbuild",
      "x-priority": "important"
    },
    "framework": {
      "description": "Generate the node application using a framework",
      "type": "string",
      "enum": ["express", "fastify", "koa", "nest", "none"],
      "default": "none",
      "x-prompt": "Which framework do you want to use?",
      "x-priority": "important"
    },
    "port": {
      "description": "The port which the server will be run on",
      "type": "number",
      "default": 3000
    },
    "rootProject": {
      "description": "Create node application at the root of the workspace",
      "type": "boolean",
      "default": false,
      "hidden": true,
      "x-priority": "internal"
    },
    "docker": {
      "type": "boolean",
      "description": "Add a docker build target"
    }
  },
  "required": ["directory"]
}
