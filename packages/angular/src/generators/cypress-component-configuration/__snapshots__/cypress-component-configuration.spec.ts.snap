// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cypress Component Testing Configuration should setup angular specific configs: component.ts 1`] = `
"import { mount } from 'cypress/angular';
// ***********************************************************
// This example support/component.ts is processed and
// loaded automatically before your test files.
//
// This is a great place to put global configuration and
// behavior that modifies Cypress.
//
// You can change the location of this file or turn off
// automatically serving support files with the
// 'supportFile' configuration option.
//
// You can read more here:
// https://on.cypress.io/configuration
// ***********************************************************

// Import commands.ts using ES2015 syntax:
import './commands';

// add component testing only related command here, such as mount
declare global {
  // eslint-disable-next-line @typescript-eslint/no-namespace
  namespace Cypress {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    interface Chainable<Subject> {
      
      mount: typeof mount;
    }
  }
}

Cypress.Commands.add('mount', mount);"
`;

exports[`Cypress Component Testing Configuration should work with complex component 1`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingOneComponent } from './something-one.component';

describe(SomethingOneComponent.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingOneComponent, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(SomethingOneComponent);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with complex component 2`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingTwoComponent } from './something-two.component';

describe(SomethingTwoComponent.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingTwoComponent, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(SomethingTwoComponent);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with complex component 3`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingThreeComponent } from './something-three.component';

describe(SomethingThreeComponent.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingThreeComponent, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(SomethingThreeComponent);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with complex standalone component 1`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingOneComponent } from './something-one.component';

describe(SomethingOneComponent.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingOneComponent, {
      add: {
        imports: [],
        providers: [],
      },
    });
  });

  it('renders', () => {
    cy.mount(SomethingOneComponent);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with complex standalone component 2`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingTwoComponent } from './something-two.component';

describe(SomethingTwoComponent.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingTwoComponent, {
      add: {
        imports: [],
        providers: [],
      },
    });
  });

  it('renders', () => {
    cy.mount(SomethingTwoComponent);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with complex standalone component 3`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingThreeComponent } from './something-three.component';

describe(SomethingThreeComponent.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingThreeComponent, {
      add: {
        imports: [],
        providers: [],
      },
    });
  });

  it('renders', () => {
    cy.mount(SomethingThreeComponent);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with secondary entry point libs 1`] = `
"import { TestBed } from '@angular/core/testing';
import { FancyButtonComponent } from './fancy-button.component';

describe(FancyButtonComponent.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(FancyButtonComponent, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(FancyButtonComponent);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with secondary entry point libs 2`] = `
"import { TestBed } from '@angular/core/testing';
import { StandaloneFancyButtonComponent } from './standalone-fancy-button.component';

describe(StandaloneFancyButtonComponent.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(StandaloneFancyButtonComponent, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(StandaloneFancyButtonComponent);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with simple components 1`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingOneComponent } from './something-one.component';

describe(SomethingOneComponent.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingOneComponent, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(SomethingOneComponent);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with simple components 2`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingTwoComponent } from './something-two.component';

describe(SomethingTwoComponent.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingTwoComponent, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(SomethingTwoComponent);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with simple components 3`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingThreeComponent } from './something-three.component';

describe(SomethingThreeComponent.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingThreeComponent, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(SomethingThreeComponent);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with standalone component 1`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingOneComponent } from './something-one.component';

describe(SomethingOneComponent.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingOneComponent, {
      add: {
        imports: [],
        providers: [],
      },
    });
  });

  it('renders', () => {
    cy.mount(SomethingOneComponent);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with standalone component 2`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingTwoComponent } from './something-two.component';

describe(SomethingTwoComponent.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingTwoComponent, {
      add: {
        imports: [],
        providers: [],
      },
    });
  });

  it('renders', () => {
    cy.mount(SomethingTwoComponent);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with standalone component 3`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingThreeComponent } from './something-three.component';

describe(SomethingThreeComponent.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingThreeComponent, {
      add: {
        imports: [],
        providers: [],
      },
    });
  });

  it('renders', () => {
    cy.mount(SomethingThreeComponent);
  });
});
"
`;
