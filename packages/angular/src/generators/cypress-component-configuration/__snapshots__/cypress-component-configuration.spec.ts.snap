// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cypress Component Testing Configuration should setup angular specific configs: component.ts 1`] = `
"import { mount } from 'cypress/angular';
// ***********************************************************
// This example support/component.ts is processed and
// loaded automatically before your test files.
//
// This is a great place to put global configuration and
// behavior that modifies Cypress.
//
// You can change the location of this file or turn off
// automatically serving support files with the
// 'supportFile' configuration option.
//
// You can read more here:
// https://on.cypress.io/configuration
// ***********************************************************

// Import commands.ts using ES2015 syntax:
import './commands';

// add component testing only related command here, such as mount
declare global {
  // eslint-disable-next-line @typescript-eslint/no-namespace
  namespace Cypress {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    interface Chainable<Subject> {
      
      mount: typeof mount;
    }
  }
}

Cypress.Commands.add('mount', mount);"
`;

exports[`Cypress Component Testing Configuration should work with complex component 1`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingOne } from './something-one';

describe(SomethingOne.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingOne, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(SomethingOne);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with complex component 2`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingTwo } from './something-two';

describe(SomethingTwo.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingTwo, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(SomethingTwo);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with complex component 3`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingThree } from './something-three';

describe(SomethingThree.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingThree, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(SomethingThree);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with complex standalone component 1`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingOne } from './something-one';

describe(SomethingOne.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingOne, {
      add: {
        imports: [],
        providers: [],
      },
    });
  });

  it('renders', () => {
    cy.mount(SomethingOne);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with complex standalone component 2`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingTwo } from './something-two';

describe(SomethingTwo.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingTwo, {
      add: {
        imports: [],
        providers: [],
      },
    });
  });

  it('renders', () => {
    cy.mount(SomethingTwo);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with complex standalone component 3`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingThree } from './something-three';

describe(SomethingThree.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingThree, {
      add: {
        imports: [],
        providers: [],
      },
    });
  });

  it('renders', () => {
    cy.mount(SomethingThree);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with secondary entry point libs 1`] = `
"import { TestBed } from '@angular/core/testing';
import { FancyButton } from './fancy-button';

describe(FancyButton.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(FancyButton, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(FancyButton);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with secondary entry point libs 2`] = `
"import { TestBed } from '@angular/core/testing';
import { StandaloneFancyButton } from './standalone-fancy-button';

describe(StandaloneFancyButton.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(StandaloneFancyButton, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(StandaloneFancyButton);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with simple components 1`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingOne } from './something-one';

describe(SomethingOne.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingOne, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(SomethingOne);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with simple components 2`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingTwo } from './something-two';

describe(SomethingTwo.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingTwo, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(SomethingTwo);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with simple components 3`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingThree } from './something-three';

describe(SomethingThree.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingThree, {
      add: {
        imports: [],
        providers: []
      }
    });
  });

  it('renders', () => {
    cy.mount(SomethingThree);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with standalone component 1`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingOne } from './something-one';

describe(SomethingOne.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingOne, {
      add: {
        imports: [],
        providers: [],
      },
    });
  });

  it('renders', () => {
    cy.mount(SomethingOne);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with standalone component 2`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingTwo } from './something-two';

describe(SomethingTwo.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingTwo, {
      add: {
        imports: [],
        providers: [],
      },
    });
  });

  it('renders', () => {
    cy.mount(SomethingTwo);
  });
});
"
`;

exports[`Cypress Component Testing Configuration should work with standalone component 3`] = `
"import { TestBed } from '@angular/core/testing';
import { SomethingThree } from './something-three';

describe(SomethingThree.name, () => {
  beforeEach(() => {
    TestBed.overrideComponent(SomethingThree, {
      add: {
        imports: [],
        providers: [],
      },
    });
  });

  it('renders', () => {
    cy.mount(SomethingThree);
  });
});
"
`;
