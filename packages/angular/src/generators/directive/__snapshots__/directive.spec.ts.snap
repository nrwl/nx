// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`directive generator --no-standalone should export the directive correctly when directory is nested deeper 1`] = `
"import { NgModule } from '@angular/core';
import { TestDirective } from './my-directives/test/test.directive';
@NgModule({
  imports: [],
  declarations: [TestDirective],
  exports: [TestDirective],
})
export class TestModule {}
"
`;

exports[`directive generator --no-standalone should generate a directive with test files and attach to the NgModule automatically 1`] = `
"import { Directive } from '@angular/core';

@Directive({
  selector: '[test]',
  standalone: false,
})
export class TestDirective {
  constructor() {}
}
"
`;

exports[`directive generator --no-standalone should generate a directive with test files and attach to the NgModule automatically 2`] = `
"import { TestDirective } from './test.directive';

describe('TestDirective', () => {
  it('should create an instance', () => {
    const directive = new TestDirective();
    expect(directive).toBeTruthy();
  });
});
"
`;

exports[`directive generator --no-standalone should generate a directive with test files and attach to the NgModule automatically 3`] = `
"import { NgModule } from '@angular/core';
import { TestDirective } from './test.directive';
@NgModule({
  imports: [],
  declarations: [TestDirective],
  exports: [],
})
export class TestModule {}
"
`;

exports[`directive generator --no-standalone should import the directive correctly 1`] = `null`;

exports[`directive generator --no-standalone should import the directive correctly 2`] = `null`;

exports[`directive generator --no-standalone should import the directive correctly 3`] = `
"import { NgModule } from '@angular/core';
import { TestDirective } from './test.directive';
@NgModule({
  imports: [],
  declarations: [TestDirective],
  exports: [],
})
export class TestModule {}
"
`;

exports[`directive generator --no-standalone should import the directive correctly when directory is nested deeper 1`] = `
"import { Directive } from '@angular/core';

@Directive({
  selector: '[test]',
  standalone: false
})
export class TestDirective {
  constructor() {}
}
"
`;

exports[`directive generator --no-standalone should import the directive correctly when directory is nested deeper 2`] = `
"import { TestDirective } from './test.directive';

describe('TestDirective', () => {
  it('should create an instance', () => {
    const directive = new TestDirective();
    expect(directive).toBeTruthy();
  });
});
"
`;

exports[`directive generator --no-standalone should import the directive correctly when directory is nested deeper 3`] = `
"import { NgModule } from '@angular/core';
import { TestDirective } from './my-directives/test/test.directive';
@NgModule({
  imports: [],
  declarations: [TestDirective],
  exports: [],
})
export class TestModule {}
"
`;

exports[`directive generator should generate correctly 1`] = `
"import { Directive } from '@angular/core';

@Directive({
  selector: '[test]',
})
export class TestDirective {
  constructor() {}
}
"
`;

exports[`directive generator should generate correctly 2`] = `
"import { TestDirective } from './test.directive';

describe('TestDirective', () => {
  it('should create an instance', () => {
    const directive = new TestDirective();
    expect(directive).toBeTruthy();
  });
});
"
`;

exports[`directive generator should handle path with file extension 1`] = `
"import { Directive } from '@angular/core';

@Directive({
  selector: '[test]',
})
export class TestDirective {
  constructor() {}
}
"
`;

exports[`directive generator should handle path with file extension 2`] = `
"import { TestDirective } from './test.directive';

describe('TestDirective', () => {
  it('should create an instance', () => {
    const directive = new TestDirective();
    expect(directive).toBeTruthy();
  });
});
"
`;
