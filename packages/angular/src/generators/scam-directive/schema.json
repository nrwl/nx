{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "SCAMDirectiveGenerator",
  "cli": "nx",
  "title": "SCAM Directive Generator Options Schema",
  "type": "object",
  "examples": [
    {
      "command": "nx g @nx/angular:scam-directive my-lib/src/lib/my-sample/my-sample",
      "description": "Generate a `MySampleDirective` directive in a `my-sample` folder in the `my-lib` library"
    }
  ],
  "description": "Creates a new, generic Angular directive definition in the given or default project.",
  "additionalProperties": false,
  "properties": {
    "path": {
      "type": "string",
      "description": "The file path to the SCAM directive without the file extension and suffix (e.g. `my-app/src/app/my-scam/my-scam` generates the file `my-app/src/app/my-scam/my-scam.directive.ts`). Relative to the current working directory.",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What is the SCAM directive file path?"
    },
    "name": {
      "type": "string",
      "description": "The directive symbol name. It not provided, it defaults to the last segment of the provided `path`."
    },
    "directory": {
      "type": "string",
      "description": "The directory at which to create the SCAM Directive files. When `--nameAndDirectoryFormat=as-provided`, it will be relative to the current working directory. Otherwise, it will be relative to the workspace root.",
      "aliases": ["dir", "path"],
      "x-priority": "important"
    },
    "nameAndDirectoryFormat": {
      "description": "Whether to generate the component in the directory as provided, relative to the current working directory and ignoring the project (`as-provided`) or generate it using the project and directory relative to the workspace root (`derived`).",
      "type": "string",
      "enum": ["as-provided", "derived"]
    },
    "project": {
      "type": "string",
      "description": "The name of the project.",
      "$default": {
        "$source": "projectName"
      },
      "x-dropdown": "projects",
      "x-deprecated": "Provide the `directory` option instead and use the `as-provided` format. The project will be determined from the directory provided. It will be removed in Nx v20."
    },
    "skipTests": {
      "type": "boolean",
      "description": "Do not create `spec.ts` test files for the new directive.",
      "default": false
    },
    "inlineScam": {
      "type": "boolean",
      "description": "Create the `NgModule` in the same file as the Directive.",
      "default": true,
      "x-priority": "important"
    },
    "flat": {
      "type": "boolean",
      "description": "Create the new files at the top level of the current project.",
      "default": true,
      "x-deprecated": "Provide the `directory` option instead and use the `as-provided` format. It will be removed in Nx v20."
    },
    "selector": {
      "type": "string",
      "format": "html-selector",
      "description": "The `HTML` selector to use for this directive."
    },
    "prefix": {
      "type": "string",
      "description": "The prefix to apply to the generated directive selector.",
      "alias": "p",
      "oneOf": [
        {
          "maxLength": 0
        },
        {
          "minLength": 1,
          "format": "html-selector"
        }
      ]
    },
    "export": {
      "type": "boolean",
      "description": "Specifies if the SCAM should be exported from the project's entry point (normally `index.ts`). It only applies to libraries.",
      "default": true,
      "x-priority": "important"
    },
    "skipFormat": {
      "description": "Skip formatting files.",
      "type": "boolean",
      "default": false,
      "x-priority": "internal"
    }
  },
  "required": ["path"]
}
