{
  "cli": "nx",
  "$id": "NxReactNativeApplication",
  "$schema": "https://json-schema.org/schema",
  "title": "Create a React Native Component for Nx",
  "description": "Create a React native Component for Nx.",
  "type": "object",
  "examples": [
    {
      "description": "Generate a component with the exported symbol matching the file name. It results in the component `Foo` at `mylib/src/lib/foo.tsx`",
      "command": "nx g @nx/react-native:component mylib/src/lib/foo.tsx"
    },
    {
      "description": "Generate a component with the exported symbol different from the file name. It results in the component `Custom` at `mylib/src/lib/foo.tsx`",
      "command": "nx g @nx/react-native:component mylib/src/lib/foo.tsx --name=custom"
    },
    {
      "description": "Generate a component without providing the file extension. It results in the component `Foo` at `mylib/src/lib/foo.tsx`",
      "command": "nx g @nx/react-native:component mylib/src/lib/foo"
    },
    {
      "description": "Generate a class component at `mylib/src/lib/foo.tsx`",
      "command": "nx g @nx/react-native:component mylib/src/lib/foo --classComponent"
    }
  ],
  "properties": {
    "path": {
      "type": "string",
      "description": "The file path to the component. Relative to the current working directory.",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What is the component file path?"
    },
    "name": {
      "type": "string",
      "description": "The component symbol name. Defaults to the last segment of the file path."
    },
    "js": {
      "type": "boolean",
      "description": "Generate JavaScript files rather than TypeScript files.",
      "x-deprecated": "Provide the full file path including the file extension in the `path` option. This option will be removed in Nx v21."
    },
    "skipTests": {
      "type": "boolean",
      "description": "When true, does not create `spec.ts` test files for the new component.",
      "default": false
    },
    "export": {
      "type": "boolean",
      "description": "When true, the component is exported from the project `index.ts` (if it exists).",
      "alias": "e",
      "default": false,
      "x-prompt": "Should this component be exported in the project?"
    },
    "classComponent": {
      "type": "boolean",
      "alias": "C",
      "description": "Use class components instead of functional component.",
      "default": false
    }
  },
  "required": ["path"]
}
