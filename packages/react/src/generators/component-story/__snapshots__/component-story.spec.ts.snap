// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`react:component-story default setup Other types of component definitions Component files with DEFAULT export React component defined as: PureComponent class & then default export new JSX transform should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with DEFAULT export React component defined as: PureComponent class & then default export should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with DEFAULT export React component defined as: arrow function should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with DEFAULT export React component defined as: arrow function without {..} should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with DEFAULT export React component defined as: component class & then default export new JSX transform should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with DEFAULT export React component defined as: component class & then default export should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with DEFAULT export React component defined as: default export function should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with DEFAULT export React component defined as: direct export of component class new JSX transform should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with DEFAULT export React component defined as: direct export of component class should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with DEFAULT export React component defined as: function and then export should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with NO DEFAULT export React component defined as: no default PureComponent class & then default export new JSX transform should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with NO DEFAULT export React component defined as: no default PureComponent class & then default export should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with NO DEFAULT export React component defined as: no default arrow function should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with NO DEFAULT export React component defined as: no default arrow function without {..} should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with NO DEFAULT export React component defined as: no default component class should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with NO DEFAULT export React component defined as: no default direct export of component class new JSX transform should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with NO DEFAULT export React component defined as: no default direct export of component class should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with NO DEFAULT export React component defined as: no default simple export function should properly setup the controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with NO DEFAULT export should create stories for all components in a file with no default export 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { One } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: One,
  title: 'One',
} satisfies Meta<typeof One>;
export default meta;

type Story = StoryObj<typeof One>;

export const Primary = {
  args: {},
} satisfies Story;

export const Heading = {
  args: {},
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/One/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with NO DEFAULT export should create stories for all components in a file with no default export 2`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Two } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Two,
  title: 'Two',
} satisfies Meta<typeof Two>;
export default meta;

type Story = StoryObj<typeof Two>;

export const Primary = {
  args: {},
} satisfies Story;

export const Heading = {
  args: {},
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Two/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup Other types of component definitions Component files with NO DEFAULT export should create stories for all components in a file with no default export 3`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Three } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Three,
  title: 'Three',
} satisfies Meta<typeof Three>;
export default meta;

type Story = StoryObj<typeof Three>;

export const Primary = {
  args: {
    name: '',
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Three/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup component with props and actions should setup controls based on the component props 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
  argTypes: {
    someAction: { action: 'someAction executed!' },
  },
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
    style: '',
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
    style: '',
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup component with props should setup controls based on the component destructured props defined in an inline literal type 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup component with props should setup controls based on the component destructured props without type 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: '',
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: '',
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup component with props should setup controls based on the component props defined in a literal type 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup component with props should setup controls based on the component props defined in an inline literal type 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup component with props should setup controls based on the component props defined in an interface 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {
    name: '',
    displayAge: false,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: '',
    displayAge: false,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup component without any props defined should create a story without controls 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { Test } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: Test,
  title: 'Test',
} satisfies Meta<typeof Test>;
export default meta;

type Story = StoryObj<typeof Test>;

export const Primary = {
  args: {},
} satisfies Story;

export const Heading = {
  args: {},
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Test/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup default component setup should properly set up the story 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { TestUiLib } from './test-ui-lib';
import { expect } from 'storybook/test';

const meta = {
  component: TestUiLib,
  title: 'TestUiLib',
} satisfies Meta<typeof TestUiLib>;
export default meta;

type Story = StoryObj<typeof TestUiLib>;

export const Primary = {
  args: {},
} satisfies Story;

export const Heading = {
  args: {},
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/TestUiLib/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`react:component-story default setup when using plain JS components should properly set up the story 1`] = `
"import componentName from './test-ui-libplain';
import { expect } from 'storybook/test';

export default {
  component: Test,
  title: 'Test',
};

export const Primary = {
  args: {},
};

export const Heading: Story = {
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/Welcome to Test!/gi)).toBeTruthy();
  },
};
"
`;

exports[`react:component-story using eslint - not using interaction tests should properly set up the story 1`] = `
"import type { Meta, StoryObj } from '@storybook/react-vite';
import { TestUiLib } from './test-ui-lib';

const meta = {
  component: TestUiLib,
  title: 'TestUiLib',
} satisfies Meta<typeof TestUiLib>;
export default meta;

type Story = StoryObj<typeof TestUiLib>;

export const Primary = {
  args: {},
} satisfies Story;
"
`;
