import { useState, useCallback } from 'react'

<%_ if (isTs) { _%>
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface <%= hookTypeName %> {
  count: number;
  increment: () => void;
}
<%_ } _%>

export function <%= hookName %>()<% if (isTs) { %>: <%= hookTypeName %><% } %> {
  const [count, setCount] = useState(0)
  const increment = useCallback(() => setCount((x) => x + 1), [])
  return { count, increment }
}

export default <%= hookName %>;
