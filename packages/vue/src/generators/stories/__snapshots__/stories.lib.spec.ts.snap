// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`vue:stories for libraries should create the stories with interaction tests 1`] = `
"import type { Meta, StoryObj } from '@storybook/vue3-vite';
import testUiLib from './test-ui-lib.vue';

import { expect } from 'storybook/test';

const meta = {
  component: testUiLib,
  title: 'testUiLib',
} satisfies Meta<typeof testUiLib>;
export default meta;

type Story = StoryObj<typeof meta>;

export const Primary = {
  args: {},
} satisfies Story;

export const Heading = {
  args: {},
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/testUiLib/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`vue:stories for libraries should create the stories with interaction tests 2`] = `
"import type { Meta, StoryObj } from '@storybook/vue3-vite';
import anotherCmp from './another-cmp.vue';

import { expect } from 'storybook/test';

const meta = {
  component: anotherCmp,
  title: 'anotherCmp',
} satisfies Meta<typeof anotherCmp>;
export default meta;

type Story = StoryObj<typeof meta>;

export const Primary = {
  args: {
    name: 'name',
    displayAge: false,
    age: 0,
  },
} satisfies Story;

export const Heading = {
  args: {
    name: 'name',
    displayAge: false,
    age: 0,
  },
  play: async ({ canvas }) => {
    await expect(canvas.getByText(/anotherCmp/gi)).toBeTruthy();
  },
} satisfies Story;
"
`;

exports[`vue:stories for libraries should create the stories without interaction tests 1`] = `
"import type { Meta, StoryObj } from '@storybook/vue3-vite';
import testUiLib from './test-ui-lib.vue';

const meta = {
  component: testUiLib,
  title: 'testUiLib',
} satisfies Meta<typeof testUiLib>;
export default meta;

type Story = StoryObj<typeof meta>;

export const Primary = {
  args: {},
} satisfies Story;
"
`;

exports[`vue:stories for libraries should create the stories without interaction tests 2`] = `
"import type { Meta, StoryObj } from '@storybook/vue3-vite';
import anotherCmp from './another-cmp.vue';

const meta = {
  component: anotherCmp,
  title: 'anotherCmp',
} satisfies Meta<typeof anotherCmp>;
export default meta;

type Story = StoryObj<typeof meta>;

export const Primary = {
  args: {
    name: 'name',
    displayAge: false,
    age: 0,
  },
} satisfies Story;
"
`;
