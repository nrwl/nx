{
  "$schema": "https://json-schema.org/schema",
  "cli": "nx",
  "$id": "NxVueLibrary",
  "title": "Create a Vue Library",
  "description": "Create a Vue Library for an Nx workspace.",
  "type": "object",
  "examples": [
    {
      "command": "nx g lib mylib --directory=libs/mylib",
      "description": "Generate `libs/mylib`"
    },
    {
      "command": "nx g lib mylib --appProject=myapp",
      "description": "Generate a library with routes and add them to `myapp`"
    }
  ],
  "properties": {
    "directory": {
      "type": "string",
      "description": "A directory where the lib is placed.",
      "alias": "dir",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "Which directory do you want to create the library in?"
    },
    "name": {
      "type": "string",
      "description": "Library name",
      "pattern": "(?:^@[a-zA-Z0-9-*~][a-zA-Z0-9-*._~]*\\/[a-zA-Z0-9-~][a-zA-Z0-9-._~]*|^[a-zA-Z][^:]*)$",
      "x-priority": "important"
    },
    "linter": {
      "description": "The tool to use for running lint checks.",
      "type": "string",
      "enum": ["eslint", "none"],
      "default": "none",
      "x-prompt": "Which linter would you like to use?",
      "x-priority": "important"
    },
    "unitTestRunner": {
      "type": "string",
      "enum": ["vitest", "none"],
      "description": "Test runner to use for unit tests.",
      "x-prompt": "What unit test runner should be used?",
      "default": "none",
      "x-priority": "important"
    },
    "inSourceTests": {
      "type": "boolean",
      "default": false,
      "description": "When using Vitest, separate spec files will not be generated and instead will be included within the source files."
    },
    "tags": {
      "type": "string",
      "description": "Add tags to the library (used for linting).",
      "alias": "t"
    },
    "skipFormat": {
      "description": "Skip formatting files.",
      "type": "boolean",
      "default": false,
      "x-priority": "internal"
    },
    "skipTsConfig": {
      "type": "boolean",
      "default": false,
      "description": "Do not update `tsconfig.json` for development experience.",
      "x-priority": "internal"
    },
    "routing": {
      "type": "boolean",
      "description": "Generate library with routes."
    },
    "appProject": {
      "type": "string",
      "description": "The application project to add the library route to.",
      "alias": "a"
    },
    "publishable": {
      "type": "boolean",
      "description": "Create a publishable library."
    },
    "importPath": {
      "type": "string",
      "description": "The library name used to import it, like `@myorg/my-awesome-lib`."
    },
    "component": {
      "type": "boolean",
      "description": "Generate a default component.",
      "default": false
    },
    "js": {
      "type": "boolean",
      "description": "Generate JavaScript files rather than TypeScript files.",
      "default": false
    },
    "strict": {
      "type": "boolean",
      "description": "Whether to enable tsconfig strict mode or not.",
      "default": true
    },
    "setParserOptionsProject": {
      "type": "boolean",
      "description": "Whether or not to configure the ESLint `parserOptions.project` option. We do not do this by default for lint performance reasons.",
      "default": false
    },
    "bundler": {
      "type": "string",
      "description": "The bundler to use. Choosing 'none' means this library is not buildable.",
      "enum": ["none", "vite"],
      "default": "none",
      "x-prompt": "Which bundler would you like to use to build the library? Choose 'none' to skip build setup.",
      "x-priority": "important"
    },
    "skipPackageJson": {
      "description": "Do not add dependencies to `package.json`.",
      "type": "boolean",
      "default": false,
      "x-priority": "internal"
    },
    "minimal": {
      "description": "Create a Vue library with a minimal setup, no separate test files.",
      "type": "boolean",
      "default": false
    }
  },
  "required": ["directory"]
}
